android.support.annotation.AnimRes -> android.support.annotation.AnimRes:
android.support.annotation.AnimatorRes -> android.support.annotation.AnimatorRes:
android.support.annotation.AnyRes -> android.support.annotation.AnyRes:
android.support.annotation.ArrayRes -> android.support.annotation.ArrayRes:
android.support.annotation.AttrRes -> android.support.annotation.AttrRes:
android.support.annotation.BoolRes -> android.support.annotation.BoolRes:
android.support.annotation.ColorRes -> android.support.annotation.ColorRes:
android.support.annotation.DimenRes -> android.support.annotation.DimenRes:
android.support.annotation.DrawableRes -> android.support.annotation.DrawableRes:
android.support.annotation.FractionRes -> android.support.annotation.FractionRes:
android.support.annotation.IdRes -> android.support.annotation.IdRes:
android.support.annotation.IntDef -> android.support.annotation.IntDef:
    long[] value() -> value
    boolean flag() -> flag
android.support.annotation.IntegerRes -> android.support.annotation.IntegerRes:
android.support.annotation.InterpolatorRes -> android.support.annotation.InterpolatorRes:
android.support.annotation.LayoutRes -> android.support.annotation.LayoutRes:
android.support.annotation.MenuRes -> android.support.annotation.MenuRes:
android.support.annotation.NonNull -> android.support.annotation.NonNull:
android.support.annotation.Nullable -> android.support.annotation.Nullable:
android.support.annotation.PluralsRes -> android.support.annotation.PluralsRes:
android.support.annotation.RawRes -> android.support.annotation.RawRes:
android.support.annotation.StringDef -> android.support.annotation.StringDef:
    java.lang.String[] value() -> value
android.support.annotation.StringRes -> android.support.annotation.StringRes:
android.support.annotation.StyleRes -> android.support.annotation.StyleRes:
android.support.annotation.StyleableRes -> android.support.annotation.StyleableRes:
android.support.annotation.XmlRes -> android.support.annotation.XmlRes:
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    android.os.Bundle mExtras -> mExtras
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    int BUILD_VERSION_CODE_KITKAT_WATCH -> BUILD_VERSION_CODE_KITKAT_WATCH
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1:
    java.lang.Runnable val$runnable -> val$runnable
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2:
    java.lang.Runnable val$runnable -> val$runnable
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3:
    int val$currentLayerType -> val$currentLayerType
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alpha(android.view.View,float) -> alpha
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationX(android.view.View,float) -> translationX
    void translationXBy(android.view.View,float) -> translationXBy
    void translationY(android.view.View,float) -> translationY
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibilitiy(android.view.View) -> includeChildForAccessibilitiy
    int[] access$100() -> access$100
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> access$200
    boolean access$300(android.view.View) -> access$300
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> LOG_TAG
    long RETURN_TO_ORIGINAL_POSITION_TIMEOUT -> RETURN_TO_ORIGINAL_POSITION_TIMEOUT
    float ACCELERATE_INTERPOLATION_FACTOR -> ACCELERATE_INTERPOLATION_FACTOR
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    float PROGRESS_BAR_HEIGHT -> PROGRESS_BAR_HEIGHT
    float MAX_SWIPE_DISTANCE_FACTOR -> MAX_SWIPE_DISTANCE_FACTOR
    int REFRESH_TRIGGER_DISTANCE -> REFRESH_TRIGGER_DISTANCE
    int INVALID_POINTER -> INVALID_POINTER
    android.support.v4.widget.SwipeProgressBar mProgressBar -> mProgressBar
    android.view.View mTarget -> mTarget
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    int mFrom -> mFrom
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mDistanceToTriggerSync -> mDistanceToTriggerSync
    int mMediumAnimationDuration -> mMediumAnimationDuration
    float mFromPercentage -> mFromPercentage
    float mCurrPercentage -> mCurrPercentage
    int mProgressBarHeight -> mProgressBarHeight
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    float mInitialMotionY -> mInitialMotionY
    float mLastMotionY -> mLastMotionY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> mAccelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    android.view.animation.Animation mShrinkTrigger -> mShrinkTrigger
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> mReturnToStartPositionListener
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> mShrinkAnimationListener
    java.lang.Runnable mReturnToStartPosition -> mReturnToStartPosition
    java.lang.Runnable mCancel -> mCancel
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setColorSchemeResources(int,int,int,int) -> setColorSchemeResources
    void setColorSchemeColors(int,int,int,int) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> startRefresh
    void updateContentOffsetTop(int) -> updateContentOffsetTop
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> updatePositionTimeout
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> access$300
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> access$500
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> access$702
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> access$802
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> access$902
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> access$700
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> access$1000
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> access$1100
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> access$402
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> access$1300
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> access$1500
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
cn.jpush.android.a -> cn.jpush.android.a:
    java.util.concurrent.atomic.AtomicBoolean k -> k
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    boolean i -> i
    boolean j -> j
    java.lang.String[] z -> z
    boolean a(android.content.Context) -> a
    android.content.pm.ApplicationInfo b(android.content.Context) -> b
cn.jpush.android.a.a -> cn.jpush.android.a.a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    double f -> f
    double g -> g
    java.lang.String z -> z
    int a() -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void a(java.lang.String) -> a
    java.lang.String toString() -> toString
    org.json.JSONArray b() -> b
cn.jpush.android.a.b -> cn.jpush.android.a.b:
    int a -> a
    int b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    int f -> f
    double g -> g
    android.telephony.PhoneStateListener h -> h
    double i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    android.telephony.TelephonyManager n -> n
    boolean o -> o
    java.lang.String p -> p
    java.util.ArrayList q -> q
    java.lang.String[] z -> z
    int a() -> a
    org.json.JSONArray b() -> b
    java.lang.String h() -> h
    org.json.JSONArray c() -> c
    int i() -> i
    int[] d() -> d
    boolean e() -> e
    boolean f() -> f
    float g() -> g
    void j() -> j
    boolean a(cn.jpush.android.a.b,boolean) -> a
    int a(cn.jpush.android.a.b,int) -> a
cn.jpush.android.a.c -> cn.jpush.android.a.c:
    cn.jpush.android.a.b a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
cn.jpush.android.a.d -> cn.jpush.android.a.d:
    java.lang.String a -> a
    boolean e -> e
    int b -> b
    boolean c -> c
    boolean f -> f
    int g -> g
    cn.jpush.android.a.b h -> h
    cn.jpush.android.a.g i -> i
    android.content.Context j -> j
    boolean d -> d
    int[] k -> k
    cn.jpush.android.a.f l -> l
    boolean m -> m
    android.content.BroadcastReceiver n -> n
    long o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    cn.jpush.android.a.i s -> s
    int t -> t
    java.util.Date u -> u
    org.json.JSONArray v -> v
    boolean w -> w
    boolean x -> x
    java.lang.String y -> y
    org.json.JSONArray z -> z
    java.lang.String[] A -> A
    java.lang.String a() -> a
    org.json.JSONArray b() -> b
    void a(org.json.JSONArray) -> a
    org.json.JSONArray c() -> c
    void b(org.json.JSONArray) -> b
    void d() -> d
    void e() -> e
    void f() -> f
    boolean a(android.content.Context) -> a
    void g() -> g
    android.content.Context a(cn.jpush.android.a.d) -> a
    cn.jpush.android.a.b b(cn.jpush.android.a.d) -> b
    cn.jpush.android.a.f c(cn.jpush.android.a.d) -> c
    int d(cn.jpush.android.a.d) -> d
    int a(cn.jpush.android.a.d,int) -> a
    cn.jpush.android.a.i e(cn.jpush.android.a.d) -> e
    void a(cn.jpush.android.a.d,java.lang.Object) -> a
    boolean f(cn.jpush.android.a.d) -> f
    int g(cn.jpush.android.a.d) -> g
    int[] h(cn.jpush.android.a.d) -> h
    boolean i(cn.jpush.android.a.d) -> i
    org.json.JSONArray a(cn.jpush.android.a.d,org.json.JSONArray) -> a
    android.content.BroadcastReceiver j(cn.jpush.android.a.d) -> j
    long k(cn.jpush.android.a.d) -> k
    boolean l(cn.jpush.android.a.d) -> l
    boolean a(cn.jpush.android.a.d,boolean) -> a
cn.jpush.android.a.e -> cn.jpush.android.a.e:
    cn.jpush.android.a.d a -> a
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.a.f -> cn.jpush.android.a.f:
    float b -> b
    org.json.JSONArray c -> c
    cn.jpush.android.a.d a -> a
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.a.g -> cn.jpush.android.a.g:
    android.content.Context c -> c
    android.location.LocationManager d -> d
    android.location.Location e -> e
    java.lang.String f -> f
    double a -> a
    double b -> b
    long g -> g
    android.location.LocationListener h -> h
    java.lang.String[] z -> z
    boolean a() -> a
    void b() -> b
    void a(android.location.Location) -> a
    void c() -> c
    java.lang.String d() -> d
    long e() -> e
    void a(cn.jpush.android.a.g,android.location.Location) -> a
cn.jpush.android.a.h -> cn.jpush.android.a.h:
    cn.jpush.android.a.g a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
cn.jpush.android.a.i -> cn.jpush.android.a.i:
    android.net.wifi.WifiManager a -> a
    java.lang.String z -> z
    java.util.List d() -> d
    boolean a() -> a
    android.net.wifi.WifiManager b() -> b
    org.json.JSONArray c() -> c
cn.jpush.android.a.j -> cn.jpush.android.a.j:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    cn.jpush.android.a.i d -> d
    java.lang.String[] z -> z
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.json.JSONObject a() -> a
    int compareTo(java.lang.Object) -> compareTo
cn.jpush.android.api.BasicPushNotificationBuilder -> cn.jpush.android.api.BasicPushNotificationBuilder:
    int notificationDefaults -> notificationDefaults
    int notificationFlags -> notificationFlags
    int statusBarDrawable -> statusBarDrawable
    java.lang.String developerArg0 -> developerArg0
    android.content.Context a -> a
    java.lang.String[] z -> z
    java.lang.String a() -> a
    void a(android.app.Notification) -> a
    java.lang.String toString() -> toString
    java.lang.String b() -> b
    void a(java.lang.String[]) -> a
    cn.jpush.android.api.PushNotificationBuilder a(java.lang.String) -> a
cn.jpush.android.api.CustomPushNotificationBuilder -> cn.jpush.android.api.CustomPushNotificationBuilder:
    int layout -> layout
    int layoutIconId -> layoutIconId
    int layoutTitleId -> layoutTitleId
    int layoutContentId -> layoutContentId
    int layoutIconDrawable -> layoutIconDrawable
    java.lang.String[] z -> z
    android.widget.RemoteViews b(java.lang.String) -> b
    java.lang.String toString() -> toString
    java.lang.String b() -> b
    void a(java.lang.String[]) -> a
cn.jpush.android.api.DefaultPushNotificationBuilder -> cn.jpush.android.api.DefaultPushNotificationBuilder:
    java.lang.String b -> b
    java.lang.String[] z -> z
    java.lang.String a() -> a
    android.widget.RemoteViews b(java.lang.String) -> b
    void a(android.app.Notification) -> a
    android.app.Notification a(java.lang.String,java.util.Map) -> a
cn.jpush.android.api.InstrumentedActivity -> cn.jpush.android.api.InstrumentedActivity:
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
cn.jpush.android.api.InstrumentedListActivity -> cn.jpush.android.api.InstrumentedListActivity:
    void onStart() -> onStart
    void onStop() -> onStop
    void onResume() -> onResume
    void onPause() -> onPause
cn.jpush.android.api.JPushInterface -> cn.jpush.android.api.JPushInterface:
    java.lang.String ACTION_CONNECTION_CHANGE -> ACTION_CONNECTION_CHANGE
    java.lang.String ACTION_REGISTRATION_ID -> ACTION_REGISTRATION_ID
    java.lang.String ACTION_UNREGISTER -> ACTION_UNREGISTER
    java.lang.String ACTION_STOPPUSH -> ACTION_STOPPUSH
    java.lang.String ACTION_RESTOREPUSH -> ACTION_RESTOREPUSH
    java.lang.String ACTION_MESSAGE_RECEIVED -> ACTION_MESSAGE_RECEIVED
    java.lang.String ACTION_NOTIFICATION_RECEIVED -> ACTION_NOTIFICATION_RECEIVED
    java.lang.String ACTION_NOTIFICATION_OPENED -> ACTION_NOTIFICATION_OPENED
    java.lang.String ACTION_NOTIFICATION_RECEIVED_PROXY -> ACTION_NOTIFICATION_RECEIVED_PROXY
    java.lang.String ACTION_STATUS -> ACTION_STATUS
    java.lang.String ACTION_ACTIVITY_OPENDED -> ACTION_ACTIVITY_OPENDED
    java.lang.String EXTRA_CONNECTION_CHANGE -> EXTRA_CONNECTION_CHANGE
    java.lang.String EXTRA_REGISTRATION_ID -> EXTRA_REGISTRATION_ID
    java.lang.String EXTRA_APP_KEY -> EXTRA_APP_KEY
    java.lang.String EXTRA_NOTIFICATION_DEVELOPER_ARG0 -> EXTRA_NOTIFICATION_DEVELOPER_ARG0
    java.lang.String EXTRA_NOTIFICATION_TITLE -> EXTRA_NOTIFICATION_TITLE
    java.lang.String EXTRA_PUSH_ID -> EXTRA_PUSH_ID
    java.lang.String EXTRA_MSG_ID -> EXTRA_MSG_ID
    java.lang.String EXTRA_NOTI_TYPE -> EXTRA_NOTI_TYPE
    java.lang.String EXTRA_ALERT -> EXTRA_ALERT
    java.lang.String EXTRA_MESSAGE -> EXTRA_MESSAGE
    java.lang.String EXTRA_CONTENT_TYPE -> EXTRA_CONTENT_TYPE
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_EXTRA -> EXTRA_EXTRA
    java.lang.String EXTRA_NOTIFICATION_ID -> EXTRA_NOTIFICATION_ID
    java.lang.String EXTRA_ACTIVITY_PARAM -> EXTRA_ACTIVITY_PARAM
    java.lang.String EXTRA_RICHPUSH_FILE_PATH -> EXTRA_RICHPUSH_FILE_PATH
    java.lang.String EXTRA_RICHPUSH_FILE_TYPE -> EXTRA_RICHPUSH_FILE_TYPE
    java.lang.String EXTRA_RICHPUSH_HTML_PATH -> EXTRA_RICHPUSH_HTML_PATH
    java.lang.String EXTRA_RICHPUSH_HTML_RES -> EXTRA_RICHPUSH_HTML_RES
    java.lang.String EXTRA_STATUS -> EXTRA_STATUS
    java.lang.Integer a -> a
    java.lang.String ACTION_RICHPUSH_CALLBACK -> ACTION_RICHPUSH_CALLBACK
    java.util.concurrent.ConcurrentHashMap b -> b
    cn.jpush.android.api.e c -> c
    java.util.concurrent.ConcurrentLinkedQueue d -> d
    java.lang.String[] z -> z
    void init(android.content.Context) -> init
    void resumePush(android.content.Context) -> resumePush
    void stopPush(android.content.Context) -> stopPush
    boolean isPushStopped(android.content.Context) -> isPushStopped
    void setDebugMode(boolean) -> setDebugMode
    void setDefaultPushNotificationBuilder(cn.jpush.android.api.BasicPushNotificationBuilder) -> setDefaultPushNotificationBuilder
    void setPushTime(android.content.Context,java.util.Set,int,int) -> setPushTime
    void setSilenceTime(android.content.Context,int,int,int,int) -> setSilenceTime
    void setPushNotificationBuilder(java.lang.Integer,cn.jpush.android.api.BasicPushNotificationBuilder) -> setPushNotificationBuilder
    boolean a(int) -> a
    cn.jpush.android.api.PushNotificationBuilder b(int) -> b
    void setAliasAndTags(android.content.Context,java.lang.String,java.util.Set) -> setAliasAndTags
    void a(android.content.Context,boolean,java.lang.String) -> a
    java.lang.String getRegistrationID(android.content.Context) -> getRegistrationID
    java.lang.String a(java.util.Set) -> a
    java.lang.String getUdid(android.content.Context) -> getUdid
    void setLatestNotificationNumber(android.content.Context,int) -> setLatestNotificationNumber
    void clearAllNotifications(android.content.Context) -> clearAllNotifications
    void clearNotificationById(android.content.Context,int) -> clearNotificationById
    void setAliasAndTags(android.content.Context,java.lang.String,java.util.Set,cn.jpush.android.api.TagAliasCallback) -> setAliasAndTags
    void a(android.content.Context,java.lang.String,java.util.Set,cn.jpush.android.api.TagAliasCallback,boolean) -> a
    void setTags(android.content.Context,java.util.Set,cn.jpush.android.api.TagAliasCallback) -> setTags
    void setAlias(android.content.Context,java.lang.String,cn.jpush.android.api.TagAliasCallback) -> setAlias
    java.util.Set filterValidTags(java.util.Set) -> filterValidTags
    void onResume(android.content.Context) -> onResume
    void onPause(android.content.Context) -> onPause
    void onFragmentResume(android.content.Context,java.lang.String) -> onFragmentResume
    void onFragmentPause(android.content.Context,java.lang.String) -> onFragmentPause
    void onKillProcess(android.content.Context) -> onKillProcess
    void reportNotificationOpened(android.content.Context,java.lang.String) -> reportNotificationOpened
    void setStatisticsSessionTimeout(long) -> setStatisticsSessionTimeout
    void setStatisticsEnable(boolean) -> setStatisticsEnable
    void initCrashHandler(android.content.Context) -> initCrashHandler
    boolean getConnectionState(android.content.Context) -> getConnectionState
    void addLocalNotification(android.content.Context,cn.jpush.android.data.JPushLocalNotification) -> addLocalNotification
    void removeLocalNotification(android.content.Context,long) -> removeLocalNotification
    void clearLocalNotifications(android.content.Context) -> clearLocalNotifications
cn.jpush.android.api.PushNotificationBuilder -> cn.jpush.android.api.PushNotificationBuilder:
    android.app.Notification a(java.lang.String,java.util.Map) -> a
    java.lang.String a() -> a
cn.jpush.android.api.TagAliasCallback -> cn.jpush.android.api.TagAliasCallback:
    void gotResult(int,java.lang.String,java.util.Set) -> gotResult
cn.jpush.android.api.a -> cn.jpush.android.api.a:
    java.lang.String a -> a
    long b -> b
cn.jpush.android.api.b -> cn.jpush.android.api.b:
    java.lang.String a -> a
    java.util.Set b -> b
    cn.jpush.android.api.TagAliasCallback c -> c
    java.lang.String[] z -> z
    java.lang.String toString() -> toString
cn.jpush.android.api.c -> cn.jpush.android.api.c:
    cn.jpush.android.api.c b -> b
    java.lang.Thread$UncaughtExceptionHandler c -> c
    android.content.Context d -> d
    boolean a -> a
    java.lang.String[] z -> z
    cn.jpush.android.api.c a() -> a
    void a(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(android.content.Context,org.json.JSONArray) -> a
    org.json.JSONArray d(android.content.Context) -> d
    void b(android.content.Context) -> b
    org.json.JSONArray a(android.content.Context,java.lang.Throwable) -> a
    org.json.JSONArray a(org.json.JSONArray,int) -> a
    org.json.JSONObject c(android.content.Context) -> c
cn.jpush.android.api.d -> cn.jpush.android.api.d:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
cn.jpush.android.api.e -> cn.jpush.android.api.e:
    java.lang.String c -> c
    java.util.concurrent.ExecutorService d -> d
    cn.jpush.android.api.e e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.ArrayList h -> h
    long i -> i
    long j -> j
    long k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    boolean a -> a
    boolean b -> b
    java.lang.ref.WeakReference q -> q
    org.json.JSONObject r -> r
    java.lang.Object s -> s
    java.lang.String[] z -> z
    void a(long) -> a
    boolean a() -> a
    void a(boolean) -> a
    cn.jpush.android.api.e b() -> b
    void a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    boolean c(android.content.Context,java.lang.String) -> c
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,long) -> a
    org.json.JSONObject d(android.content.Context) -> d
    boolean a(java.lang.String) -> a
    void a(cn.jpush.android.api.e,android.content.Context) -> a
    void b(cn.jpush.android.api.e,android.content.Context) -> b
cn.jpush.android.api.f -> cn.jpush.android.api.f:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.g -> cn.jpush.android.api.g:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.h -> cn.jpush.android.api.h:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.i -> cn.jpush.android.api.i:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.j -> cn.jpush.android.api.j:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.k -> cn.jpush.android.api.k:
    boolean b -> b
    boolean a -> a
    java.lang.String c -> c
    java.util.HashMap d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    void a(android.app.Application) -> a
    java.lang.String a(java.lang.String) -> a
    boolean a() -> a
    java.lang.String b(java.lang.String) -> b
    boolean a(boolean) -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String c(java.lang.String) -> c
    java.lang.String f() -> f
cn.jpush.android.api.l -> cn.jpush.android.api.l:
    java.lang.String[] z -> z
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
cn.jpush.android.api.m -> cn.jpush.android.api.m:
    java.util.Queue a -> a
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    void a(android.content.Context,int) -> a
    void a(android.content.Context,cn.jpush.android.data.d,int) -> a
    void a(android.content.Context,java.lang.String) -> a
    android.app.Notification a(android.content.Context,int,android.content.Intent,cn.jpush.android.data.d,boolean,boolean) -> a
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    void b(android.content.Context,cn.jpush.android.data.d) -> b
    cn.jpush.android.data.d c(android.content.Context,cn.jpush.android.data.d) -> c
    cn.jpush.android.data.d d(android.content.Context,cn.jpush.android.data.d) -> d
    void a(android.content.Context,cn.jpush.android.data.d,boolean,boolean) -> a
    int a(cn.jpush.android.data.d,int) -> a
    void a(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.d) -> a
    void a(android.content.Intent,java.util.Map,int) -> a
    int a(java.lang.String,int) -> a
    int a(int) -> a
    java.util.HashMap a(java.lang.String,java.lang.String[]) -> a
    int b(int) -> b
cn.jpush.android.api.n -> cn.jpush.android.api.n:
    android.content.Context a -> a
    cn.jpush.android.data.d b -> b
    void run() -> run
cn.jpush.android.api.o -> cn.jpush.android.api.o:
    cn.jpush.android.api.p a -> a
    int b -> b
    cn.jpush.android.data.d c -> c
    java.lang.String[] z -> z
    void a(boolean,java.lang.String) -> a
cn.jpush.android.api.p -> cn.jpush.android.api.p:
    android.app.NotificationManager a -> a
    android.app.Notification b -> b
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.api.q -> cn.jpush.android.api.q:
    int a -> a
    int b -> b
    java.lang.String[] z -> z
    void a(android.view.WindowManager,android.webkit.WebView,android.widget.ImageButton) -> a
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    int a() -> a
    int b() -> b
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,android.view.WindowManager,android.webkit.WebView,android.widget.ImageButton) -> a
cn.jpush.android.api.r -> cn.jpush.android.api.r:
    cn.jpush.android.data.d a -> a
    android.content.Context b -> b
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.api.s -> cn.jpush.android.api.s:
    android.view.WindowManager a -> a
    android.webkit.WebView b -> b
    android.widget.ImageButton c -> c
    cn.jpush.android.api.r d -> d
    void onClick(android.view.View) -> onClick
cn.jpush.android.api.t -> cn.jpush.android.api.t:
    android.content.Context a -> a
    android.view.WindowManager b -> b
    android.webkit.WebView c -> c
    android.widget.ImageButton d -> d
    java.lang.String[] z -> z
    int getWindowWidth() -> getWindowWidth
    int getWindowHeight() -> getWindowHeight
    void startActivityByName(java.lang.String,java.lang.String) -> startActivityByName
    void close() -> close
cn.jpush.android.b -> cn.jpush.android.b:
    java.lang.String a -> a
    java.lang.String b -> b
cn.jpush.android.c -> cn.jpush.android.c:
    cn.jpush.android.c a -> a
    cn.jpush.android.c b -> b
    cn.jpush.android.c c -> c
    cn.jpush.android.c d -> d
    cn.jpush.android.c e -> e
    cn.jpush.android.c f -> f
    cn.jpush.android.c g -> g
    cn.jpush.android.c h -> h
    cn.jpush.android.c i -> i
    cn.jpush.android.c j -> j
    cn.jpush.android.c k -> k
    cn.jpush.android.c l -> l
    cn.jpush.android.c m -> m
    cn.jpush.android.c n -> n
    cn.jpush.android.c o -> o
    cn.jpush.android.c p -> p
    cn.jpush.android.c q -> q
    cn.jpush.android.c r -> r
    cn.jpush.android.c[] s -> s
    java.lang.String[] z -> z
    cn.jpush.android.c[] values() -> values
    cn.jpush.android.c valueOf(java.lang.String) -> valueOf
cn.jpush.android.d -> cn.jpush.android.d:
cn.jpush.android.data.JPushLocalNotification -> cn.jpush.android.data.JPushLocalNotification:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    long i -> i
    long j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String[] z -> z
    java.lang.String toJSON() -> toJSON
    void a(java.lang.String,java.lang.String,org.json.JSONObject) -> a
    void setNotificationId(long) -> setNotificationId
    long getNotificationId() -> getNotificationId
    void setBroadcastTime(long) -> setBroadcastTime
    void setBroadcastTime(java.util.Date) -> setBroadcastTime
    void setBroadcastTime(int,int,int,int,int,int) -> setBroadcastTime
    long getBroadcastTime() -> getBroadcastTime
    void setExtras(java.lang.String) -> setExtras
    java.lang.String getExtras() -> getExtras
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    long getBuilderId() -> getBuilderId
    void setBuilderId(long) -> setBuilderId
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
cn.jpush.android.data.a -> cn.jpush.android.data.a:
    org.json.JSONObject a -> a
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    cn.jpush.android.data.d a(cn.jpush.android.data.a) -> a
cn.jpush.android.data.b -> cn.jpush.android.data.b:
    void a(android.content.Context) -> a
    boolean a(android.content.Context,org.json.JSONObject) -> a
cn.jpush.android.data.c -> cn.jpush.android.data.c:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    cn.jpush.android.data.c c -> c
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    cn.jpush.android.data.c a(android.content.Context) -> a
    void a(android.content.Context,cn.jpush.android.data.d,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
cn.jpush.android.data.d -> cn.jpush.android.data.d:
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    int f -> f
    int g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    boolean q -> q
    java.lang.String r -> r
    boolean s -> s
    java.lang.String t -> t
    boolean u -> u
    java.util.List v -> v
    boolean w -> w
    int x -> x
    java.lang.String y -> y
    int z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.util.List C -> C
    int D -> D
    int E -> E
    int F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    int I -> I
    int J -> J
    int K -> K
    boolean L -> L
    boolean M -> M
    boolean N -> N
    boolean a -> a
    boolean O -> O
    int P -> P
    java.lang.String Q -> Q
    java.util.ArrayList R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String[] W -> W
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    boolean b(android.content.Context,org.json.JSONObject) -> b
    boolean f() -> f
    void a(boolean) -> a
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    cn.jpush.android.data.d a(android.content.Context,cn.jpush.android.data.d) -> a
    boolean a(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
    java.lang.String g() -> g
    cn.jpush.android.data.e h() -> h
cn.jpush.android.data.e -> cn.jpush.android.data.e:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.jpush.android.data.d c -> c
    java.lang.String[] z -> z
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
cn.jpush.android.data.f -> cn.jpush.android.data.f:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] z -> z
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int a() -> a
    org.json.JSONObject b() -> b
cn.jpush.android.data.g -> cn.jpush.android.data.g:
    android.widget.LinearLayout c -> c
    android.widget.LinearLayout d -> d
    android.widget.LinearLayout e -> e
    android.widget.LinearLayout f -> f
    android.widget.LinearLayout g -> g
    android.widget.LinearLayout h -> h
    android.widget.ImageView i -> i
    android.widget.TextView j -> j
    android.widget.ScrollView k -> k
    android.widget.TextView l -> l
    android.widget.TextView m -> m
    android.widget.TextView n -> n
    android.widget.TextView o -> o
    android.widget.TextView p -> p
    android.widget.TextView q -> q
    android.widget.ImageView r -> r
    android.widget.Button s -> s
    android.widget.Button t -> t
    android.content.Context u -> u
    android.graphics.Bitmap v -> v
    android.graphics.Bitmap w -> w
    int x -> x
    int y -> y
    float z -> z
    int[][] a -> a
    android.webkit.WebView A -> A
    cn.jpush.android.data.d B -> B
    android.graphics.Bitmap C -> C
    android.graphics.Bitmap D -> D
    android.os.Handler b -> b
    java.lang.String[] E -> E
    void a(android.widget.LinearLayout) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void a(java.lang.String,boolean,boolean) -> a
    void a() -> a
    void a(android.view.View$OnClickListener) -> a
    android.widget.ImageView a(cn.jpush.android.data.g) -> a
    android.graphics.Bitmap b(cn.jpush.android.data.g) -> b
    android.widget.ImageView c(cn.jpush.android.data.g) -> c
    android.graphics.Bitmap d(cn.jpush.android.data.g) -> d
cn.jpush.android.data.h -> cn.jpush.android.data.h:
    cn.jpush.android.data.g a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.data.i -> cn.jpush.android.data.i:
    java.lang.String[] a -> a
    android.content.Context b -> b
    cn.jpush.android.data.j c -> c
    android.database.sqlite.SQLiteDatabase d -> d
    java.lang.String[] z -> z
    void a() -> a
    void b() -> b
    long a(long,int,int,int,java.lang.String,long,long) -> a
    android.database.Cursor a(long,int) -> a
    boolean b(long,int,int,int,java.lang.String,long,long) -> b
    android.database.Cursor a(int,long) -> a
    boolean c() -> c
    android.database.Cursor a(long,long) -> a
    void a(android.database.Cursor,cn.jpush.android.data.k) -> a
cn.jpush.android.data.j -> cn.jpush.android.data.j:
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.jpush.android.data.k -> cn.jpush.android.data.k:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    long f -> f
    long g -> g
    java.lang.String[] z -> z
    int a() -> a
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    int c() -> c
    void c(int) -> c
    void d(int) -> d
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    long e() -> e
    void a(long) -> a
    long f() -> f
    void b(long) -> b
    java.lang.String toString() -> toString
cn.jpush.android.data.l -> cn.jpush.android.data.l:
    java.lang.String a -> a
    java.lang.String W -> W
    boolean X -> X
    boolean Y -> Y
    int Z -> Z
    boolean aa -> aa
    int ab -> ab
    java.lang.String ac -> ac
    cn.jpush.android.data.o ad -> ad
    java.lang.String ae -> ae
    boolean af -> af
    boolean ag -> ag
    java.lang.String ah -> ah
    boolean ai -> ai
    java.lang.String[] bb -> bb
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    void a(cn.jpush.android.data.l,cn.jpush.android.data.l,android.content.Context) -> a
cn.jpush.android.data.m -> cn.jpush.android.data.m:
    cn.jpush.android.data.l a -> a
    android.content.Context b -> b
    int c -> c
    cn.jpush.android.data.l d -> d
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.data.n -> cn.jpush.android.data.n:
    android.content.Context a -> a
    int b -> b
    cn.jpush.android.data.l c -> c
    cn.jpush.android.data.l d -> d
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.data.o -> cn.jpush.android.data.o:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean i -> i
    java.lang.String j -> j
    java.util.ArrayList k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    cn.jpush.android.data.l o -> o
    java.lang.String[] z -> z
    org.json.JSONObject a() -> a
    java.lang.String toString() -> toString
cn.jpush.android.data.p -> cn.jpush.android.data.p:
    java.lang.String[] z -> z
    cn.jpush.android.data.a a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,cn.jpush.android.data.a) -> a
    void a(android.content.Context,java.lang.String) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,java.lang.String) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    boolean a(boolean,int,android.content.Context) -> a
cn.jpush.android.data.q -> cn.jpush.android.data.q:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    void run() -> run
cn.jpush.android.data.r -> cn.jpush.android.data.r:
    cn.jpush.android.data.r a -> a
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    cn.jpush.android.data.r c(android.content.Context) -> c
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    android.database.Cursor a(android.content.Context) -> a
    android.database.Cursor b(android.content.Context) -> b
    boolean a(android.content.Context,int) -> a
    boolean b(android.content.Context,int) -> b
cn.jpush.android.data.s -> cn.jpush.android.data.s:
    java.lang.String a -> a
    int W -> W
    boolean X -> X
    java.util.ArrayList Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String[] bb -> bb
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
cn.jpush.android.data.t -> cn.jpush.android.data.t:
    android.content.Context a -> a
    cn.jpush.android.data.s b -> b
    cn.jpush.android.data.s c -> c
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.data.u -> cn.jpush.android.data.u:
    java.lang.String[] a -> a
    android.content.Context b -> b
    cn.jpush.android.data.v c -> c
    android.database.sqlite.SQLiteDatabase d -> d
    java.lang.String[] z -> z
    void a() -> a
    void b() -> b
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int) -> a
    boolean b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int) -> b
    boolean a(java.lang.String) -> a
    void c() -> c
    android.database.Cursor b(java.lang.String) -> b
    cn.jpush.android.data.w a(android.database.Cursor) -> a
    android.database.Cursor d() -> d
    android.database.Cursor e() -> e
    int a(boolean) -> a
cn.jpush.android.data.v -> cn.jpush.android.data.v:
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.jpush.android.data.w -> cn.jpush.android.data.w:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    java.lang.String[] z -> z
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    int f() -> f
    void a(int) -> a
    int g() -> g
    void b(int) -> b
    int h() -> h
    void c(int) -> c
    int i() -> i
    void d(int) -> d
    int j() -> j
    void e(int) -> e
    int k() -> k
    void f(int) -> f
    java.lang.String toString() -> toString
cn.jpush.android.data.x -> cn.jpush.android.data.x:
    java.lang.String[] bb -> bb
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
cn.jpush.android.data.y -> cn.jpush.android.data.y:
    int a -> a
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String[] ab -> ab
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
cn.jpush.android.service.AlarmReceiver -> cn.jpush.android.service.AlarmReceiver:
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.service.DownloadService -> cn.jpush.android.service.DownloadService:
    android.os.Bundle b -> b
    java.util.concurrent.ConcurrentLinkedQueue a -> a
    android.app.NotificationManager c -> c
    cn.jpush.android.data.d d -> d
    cn.jpush.android.service.f e -> e
    android.app.Notification f -> f
    android.widget.RemoteViews g -> g
    java.lang.Integer h -> h
    java.lang.Integer i -> i
    java.lang.Integer j -> j
    java.lang.Integer k -> k
    java.lang.Integer l -> l
    android.os.Handler m -> m
    java.lang.String[] z -> z
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void a(cn.jpush.android.data.d,int,long,long) -> a
    void a(cn.jpush.android.data.d,boolean) -> a
    boolean a() -> a
    void a(android.content.Context) -> a
    cn.jpush.android.data.d a(cn.jpush.android.service.DownloadService) -> a
    void a(cn.jpush.android.service.DownloadService,cn.jpush.android.data.d,int,long,long) -> a
    android.os.Handler b(cn.jpush.android.service.DownloadService) -> b
    void a(cn.jpush.android.service.DownloadService,cn.jpush.android.data.d) -> a
    android.app.NotificationManager c(cn.jpush.android.service.DownloadService) -> c
    void a(cn.jpush.android.service.DownloadService,int,cn.jpush.android.data.d,int) -> a
cn.jpush.android.service.PushProtocol -> cn.jpush.android.service.PushProtocol:
    int InitConn() -> InitConn
    int HbJPush(int,long) -> HbJPush
    int RegPush(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> RegPush
    int LogPushWithBack(int,byte[],long,java.lang.String,java.lang.String,long) -> LogPushWithBack
    int MsgResponse(int,int,long,byte,long) -> MsgResponse
    int RecvPush(int,byte[],int) -> RecvPush
    int RepPush(int,long,byte,java.lang.String) -> RepPush
    int UnChnelId(int,long,java.lang.String,java.lang.String) -> UnChnelId
    int EnChannel(int,long,java.lang.String,java.lang.String) -> EnChannel
    int TagAlias(int,long,java.lang.String,java.lang.String,int) -> TagAlias
    int PushTime(int,long,java.lang.String,java.lang.String) -> PushTime
    int Close(int) -> Close
    int Stop(int) -> Stop
    int InitPush(int,java.lang.String,int) -> InitPush
    java.lang.String GetEsg(int) -> GetEsg
    int GetSdkVersion() -> GetSdkVersion
cn.jpush.android.service.PushReceiver -> cn.jpush.android.service.PushReceiver:
    cn.jpush.android.data.d a -> a
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.service.PushService -> cn.jpush.android.service.PushService:
    long a -> a
    boolean b -> b
    boolean c -> c
    int d -> d
    long e -> e
    long f -> f
    long g -> g
    long h -> h
    int i -> i
    long j -> j
    long k -> k
    long l -> l
    long m -> m
    long n -> n
    long K -> K
    long L -> L
    boolean M -> M
    boolean N -> N
    java.lang.String o -> o
    int p -> p
    java.lang.String O -> O
    boolean P -> P
    java.lang.String Q -> Q
    int R -> R
    java.lang.String q -> q
    java.lang.String S -> S
    java.lang.String T -> T
    int U -> U
    int V -> V
    boolean r -> r
    boolean s -> s
    java.lang.String W -> W
    long t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    int w -> w
    byte[] x -> x
    java.util.Queue y -> y
    java.util.Queue z -> z
    cn.jpush.android.service.n X -> X
    boolean Y -> Y
    boolean Z -> Z
    boolean aa -> aa
    boolean ab -> ab
    boolean ac -> ac
    boolean ad -> ad
    int ae -> ae
    boolean A -> A
    cn.jpush.android.a.d af -> af
    boolean ag -> ag
    java.lang.String B -> B
    boolean C -> C
    boolean D -> D
    java.util.List ah -> ah
    int E -> E
    int ai -> ai
    int aj -> aj
    long ak -> ak
    long al -> al
    int am -> am
    int an -> an
    int ao -> ao
    java.lang.String F -> F
    java.lang.String G -> G
    boolean H -> H
    java.net.InetAddress[] I -> I
    java.net.InetAddress J -> J
    boolean ap -> ap
    boolean aq -> aq
    java.util.Queue ar -> ar
    java.lang.String as -> as
    java.lang.String at -> at
    java.lang.String au -> au
    android.os.Handler av -> av
    java.lang.String[] bb -> bb
    void a(boolean) -> a
    boolean a() -> a
    void b(boolean) -> b
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    void a(int) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void b(int) -> b
    void c(int) -> c
    void c(boolean) -> c
    void d(int) -> d
    long a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void d(boolean) -> d
    boolean c() -> c
    void a(int,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(int,java.lang.String,int) -> a
    int n() -> n
    void o() -> o
    boolean a(java.lang.String,int) -> a
    void e(boolean) -> e
    void h(java.lang.String) -> h
    byte[] p() -> p
    void q() -> q
    boolean c(android.content.Context) -> c
    void d() -> d
    void e() -> e
    void a(boolean,boolean,boolean) -> a
    java.lang.String b(byte[],int) -> b
    void r() -> r
    java.lang.String s() -> s
    java.lang.String t() -> t
    void f() -> f
    int a(int,long,java.lang.String,java.lang.String,int) -> a
    void e(int) -> e
    void u() -> u
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void l(java.lang.String) -> l
    void m(java.lang.String) -> m
    void n(java.lang.String) -> n
    void o(java.lang.String) -> o
    void a(int,long) -> a
    void g() -> g
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void f(int) -> f
    void v() -> v
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,int) -> b
    void g(int) -> g
    void h(int) -> h
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void a(java.lang.String,java.lang.String,int) -> a
    void b(java.lang.String,java.lang.String,int) -> b
    boolean i(int) -> i
    void e(java.lang.String,java.lang.String) -> e
    void w() -> w
    void j(int) -> j
    java.lang.String f(java.lang.String,java.lang.String) -> f
    void g(java.lang.String,java.lang.String) -> g
    void x() -> x
    void onDestroy() -> onDestroy
    void y() -> y
    void z() -> z
    void A() -> A
    void B() -> B
    void C() -> C
    void a(android.content.Context,java.lang.String) -> a
    cn.jpush.android.a.d a(android.content.Context,java.lang.String,boolean,boolean) -> a
    int a(cn.jpush.android.service.PushService) -> a
    boolean h() -> h
    boolean f(boolean) -> f
    int a(cn.jpush.android.service.PushService,int) -> a
    boolean i() -> i
    void b(cn.jpush.android.service.PushService) -> b
    void b(cn.jpush.android.service.PushService,int) -> b
    long a(cn.jpush.android.service.PushService,long) -> a
    java.lang.String a(byte[],int) -> a
    boolean a(cn.jpush.android.service.PushService,boolean) -> a
    boolean b(cn.jpush.android.service.PushService,boolean) -> b
    void a(cn.jpush.android.service.PushService,boolean,boolean,boolean) -> a
    void c(cn.jpush.android.service.PushService) -> c
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String e(java.lang.String) -> e
    java.lang.String f(java.lang.String) -> f
    java.lang.String g(java.lang.String) -> g
    boolean m() -> m
    void d(cn.jpush.android.service.PushService) -> d
    cn.jpush.android.service.n e(cn.jpush.android.service.PushService) -> e
    void f(cn.jpush.android.service.PushService) -> f
    void c(cn.jpush.android.service.PushService,boolean) -> c
    void g(cn.jpush.android.service.PushService) -> g
    boolean c(cn.jpush.android.service.PushService,int) -> c
cn.jpush.android.service.ServiceInterface -> cn.jpush.android.service.ServiceInterface:
    long a -> a
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    int h -> h
    java.lang.String b -> b
    java.util.WeakHashMap c -> c
    java.util.concurrent.ConcurrentHashMap d -> d
    boolean i -> i
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    void a(android.content.Context,int) -> a
    void b(android.content.Context) -> b
    void b(android.content.Context,int) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,cn.jpush.android.api.b) -> a
    cn.jpush.android.api.b a(int) -> a
    void b(int) -> b
    void a(android.content.Context,boolean,java.lang.String) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    void c(android.content.Context) -> c
    void c(android.content.Context,int) -> c
    void d(android.content.Context) -> d
    void a(java.lang.String,int,android.content.Context) -> a
    void a(java.lang.String,int,java.lang.String,android.content.Context) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void e(android.content.Context) -> e
    void a(java.lang.String) -> a
    void c(int) -> c
    void b(java.lang.String) -> b
    void d(int) -> d
    void f(android.content.Context) -> f
    void d(android.content.Context,int) -> d
    void g(android.content.Context) -> g
    boolean a() -> a
    java.lang.String b() -> b
    boolean a(android.content.Context,int,int,int,int) -> a
    boolean h(android.content.Context) -> h
    int i(android.content.Context) -> i
    boolean j(android.content.Context) -> j
    void a(android.content.Context,boolean) -> a
    java.lang.String c() -> c
    int d() -> d
    java.lang.String e() -> e
    int f() -> f
cn.jpush.android.service.a -> cn.jpush.android.service.a:
    cn.jpush.android.service.b c -> c
    long d -> d
    long e -> e
    android.os.Bundle f -> f
    boolean a -> a
    boolean b -> b
    java.lang.String[] z -> z
    int a(android.content.Context,cn.jpush.android.service.c,cn.jpush.android.data.d) -> a
    void a(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,org.apache.http.HttpEntity) -> a
    org.apache.http.impl.client.DefaultHttpClient a() -> a
    org.apache.http.client.methods.HttpGet a(java.lang.String,long) -> a
    long a(org.apache.http.HttpResponse) -> a
    int a(long) -> a
    boolean a(int) -> a
    long a(cn.jpush.android.service.a) -> a
    long b(cn.jpush.android.service.a) -> b
    cn.jpush.android.service.b c(cn.jpush.android.service.a) -> c
cn.jpush.android.service.b -> cn.jpush.android.service.b:
    cn.jpush.android.service.c b -> b
    cn.jpush.android.service.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.c -> cn.jpush.android.service.c:
    void a(java.lang.String,boolean) -> a
    void a(int) -> a
    void a(long,long) -> a
cn.jpush.android.service.d -> cn.jpush.android.service.d:
    boolean a -> a
    int b -> b
    cn.jpush.android.service.DownloadService c -> c
    java.lang.String[] z -> z
    void a(long,long) -> a
    void a(java.lang.String,boolean) -> a
    void a(int) -> a
cn.jpush.android.service.e -> cn.jpush.android.service.e:
    cn.jpush.android.service.DownloadService a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.f -> cn.jpush.android.service.f:
    android.content.Context b -> b
    cn.jpush.android.service.DownloadService a -> a
    java.lang.String z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.g -> cn.jpush.android.service.g:
    cn.jpush.android.service.g a -> a
    java.util.concurrent.ExecutorService b -> b
    android.os.Handler c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    cn.jpush.android.data.i f -> f
    cn.jpush.android.data.k g -> g
    java.lang.String[] z -> z
    cn.jpush.android.service.g a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean a(android.content.Context,long) -> a
    boolean a(android.content.Context,cn.jpush.android.data.JPushLocalNotification) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void a(long,long) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(cn.jpush.android.service.g,android.content.Context) -> a
    cn.jpush.android.data.i a() -> a
    android.content.Context a(cn.jpush.android.service.g) -> a
    cn.jpush.android.data.i a(cn.jpush.android.data.i) -> a
    cn.jpush.android.data.k b() -> b
    java.lang.String b(cn.jpush.android.service.g) -> b
    void a(cn.jpush.android.service.g,android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
cn.jpush.android.service.h -> cn.jpush.android.service.h:
    android.content.Context a -> a
    cn.jpush.android.service.g b -> b
    void run() -> run
cn.jpush.android.service.i -> cn.jpush.android.service.i:
    long a -> a
    cn.jpush.android.service.g b -> b
    void run() -> run
cn.jpush.android.service.j -> cn.jpush.android.service.j:
    cn.jpush.android.data.d a -> a
    cn.jpush.android.service.PushService b -> b
    void run() -> run
cn.jpush.android.service.k -> cn.jpush.android.service.k:
    cn.jpush.android.service.PushService a -> a
    void run() -> run
cn.jpush.android.service.l -> cn.jpush.android.service.l:
    cn.jpush.android.service.PushService e -> e
    java.lang.String[] A -> A
    boolean a(org.json.JSONArray,org.json.JSONArray,java.lang.String) -> a
    void d() -> d
cn.jpush.android.service.m -> cn.jpush.android.service.m:
    cn.jpush.android.service.PushService a -> a
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.n -> cn.jpush.android.service.n:
    boolean c -> c
    boolean a -> a
    cn.jpush.android.service.PushService b -> b
    java.lang.String[] z -> z
    void run() -> run
    int a() -> a
cn.jpush.android.service.o -> cn.jpush.android.service.o:
    java.lang.String a -> a
    int b -> b
    cn.jpush.android.service.PushService c -> c
    java.lang.Void a() -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.jpush.android.service.p -> cn.jpush.android.service.p:
    java.lang.String a -> a
    byte[] b -> b
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.service.q -> cn.jpush.android.service.q:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    long c -> c
    java.lang.String[] z -> z
    java.lang.String a(int) -> a
    java.lang.String b(int) -> b
    org.json.JSONObject a(java.lang.String) -> a
    org.json.JSONObject b(java.lang.String) -> b
cn.jpush.android.service.r -> cn.jpush.android.service.r:
    java.lang.String[] z -> z
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
cn.jpush.android.service.s -> cn.jpush.android.service.s:
    cn.jpush.android.service.s a -> a
    android.os.PowerManager$WakeLock b -> b
    cn.jpush.android.service.s a() -> a
    android.os.PowerManager$WakeLock b() -> b
    void a(android.os.PowerManager$WakeLock) -> a
cn.jpush.android.ui.JPushRemoteViews -> cn.jpush.android.ui.JPushRemoteViews:
    android.view.View apply(android.content.Context,android.view.ViewGroup) -> apply
    void reapply(android.content.Context,android.view.View) -> reapply
cn.jpush.android.ui.ListViewActivity -> cn.jpush.android.ui.ListViewActivity:
    cn.jpush.android.data.d a -> a
    java.lang.String z -> z
    void onCreate(android.os.Bundle) -> onCreate
cn.jpush.android.ui.PushActivity -> cn.jpush.android.ui.PushActivity:
    cn.jpush.android.data.d a -> a
    java.lang.String b -> b
    cn.jpush.android.data.g c -> c
    cn.jpush.android.ui.a d -> d
    boolean e -> e
    android.app.ProgressDialog f -> f
    android.os.Handler g -> g
    java.lang.String[] z -> z
    void onCreate(android.os.Bundle) -> onCreate
    void a(android.content.Intent) -> a
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onBackPressed() -> onBackPressed
    void onNewIntent(android.content.Intent) -> onNewIntent
    java.lang.String a(cn.jpush.android.ui.PushActivity) -> a
    cn.jpush.android.data.d b(cn.jpush.android.ui.PushActivity) -> b
    android.os.Handler c(cn.jpush.android.ui.PushActivity) -> c
    void d(cn.jpush.android.ui.PushActivity) -> d
    android.app.ProgressDialog e(cn.jpush.android.ui.PushActivity) -> e
cn.jpush.android.ui.WebViewCallback -> cn.jpush.android.ui.WebViewCallback:
    java.lang.ref.WeakReference a -> a
    cn.jpush.android.data.d b -> b
    java.lang.String[] z -> z
    void createShortcut(java.lang.String,java.lang.String,java.lang.String) -> createShortcut
    void click(java.lang.String,java.lang.String,java.lang.String) -> click
    void userClick(java.lang.String) -> userClick
    void download(java.lang.String,java.lang.String,java.lang.String) -> download
    void startActivityByName(java.lang.String,java.lang.String) -> startActivityByName
    void startActivityByIntent(java.lang.String,java.lang.String) -> startActivityByIntent
    void triggerNativeAction(java.lang.String) -> triggerNativeAction
    void startMainActivity(java.lang.String) -> startMainActivity
    void download(java.lang.String,java.lang.String) -> download
    void download(java.lang.String) -> download
    void close() -> close
    void showToast(java.lang.String) -> showToast
    void executeMsgMessage(java.lang.String) -> executeMsgMessage
cn.jpush.android.ui.a -> cn.jpush.android.ui.a:
    android.content.Context c -> c
    android.webkit.WebView d -> d
    android.widget.ImageView a -> a
    android.view.View$OnTouchListener b -> b
    cn.jpush.android.ui.c e -> e
    java.lang.String[] z -> z
    void a(android.view.View$OnClickListener) -> a
    void a(java.lang.String) -> a
    void a() -> a
    cn.jpush.android.ui.c a(cn.jpush.android.ui.a) -> a
    void b(cn.jpush.android.ui.a) -> b
    void c(cn.jpush.android.ui.a) -> c
cn.jpush.android.ui.b -> cn.jpush.android.ui.b:
    cn.jpush.android.ui.a a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.jpush.android.ui.c -> cn.jpush.android.ui.c:
    java.lang.ref.WeakReference a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.ui.d -> cn.jpush.android.ui.d:
    android.widget.ProgressBar a -> a
    android.os.Handler b -> b
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    android.widget.ProgressBar a(cn.jpush.android.ui.d) -> a
cn.jpush.android.ui.e -> cn.jpush.android.ui.e:
    cn.jpush.android.ui.d a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.ui.f -> cn.jpush.android.ui.f:
    cn.jpush.android.data.d a -> a
    java.lang.String[] z -> z
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
cn.jpush.android.ui.g -> cn.jpush.android.ui.g:
    java.util.List a -> a
    cn.jpush.android.ui.ListViewActivity b -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.jpush.android.ui.h -> cn.jpush.android.ui.h:
    android.content.Context a -> a
    java.lang.String[] z -> z
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.jpush.android.ui.i -> cn.jpush.android.ui.i:
    cn.jpush.android.ui.PushActivity a -> a
    void onClick(android.view.View) -> onClick
cn.jpush.android.ui.j -> cn.jpush.android.ui.j:
    cn.jpush.android.ui.PushActivity a -> a
    void onClick(android.view.View) -> onClick
cn.jpush.android.ui.k -> cn.jpush.android.ui.k:
    cn.jpush.android.ui.PushActivity a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.util.JLogger -> cn.jpush.android.util.JLogger:
    java.text.SimpleDateFormat a -> a
    cn.jpush.android.util.r b -> b
    java.lang.String z -> z
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void a(int,java.lang.String,java.lang.String) -> a
    void parseModalJson(java.lang.String,android.content.Context) -> parseModalJson
    void reportByHeartbeats() -> reportByHeartbeats
cn.jpush.android.util.JRecorder -> cn.jpush.android.util.JRecorder:
    java.util.concurrent.ExecutorService a -> a
    java.util.ArrayList b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    java.util.ArrayList e -> e
    boolean f -> f
    java.lang.String[] z -> z
    cn.jpush.android.util.JRecorder getIncreamentsRecorder(android.content.Context) -> getIncreamentsRecorder
    cn.jpush.android.util.JRecorder getSuperpositionRecorder(android.content.Context) -> getSuperpositionRecorder
    void record(int) -> record
    void parseRecordCommand(java.lang.String) -> parseRecordCommand
    org.json.JSONObject a(java.util.ArrayList) -> a
    void b() -> b
    void a(cn.jpush.android.util.JRecorder,double) -> a
    boolean a(boolean) -> a
    android.content.Context a() -> a
    void a(android.content.Context) -> a
cn.jpush.android.util.JavascriptCallback -> cn.jpush.android.util.JavascriptCallback:
cn.jpush.android.util.a -> cn.jpush.android.util.a:
    java.util.List b -> b
    javax.security.auth.x500.X500Principal c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int a -> a
    java.util.ArrayList g -> g
    java.util.ArrayList h -> h
    java.util.ArrayList i -> i
    cn.jpush.android.service.PushReceiver j -> j
    java.lang.String[] z -> z
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    boolean k(android.content.Context,java.lang.String) -> k
    boolean d(android.content.Context,java.lang.String) -> d
    boolean l(android.content.Context,java.lang.String) -> l
    boolean m(android.content.Context,java.lang.String) -> m
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    boolean d(android.content.Context,java.lang.String,java.lang.String) -> d
    boolean b(android.content.Context,java.lang.String,boolean) -> b
    void e(android.content.Context,java.lang.String) -> e
    void a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    boolean b(android.content.Context) -> b
    short c(android.content.Context) -> c
    boolean a() -> a
    boolean f(android.content.Context,java.lang.String) -> f
    int a(android.content.Context,float) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
    android.content.Intent n(android.content.Context,java.lang.String) -> n
    android.content.Intent a(android.content.Context,cn.jpush.android.data.d,boolean) -> a
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String g(android.content.Context,java.lang.String) -> g
    java.lang.String x(android.content.Context) -> x
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    void f(android.content.Context) -> f
    void h(android.content.Context,java.lang.String) -> h
    int g(android.content.Context) -> g
    void c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    boolean h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String y(android.content.Context) -> y
    java.lang.String j(android.content.Context) -> j
    java.lang.String i(android.content.Context,java.lang.String) -> i
    java.lang.String z(android.content.Context) -> z
    java.lang.String A(android.content.Context) -> A
    java.lang.String o(android.content.Context,java.lang.String) -> o
    java.lang.String B(android.content.Context) -> B
    java.lang.String k(android.content.Context) -> k
    void j(android.content.Context,java.lang.String) -> j
    java.lang.String p(android.content.Context,java.lang.String) -> p
    java.lang.String q(android.content.Context,java.lang.String) -> q
    boolean C(android.content.Context) -> C
    void l(android.content.Context) -> l
    void b() -> b
    boolean D(android.content.Context) -> D
    org.json.JSONArray m(android.content.Context) -> m
    org.json.JSONObject a(java.lang.String,org.json.JSONArray) -> a
    boolean n(android.content.Context) -> n
    boolean o(android.content.Context) -> o
    int a(byte) -> a
    int b(byte[]) -> b
    int c(byte[]) -> c
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    boolean p(android.content.Context) -> p
    void E(android.content.Context) -> E
    void q(android.content.Context) -> q
    java.lang.String c() -> c
    long r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    java.lang.String t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    void b(android.content.Context,java.lang.String,java.lang.String,int) -> b
    java.lang.String v(android.content.Context) -> v
    java.lang.String d() -> d
    boolean w(android.content.Context) -> w
    char[] z(java.lang.String) -> z
    java.lang.String z(char[]) -> z
cn.jpush.android.util.aa -> cn.jpush.android.util.aa:
    java.lang.String z -> z
    java.lang.String a(byte[],int,int) -> a
    int b(byte[],int,int) -> b
    long c(byte[],int,int) -> c
    java.lang.String d(byte[],int,int) -> d
    byte[] e(byte[],int,int) -> e
    byte[] a(byte[],java.lang.String,int) -> a
    java.lang.String a(byte[]) -> a
    byte[] a(int,int) -> a
    byte[] a(int) -> a
    long b(byte[]) -> b
    byte[] b(int) -> b
cn.jpush.android.util.ab -> cn.jpush.android.util.ab:
    java.lang.String z -> z
    void c(java.lang.String,java.lang.String) -> c
    java.lang.String a(java.lang.String) -> a
cn.jpush.android.util.ac -> cn.jpush.android.util.ac:
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.concurrent.ExecutorService h -> h
    java.lang.ref.WeakReference a -> a
    org.json.JSONObject b -> b
    java.lang.Object i -> i
    java.lang.String[] z -> z
    java.lang.String a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(android.content.Context,java.lang.String,int) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(java.lang.String) -> b
    java.util.ArrayList a(org.json.JSONArray,int) -> a
    void a(java.io.Closeable) -> a
    void a(android.content.Context,org.json.JSONArray) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void b(android.content.Context,org.json.JSONObject) -> b
    void c(android.content.Context,org.json.JSONArray) -> c
    void c(android.content.Context,org.json.JSONObject) -> c
    void c(android.content.Context) -> c
    void a(android.content.Context,int) -> a
    void a(android.content.Context,org.json.JSONObject,java.util.ArrayList) -> a
    void a(android.content.Context,org.json.JSONObject,org.json.JSONArray,java.util.ArrayList) -> a
    boolean a(org.json.JSONObject,android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context) -> b
    void b(android.content.Context,org.json.JSONArray) -> b
cn.jpush.android.util.ad -> cn.jpush.android.util.ad:
    android.content.Context a -> a
    org.json.JSONArray b -> b
    void run() -> run
cn.jpush.android.util.ae -> cn.jpush.android.util.ae:
    android.content.SharedPreferences a -> a
    java.lang.String[] z -> z
    void a() -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    int a(android.content.Context,java.lang.String,int) -> a
    void b(android.content.Context,java.lang.String,int) -> b
    short b(android.content.Context) -> b
    long a(android.content.Context,java.lang.String,long) -> a
    void b(android.content.Context,java.lang.String,long) -> b
    android.content.SharedPreferences c(android.content.Context) -> c
cn.jpush.android.util.af -> cn.jpush.android.util.af:
    java.lang.String a -> a
    android.content.SharedPreferences b -> b
    cn.jpush.android.util.af c -> c
    java.lang.String z -> z
    cn.jpush.android.util.af a() -> a
    android.content.SharedPreferences a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    long a(android.content.Context,java.lang.String,long) -> a
    void b(android.content.Context,java.lang.String,long) -> b
cn.jpush.android.util.ag -> cn.jpush.android.util.ag:
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    void a(android.content.Context,long) -> a
    long b(android.content.Context) -> b
    org.json.JSONObject a(cn.jpush.android.data.w) -> a
    org.json.JSONObject b(cn.jpush.android.data.w) -> b
cn.jpush.android.util.ah -> cn.jpush.android.util.ah:
    android.content.SharedPreferences a -> a
    java.lang.String z -> z
    long a(android.content.Context,java.lang.String,long) -> a
    void b(android.content.Context,java.lang.String,long) -> b
    android.content.SharedPreferences a(android.content.Context) -> a
cn.jpush.android.util.ai -> cn.jpush.android.util.ai:
    java.lang.String a -> a
    java.lang.String[] z -> z
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
cn.jpush.android.util.aj -> cn.jpush.android.util.aj:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    long d -> d
    java.lang.String[] z -> z
    void a() -> a
cn.jpush.android.util.b -> cn.jpush.android.util.b:
    cn.jpush.android.util.b a -> a
    cn.jpush.android.util.b b -> b
    cn.jpush.android.util.b c -> c
    cn.jpush.android.util.b d -> d
    cn.jpush.android.util.b e -> e
    cn.jpush.android.util.b[] f -> f
    java.lang.String[] z -> z
    cn.jpush.android.util.b[] values() -> values
    cn.jpush.android.util.b valueOf(java.lang.String) -> valueOf
cn.jpush.android.util.c -> cn.jpush.android.util.c:
    boolean a -> a
    java.lang.String z -> z
    java.lang.String a(byte[],int) -> a
cn.jpush.android.util.d -> cn.jpush.android.util.d:
    byte[] a -> a
    int b -> b
cn.jpush.android.util.e -> cn.jpush.android.util.e:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int,int,boolean) -> a
cn.jpush.android.util.f -> cn.jpush.android.util.f:
    android.content.SharedPreferences a -> a
    android.content.SharedPreferences$Editor b -> b
    void a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
cn.jpush.android.util.g -> cn.jpush.android.util.g:
    java.lang.String[] z -> z
    byte[] a(java.io.File) -> a
    java.lang.String b(java.io.File) -> b
    boolean a(java.lang.String,java.io.File) -> a
cn.jpush.android.util.h -> cn.jpush.android.util.h:
    java.util.ArrayList a(org.json.JSONArray) -> a
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.jpush.android.util.i -> cn.jpush.android.util.i:
    java.lang.String a -> a
    java.lang.String z -> z
    java.lang.String a() -> a
cn.jpush.android.util.j -> cn.jpush.android.util.j:
    java.lang.String a -> a
    java.util.Map b -> b
    java.lang.String[] z -> z
    java.util.Map b(android.content.Context) -> b
    void a(android.content.Context,java.util.Map) -> a
    void a(android.content.Context) -> a
cn.jpush.android.util.k -> cn.jpush.android.util.k:
    java.lang.String a -> a
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String b(android.content.Context,java.lang.String) -> b
    boolean a(java.io.File) -> a
    void d(android.content.Context) -> d
cn.jpush.android.util.l -> cn.jpush.android.util.l:
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.jpush.android.util.m -> cn.jpush.android.util.m:
    java.lang.String[] z -> z
    void a(java.lang.String) -> a
    java.util.ArrayList a(java.io.InputStream) -> a
    boolean a(java.lang.String,java.lang.String,android.content.Context) -> a
    boolean a(java.lang.String,byte[],android.content.Context) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
cn.jpush.android.util.n -> cn.jpush.android.util.n:
    boolean a -> a
    java.lang.String[] z -> z
    java.lang.String a(java.lang.String,int,long) -> a
    byte[] a(java.lang.String,int,long,int) -> a
    byte[] b(java.lang.String,int,long) -> b
    void a(java.lang.String,java.lang.String,cn.jpush.android.util.p) -> a
    org.apache.http.impl.client.DefaultHttpClient a() -> a
    boolean a(java.lang.String) -> a
    int a(android.content.Context,org.json.JSONObject,boolean) -> a
cn.jpush.android.util.o -> cn.jpush.android.util.o:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.jpush.android.util.p c -> c
    void run() -> run
cn.jpush.android.util.p -> cn.jpush.android.util.p:
    void a(boolean,java.lang.String) -> a
cn.jpush.android.util.q -> cn.jpush.android.util.q:
    java.lang.String[] a(android.content.Context) -> a
cn.jpush.android.util.r -> cn.jpush.android.util.r:
    int c -> c
    int d -> d
    long e -> e
    long f -> f
    long g -> g
    long h -> h
    int a -> a
    boolean b -> b
    android.content.Context i -> i
    java.util.ArrayList j -> j
    java.lang.String[] z -> z
    void a(cn.jpush.android.data.f) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String) -> a
    org.json.JSONObject d() -> d
cn.jpush.android.util.s -> cn.jpush.android.util.s:
    int a -> a
    cn.jpush.android.util.JRecorder b -> b
    void run() -> run
cn.jpush.android.util.t -> cn.jpush.android.util.t:
    void run() -> run
cn.jpush.android.util.u -> cn.jpush.android.util.u:
    org.json.JSONObject a -> a
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.util.v -> cn.jpush.android.util.v:
    int a -> a
    java.util.ArrayList b -> b
    cn.jpush.android.util.JRecorder c -> c
cn.jpush.android.util.w -> cn.jpush.android.util.w:
    long a -> a
    double b -> b
    cn.jpush.android.util.JRecorder c -> c
cn.jpush.android.util.x -> cn.jpush.android.util.x:
    java.text.SimpleDateFormat a -> a
    java.util.ArrayList b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String[] z -> z
    boolean a() -> a
    void b() -> b
    void a(java.lang.String,java.lang.String) -> a
    void c() -> c
    void b(java.lang.String,java.lang.String) -> b
    void d() -> d
    void c(java.lang.String,java.lang.String) -> c
    void e() -> e
    void d(java.lang.String,java.lang.String) -> d
    void f() -> f
    void e(java.lang.String,java.lang.String) -> e
    void g() -> g
    void h() -> h
    void i() -> i
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void j() -> j
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    boolean a(int) -> a
cn.jpush.android.util.y -> cn.jpush.android.util.y:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String toString() -> toString
cn.jpush.android.util.z -> cn.jpush.android.util.z:
    java.util.regex.Pattern a -> a
    java.util.regex.Pattern b -> b
    java.util.regex.Pattern c -> c
    java.util.regex.Pattern d -> d
    java.util.regex.Pattern e -> e
    java.util.regex.Pattern f -> f
    java.lang.String[] z -> z
    boolean a(java.lang.String) -> a
    int b(java.lang.String) -> b
    int a(java.util.Set) -> a
cn.sharesdk.framework.CustomPlatform -> cn.sharesdk.framework.CustomPlatform:
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    int getCustomPlatformId() -> getCustomPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.FakeActivity -> cn.sharesdk.framework.FakeActivity:
    java.lang.Class shell -> shell
    android.app.Activity activity -> activity
    cn.sharesdk.framework.FakeActivity resultReceiver -> resultReceiver
    java.util.HashMap result -> result
    android.view.View contentView -> contentView
    void setShell(java.lang.Class) -> setShell
    void setActivity(android.app.Activity) -> setActivity
    void setContentViewLayoutResName(java.lang.String) -> setContentViewLayoutResName
    void setContentView(android.view.View) -> setContentView
    android.view.View getContentView() -> getContentView
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByResName(android.view.View,java.lang.String) -> findViewByResName
    android.view.View findViewByResName(java.lang.String) -> findViewByResName
    void onCreate() -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    void finish() -> finish
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.content.Context getContext() -> getContext
    void show(android.content.Context,android.content.Intent) -> show
    void showForResult(android.content.Context,android.content.Intent,cn.sharesdk.framework.FakeActivity) -> showForResult
    cn.sharesdk.framework.FakeActivity getParent() -> getParent
    void setResult(java.util.HashMap) -> setResult
    void sendResult() -> sendResult
    void onResult(java.util.HashMap) -> onResult
    void runOnUIThread(java.lang.Runnable) -> runOnUIThread
    void runOnUIThread(java.lang.Runnable,long) -> runOnUIThread
    void setRequestedOrientation(int) -> setRequestedOrientation
    void requestPortraitOrientation() -> requestPortraitOrientation
    void requestLandscapeOrientation() -> requestLandscapeOrientation
    int getOrientation() -> getOrientation
    void requestFullScreen(boolean) -> requestFullScreen
cn.sharesdk.framework.MobUIShell -> cn.sharesdk.framework.MobUIShell:
    java.util.HashMap a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    java.lang.String a(cn.sharesdk.framework.FakeActivity) -> a
    java.lang.String a(java.lang.String,cn.sharesdk.framework.FakeActivity) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void finish() -> finish
cn.sharesdk.framework.Platform -> cn.sharesdk.framework.Platform:
    int ACTION_AUTHORIZING -> ACTION_AUTHORIZING
    int ACTION_GETTING_FRIEND_LIST -> ACTION_GETTING_FRIEND_LIST
    int ACTION_SENDING_DIRECT_MESSAGE -> ACTION_SENDING_DIRECT_MESSAGE
    int ACTION_FOLLOWING_USER -> ACTION_FOLLOWING_USER
    int ACTION_TIMELINE -> ACTION_TIMELINE
    int ACTION_USER_INFOR -> ACTION_USER_INFOR
    int ACTION_SHARE -> ACTION_SHARE
    int ACTION_CUSTOMER -> ACTION_CUSTOMER
    int CUSTOMER_ACTION_MASK -> CUSTOMER_ACTION_MASK
    int SHARE_TEXT -> SHARE_TEXT
    int SHARE_IMAGE -> SHARE_IMAGE
    int SHARE_WEBPAGE -> SHARE_WEBPAGE
    int SHARE_MUSIC -> SHARE_MUSIC
    int SHARE_VIDEO -> SHARE_VIDEO
    int SHARE_APPS -> SHARE_APPS
    int SHARE_FILE -> SHARE_FILE
    int SHARE_EMOJI -> SHARE_EMOJI
    cn.sharesdk.framework.i a -> a
    android.content.Context context -> context
    cn.sharesdk.framework.PlatformDb db -> db
    cn.sharesdk.framework.PlatformActionListener listener -> listener
    void a() -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    void copyDevinfo(java.lang.String,java.lang.String) -> copyDevinfo
    void copyNetworkDevinfo(int,int) -> copyNetworkDevinfo
    java.lang.String getDevinfo(java.lang.String) -> getDevinfo
    java.lang.String getDevinfo(java.lang.String,java.lang.String) -> getDevinfo
    java.lang.String getNetworkDevinfo(java.lang.String,java.lang.String) -> getNetworkDevinfo
    java.lang.String getNetworkDevinfo(int,java.lang.String,java.lang.String) -> getNetworkDevinfo
    android.content.Context getContext() -> getContext
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getId() -> getId
    int getPlatformId() -> getPlatformId
    int getSortId() -> getSortId
    void setPlatformActionListener(cn.sharesdk.framework.PlatformActionListener) -> setPlatformActionListener
    cn.sharesdk.framework.PlatformActionListener getPlatformActionListener() -> getPlatformActionListener
    boolean isValid() -> isValid
    void SSOSetting(boolean) -> SSOSetting
    boolean isSSODisable() -> isSSODisable
    boolean b() -> b
    void authorize() -> authorize
    void authorize(java.lang.String[]) -> authorize
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void innerAuthorize(int,java.lang.Object) -> innerAuthorize
    void share(cn.sharesdk.framework.Platform$ShareParams) -> share
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void followFriend(java.lang.String) -> followFriend
    void follow(java.lang.String) -> follow
    void getTimeLine(java.lang.String,int,int) -> getTimeLine
    void timeline(int,int,java.lang.String) -> timeline
    void showUser(java.lang.String) -> showUser
    void userInfor(java.lang.String) -> userInfor
    void listFriend(int,int,java.lang.String) -> listFriend
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void customerProtocol(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> customerProtocol
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void afterRegister(int,java.lang.Object) -> afterRegister
    cn.sharesdk.framework.PlatformDb getDb() -> getDb
    void removeAccount() -> removeAccount
    void removeAccount(boolean) -> removeAccount
    java.lang.String getShortLintk(java.lang.String,boolean) -> getShortLintk
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    java.lang.String uploadImageToFileServer(android.graphics.Bitmap) -> uploadImageToFileServer
cn.sharesdk.framework.Platform$ShareParams -> cn.sharesdk.framework.Platform$ShareParams:
    java.lang.String text -> text
    java.lang.String imagePath -> imagePath
cn.sharesdk.framework.PlatformActionListener -> cn.sharesdk.framework.PlatformActionListener:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.PlatformDb -> cn.sharesdk.framework.PlatformDb:
    java.lang.String DB_NAME -> DB_NAME
    android.content.SharedPreferences db -> db
    java.lang.String platformNname -> platformNname
    int platformVersion -> platformVersion
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    java.lang.String getToken() -> getToken
    void putToken(java.lang.String) -> putToken
    java.lang.String getTokenSecret() -> getTokenSecret
    void putTokenSecret(java.lang.String) -> putTokenSecret
    long getExpiresIn() -> getExpiresIn
    void putExpiresIn(long) -> putExpiresIn
    long getExpiresTime() -> getExpiresTime
    int getPlatformVersion() -> getPlatformVersion
    java.lang.String getPlatformNname() -> getPlatformNname
    void putUserId(java.lang.String) -> putUserId
    java.lang.String getUserId() -> getUserId
    java.lang.String getUserName() -> getUserName
    java.lang.String getUserIcon() -> getUserIcon
    void removeAccount() -> removeAccount
    java.lang.String exportData() -> exportData
    void importData(java.lang.String) -> importData
    boolean isValid() -> isValid
    java.lang.String getUserGender() -> getUserGender
cn.sharesdk.framework.ReflectablePlatformActionListener -> cn.sharesdk.framework.ReflectablePlatformActionListener:
    int a -> a
    android.os.Handler$Callback b -> b
    int c -> c
    android.os.Handler$Callback d -> d
    int e -> e
    android.os.Handler$Callback f -> f
    void setOnCompleteCallback(int,android.os.Handler$Callback) -> setOnCompleteCallback
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void setOnErrorCallback(int,android.os.Handler$Callback) -> setOnErrorCallback
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void setOnCancelCallback(int,android.os.Handler$Callback) -> setOnCancelCallback
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.Service -> cn.sharesdk.framework.Service:
    android.content.Context a -> a
    java.lang.String b -> b
    void a(android.content.Context) -> a
    android.content.Context getContext() -> getContext
    void a(java.lang.String) -> a
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getDeviceKey() -> getDeviceKey
    int getServiceVersionInt() -> getServiceVersionInt
    java.lang.String getServiceVersionName() -> getServiceVersionName
    void onBind() -> onBind
    void onUnbind() -> onUnbind
    android.content.Context a(cn.sharesdk.framework.Service) -> a
cn.sharesdk.framework.Service$ServiceEvent -> cn.sharesdk.framework.Service$ServiceEvent:
    int PLATFORM -> PLATFORM
    cn.sharesdk.framework.Service service -> service
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    java.util.HashMap filterShareContent(int,cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.ShareSDK -> cn.sharesdk.framework.ShareSDK:
    cn.sharesdk.framework.p a -> a
    boolean b -> b
    void initSDK(android.content.Context) -> initSDK
    void initSDK(android.content.Context,boolean) -> initSDK
    void initSDK(android.content.Context,java.lang.String) -> initSDK
    void initSDK(android.content.Context,java.lang.String,boolean) -> initSDK
    void stopSDK(android.content.Context) -> stopSDK
    void stopSDK() -> stopSDK
    void c() -> c
    void registerService(java.lang.Class) -> registerService
    void unregisterService(java.lang.Class) -> unregisterService
    cn.sharesdk.framework.Service getService(java.lang.Class) -> getService
    void registerPlatform(java.lang.Class) -> registerPlatform
    void unregisterPlatform(java.lang.Class) -> unregisterPlatform
    java.lang.String getSDKVersionName() -> getSDKVersionName
    int getSDKVersionCode() -> getSDKVersionCode
    void setConnTimeout(int) -> setConnTimeout
    void setReadTimeout(int) -> setReadTimeout
    void removeCookieOnAuthorize(boolean) -> removeCookieOnAuthorize
    void deleteCache() -> deleteCache
    cn.sharesdk.framework.Platform[] getPlatformList(android.content.Context) -> getPlatformList
    cn.sharesdk.framework.Platform[] getPlatformList() -> getPlatformList
    cn.sharesdk.framework.Platform getPlatform(android.content.Context,java.lang.String) -> getPlatform
    cn.sharesdk.framework.Platform getPlatform(java.lang.String) -> getPlatform
    void logDemoEvent(int,cn.sharesdk.framework.Platform) -> logDemoEvent
    void logApiEvent(java.lang.String,int) -> logApiEvent
    void setPlatformDevInfo(java.lang.String,java.util.HashMap) -> setPlatformDevInfo
    java.lang.String platformIdToName(int) -> platformIdToName
    int platformNameToId(java.lang.String) -> platformNameToId
    boolean isRemoveCookieOnAuthorize() -> isRemoveCookieOnAuthorize
    void closeDebug() -> closeDebug
    boolean isDebug() -> isDebug
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean a(java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
cn.sharesdk.framework.ShareSDKUIShell -> cn.sharesdk.framework.ShareSDKUIShell:
cn.sharesdk.framework.TitleLayout -> cn.sharesdk.framework.TitleLayout:
    android.widget.ImageView btnBack -> btnBack
    android.widget.TextView tvTitle -> tvTitle
    android.widget.TextView btnRight -> btnRight
    void init(android.content.Context) -> init
    android.widget.ImageView getBtnBack() -> getBtnBack
    android.widget.TextView getTvTitle() -> getTvTitle
    android.widget.TextView getBtnRight() -> getBtnRight
cn.sharesdk.framework.a -> cn.sharesdk.framework.a:
    cn.sharesdk.framework.FakeActivity a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.authorize.AuthorizeAdapter -> cn.sharesdk.framework.authorize.AuthorizeAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    java.lang.String platform -> platform
    android.widget.RelativeLayout rlBody -> rlBody
    boolean popUpAnimationDisable -> popUpAnimationDisable
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setPlatformName(java.lang.String) -> setPlatformName
    java.lang.String getPlatformName() -> getPlatformName
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onResize(int,int,int,int) -> onResize
    void onDestroy() -> onDestroy
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void disablePopUpAnimation() -> disablePopUpAnimation
    boolean isPopUpAnimationDisable() -> isPopUpAnimationDisable
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void hideShareSDKLogo() -> hideShareSDKLogo
cn.sharesdk.framework.authorize.AuthorizeHelper -> cn.sharesdk.framework.authorize.AuthorizeHelper:
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.authorize.AuthorizeListener -> cn.sharesdk.framework.authorize.AuthorizeListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.framework.authorize.RegisterView -> cn.sharesdk.framework.authorize.RegisterView:
    cn.sharesdk.framework.TitleLayout a -> a
    android.widget.RelativeLayout b -> b
    android.webkit.WebView c -> c
    android.widget.TextView d -> d
    void a(android.content.Context) -> a
    int b(android.content.Context) -> b
    android.view.View a() -> a
    void a(boolean) -> a
    android.webkit.WebView b() -> b
    cn.sharesdk.framework.TitleLayout c() -> c
    android.widget.RelativeLayout d() -> d
    android.widget.TextView a(cn.sharesdk.framework.authorize.RegisterView) -> a
cn.sharesdk.framework.authorize.ResizeLayout -> cn.sharesdk.framework.authorize.ResizeLayout:
    cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener a -> a
    void a(cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener -> cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener:
    void OnResize(int,int,int,int) -> OnResize
cn.sharesdk.framework.authorize.SSOListener -> cn.sharesdk.framework.authorize.SSOListener:
    void onFailed(java.lang.Throwable) -> onFailed
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
cn.sharesdk.framework.authorize.a -> cn.sharesdk.framework.authorize.a:
    cn.sharesdk.framework.authorize.AuthorizeHelper a -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeHelper) -> a
    void show(android.content.Context,android.content.Intent) -> show
    cn.sharesdk.framework.authorize.AuthorizeHelper a() -> a
cn.sharesdk.framework.authorize.b -> cn.sharesdk.framework.authorize.b:
    cn.sharesdk.framework.authorize.g a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c -> c
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
cn.sharesdk.framework.authorize.c -> cn.sharesdk.framework.authorize.c:
    cn.sharesdk.framework.authorize.RegisterView a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.d -> cn.sharesdk.framework.authorize.d:
    int a -> a
    cn.sharesdk.framework.authorize.RegisterView b -> b
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
cn.sharesdk.framework.authorize.e -> cn.sharesdk.framework.authorize.e:
    cn.sharesdk.framework.authorize.f c -> c
    cn.sharesdk.framework.authorize.SSOListener b -> b
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    void onCreate() -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
cn.sharesdk.framework.authorize.f -> cn.sharesdk.framework.authorize.f:
    cn.sharesdk.framework.authorize.e a -> a
    int b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    void a() -> a
    void a(int) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.content.Intent) -> a
cn.sharesdk.framework.authorize.g -> cn.sharesdk.framework.authorize.g:
    cn.sharesdk.framework.authorize.AuthorizeAdapter c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.framework.authorize.AuthorizeAdapter c() -> c
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void OnResize(int,int,int,int) -> OnResize
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    android.app.Activity a(cn.sharesdk.framework.authorize.g) -> a
    android.app.Activity b(cn.sharesdk.framework.authorize.g) -> b
cn.sharesdk.framework.authorize.g$a -> cn.sharesdk.framework.authorize.g$a:
    float[] a -> a
    float getInterpolation(float) -> getInterpolation
cn.sharesdk.framework.authorize.h -> cn.sharesdk.framework.authorize.h:
    cn.sharesdk.framework.authorize.g a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.i -> cn.sharesdk.framework.authorize.i:
    cn.sharesdk.framework.authorize.h a -> a
    void run() -> run
cn.sharesdk.framework.authorize.j -> cn.sharesdk.framework.authorize.j:
    cn.sharesdk.framework.authorize.g a -> a
    void run() -> run
cn.sharesdk.framework.b -> cn.sharesdk.framework.b:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.c -> cn.sharesdk.framework.c:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.d -> cn.sharesdk.framework.d:
    cn.sharesdk.framework.PlatformActionListener a -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a() -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void a(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void b(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> b
    void a(cn.sharesdk.framework.Platform,int,java.lang.Object) -> a
    java.lang.String a(cn.sharesdk.framework.Platform) -> a
    java.lang.String b(cn.sharesdk.framework.Platform) -> b
    java.lang.String a(cn.sharesdk.framework.PlatformDb,java.lang.String[]) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d,cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d) -> a
    java.lang.String a(cn.sharesdk.framework.d,cn.sharesdk.framework.Platform) -> a
cn.sharesdk.framework.e -> cn.sharesdk.framework.e:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.util.HashMap c -> c
    cn.sharesdk.framework.d d -> d
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.f -> cn.sharesdk.framework.f:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.lang.Object c -> c
    cn.sharesdk.framework.d d -> d
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.g -> cn.sharesdk.framework.g:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE_PATH -> IMAGE_PATH
    java.lang.String FILE_PATH -> FILE_PATH
    java.lang.String TITLE -> TITLE
    java.lang.String NOTEBOOK -> NOTEBOOK
    java.lang.String STACK -> STACK
    java.lang.String TAGS -> TAGS
    java.lang.String IS_PUBLIC -> IS_PUBLIC
    java.lang.String IS_FRIEND -> IS_FRIEND
    java.lang.String IS_FAMILY -> IS_FAMILY
    java.lang.String SAFETY_LEVEL -> SAFETY_LEVEL
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String VENUE_NAME -> VENUE_NAME
    java.lang.String VENUE_DESCRIPTION -> VENUE_DESCRIPTION
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String IMAGE_URL -> IMAGE_URL
    java.lang.String COMMENT -> COMMENT
    java.lang.String TITLE_URL -> TITLE_URL
    java.lang.String URL -> URL
    java.lang.String ADDRESS -> ADDRESS
    java.lang.String SITE -> SITE
    java.lang.String SITE_URL -> SITE_URL
    java.lang.String GROPU_ID -> GROPU_ID
    java.lang.String EXT_INFO -> EXT_INFO
    java.lang.String SHARE_TYPE -> SHARE_TYPE
    java.lang.String MUSIC_URL -> MUSIC_URL
    java.lang.String IMAGE_DATA -> IMAGE_DATA
    java.lang.String AUTHOR -> AUTHOR
    java.lang.String SCENCE -> SCENCE
    java.lang.String CUSTOM_FLAG -> CUSTOM_FLAG
    java.lang.String EXECUTE_URL -> EXECUTE_URL
    java.lang.String INSTALL_URL -> INSTALL_URL
    java.lang.String IS_SHARE_TENCENT_WEIBO -> IS_SHARE_TENCENT_WEIBO
    java.lang.String IMAGE_ARRAY -> IMAGE_ARRAY
    java.util.HashMap params -> params
    void set(java.lang.String,java.lang.Object) -> set
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    java.lang.String getImagePath() -> getImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getImageUrl() -> getImageUrl
    void setFilePath(java.lang.String) -> setFilePath
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getNotebook() -> getNotebook
    void setNotebook(java.lang.String) -> setNotebook
    java.lang.String getStack() -> getStack
    void setStack(java.lang.String) -> setStack
    java.lang.String[] getTags() -> getTags
    void setTags(java.lang.String[]) -> setTags
    boolean isPublic() -> isPublic
    void setPublic(boolean) -> setPublic
    boolean isFriend() -> isFriend
    void setFriend(boolean) -> setFriend
    boolean isFamily() -> isFamily
    void setFamily(boolean) -> setFamily
    int getSafetyLevel() -> getSafetyLevel
    void setSafetyLevel(int) -> setSafetyLevel
    int getContentType() -> getContentType
    void setContentType(int) -> setContentType
    int getHidden() -> getHidden
    void setHidden(int) -> setHidden
    void setVenueName(java.lang.String) -> setVenueName
    java.lang.String getVenueName() -> getVenueName
    java.lang.String getVenueDescription() -> getVenueDescription
    void setVenueDescription(java.lang.String) -> setVenueDescription
    float getLatitude() -> getLatitude
    void setLatitude(float) -> setLatitude
    float getLongitude() -> getLongitude
    void setLongitude(float) -> setLongitude
    java.lang.String getTitleUrl() -> getTitleUrl
    void setTitleUrl(java.lang.String) -> setTitleUrl
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getMusicUrl() -> getMusicUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    java.lang.String getSite() -> getSite
    void setSite(java.lang.String) -> setSite
    java.lang.String getSiteUrl() -> getSiteUrl
    void setSiteUrl(java.lang.String) -> setSiteUrl
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getAuthor() -> getAuthor
    void setAuthor(java.lang.String) -> setAuthor
    android.graphics.Bitmap getImageData() -> getImageData
    void setImageData(android.graphics.Bitmap) -> setImageData
    int getShareType() -> getShareType
    void setShareType(int) -> setShareType
    int getScence() -> getScence
    void setScence(int) -> setScence
    java.lang.String getExtInfo() -> getExtInfo
    void setExtInfo(java.lang.String) -> setExtInfo
    java.lang.String[] getCustomFlag() -> getCustomFlag
    void setCustomFlag(java.lang.String[]) -> setCustomFlag
    java.lang.String getExecuteUrl() -> getExecuteUrl
    void setExecuteUrl() -> setExecuteUrl
    java.lang.String getInstallUrl() -> getInstallUrl
    void setInstallUrl() -> setInstallUrl
    boolean isShareTencentWeibo() -> isShareTencentWeibo
    void setShareTencentWeibo(boolean) -> setShareTencentWeibo
    java.lang.String[] getImageArray() -> getImageArray
    void setImageArray(java.lang.String[]) -> setImageArray
cn.sharesdk.framework.h -> cn.sharesdk.framework.h:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    int c() -> c
    void b(cn.sharesdk.framework.authorize.AuthorizeListener) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.i -> cn.sharesdk.framework.i:
    cn.sharesdk.framework.Platform a -> a
    android.content.Context b -> b
    cn.sharesdk.framework.PlatformDb c -> c
    cn.sharesdk.framework.d d -> d
    int e -> e
    int f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    void a(java.lang.String) -> a
    int a() -> a
    int b() -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener c() -> c
    boolean d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean f() -> f
    boolean j() -> j
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void c(int,java.lang.Object) -> c
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,int,int) -> a
    void c(java.lang.String) -> c
    void a(int,int,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> a
    cn.sharesdk.framework.PlatformDb g() -> g
    void h() -> h
    java.lang.String a(java.lang.String,boolean) -> a
    java.lang.String k() -> k
    cn.sharesdk.framework.PlatformActionListener i() -> i
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    boolean a(cn.sharesdk.framework.i) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.framework.i) -> b
cn.sharesdk.framework.j -> cn.sharesdk.framework.j:
    int a -> a
    java.lang.Object b -> b
    cn.sharesdk.framework.i c -> c
    void run() -> run
cn.sharesdk.framework.k -> cn.sharesdk.framework.k:
    java.lang.String[] a -> a
    cn.sharesdk.framework.i b -> b
    void run() -> run
cn.sharesdk.framework.l -> cn.sharesdk.framework.l:
    android.os.Handler a -> a
    java.lang.String b -> b
    void a() -> a
    void a(int,int,java.lang.Object) -> a
    void b() -> b
    void b(int,int,java.lang.Object) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
cn.sharesdk.framework.m -> cn.sharesdk.framework.m:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message) -> onTooManyRedirects
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> shouldOverrideKeyEvent
    void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
cn.sharesdk.framework.n -> cn.sharesdk.framework.n:
    boolean a -> a
    java.util.ArrayList a(android.content.Context) -> a
    android.content.pm.PackageInfo c(android.content.Context) -> c
    java.util.ArrayList a(android.content.pm.PackageInfo,android.content.Context) -> a
    java.util.ArrayList d(android.content.Context) -> d
    void a(java.util.ArrayList) -> a
    void a(android.content.Context,java.lang.String,android.os.Handler,boolean,int) -> a
    void b(android.content.Context) -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    java.lang.String a(int,java.lang.String,java.util.HashMap) -> a
    boolean a(java.util.HashMap,java.util.HashMap) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,android.graphics.Bitmap) -> a
    java.lang.String a() -> a
    int b() -> b
    void a(int,int,java.util.HashMap) -> a
cn.sharesdk.framework.network.HttpResponseCallback -> cn.sharesdk.framework.network.HttpResponseCallback:
    void onResponse(org.apache.http.HttpResponse) -> onResponse
cn.sharesdk.framework.network.OnReadListener -> cn.sharesdk.framework.network.OnReadListener:
    void onRead(long) -> onRead
cn.sharesdk.framework.network.ProgressCallback -> cn.sharesdk.framework.network.ProgressCallback:
    void onProgress(long,long) -> onProgress
cn.sharesdk.framework.network.RawNetworkCallback -> cn.sharesdk.framework.network.RawNetworkCallback:
    void onResponse(java.io.InputStream) -> onResponse
cn.sharesdk.framework.network.a -> cn.sharesdk.framework.network.a:
    byte[] a() -> a
cn.sharesdk.framework.network.b -> cn.sharesdk.framework.network.b:
    cn.sharesdk.framework.network.a a -> a
    cn.sharesdk.framework.network.b a(byte[]) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.c -> cn.sharesdk.framework.network.c:
    java.io.InputStream a -> a
    long b -> b
    cn.sharesdk.framework.network.OnReadListener c -> c
    int read() -> read
    int read(byte[],int,int) -> read
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    void reset() -> reset
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void a(cn.sharesdk.framework.network.OnReadListener) -> a
cn.sharesdk.framework.network.d -> cn.sharesdk.framework.network.d:
    java.io.File a -> a
    void a(java.io.File) -> a
    void a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.e -> cn.sharesdk.framework.network.e:
    long a -> a
    cn.sharesdk.framework.network.OnReadListener b -> b
    java.io.InputStream a() -> a
    long b() -> b
    org.apache.http.entity.InputStreamEntity c() -> c
cn.sharesdk.framework.network.f -> cn.sharesdk.framework.network.f:
    java.lang.String a -> a
    java.lang.Object b -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.network.g -> cn.sharesdk.framework.network.g:
    java.util.ArrayList a -> a
    cn.sharesdk.framework.network.g a(cn.sharesdk.framework.network.e) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.h -> cn.sharesdk.framework.network.h:
    java.util.ArrayList a -> a
    int b -> b
    void a(java.io.InputStream) -> a
    boolean a() -> a
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
cn.sharesdk.framework.network.i -> cn.sharesdk.framework.network.i:
    int a -> a
    int b -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    void a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,cn.sharesdk.framework.network.HttpResponseCallback) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList) -> a
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,cn.sharesdk.framework.network.RawNetworkCallback) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList) -> b
    java.lang.String a(java.util.ArrayList) -> a
    org.apache.http.client.HttpClient a() -> a
cn.sharesdk.framework.network.j -> cn.sharesdk.framework.network.j:
    java.util.HashMap a -> a
    cn.sharesdk.framework.network.i b -> b
    void onResponse(org.apache.http.HttpResponse) -> onResponse
cn.sharesdk.framework.network.k -> cn.sharesdk.framework.network.k:
    cn.sharesdk.framework.network.k c -> c
    cn.sharesdk.framework.network.k a() -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.lang.String,int) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,cn.sharesdk.framework.network.RawNetworkCallback,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,int) -> a
cn.sharesdk.framework.network.l -> cn.sharesdk.framework.network.l:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
cn.sharesdk.framework.network.m -> cn.sharesdk.framework.network.m:
    cn.sharesdk.framework.network.l a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
cn.sharesdk.framework.network.n -> cn.sharesdk.framework.network.n:
    java.lang.StringBuilder a -> a
    cn.sharesdk.framework.network.n a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.o -> cn.sharesdk.framework.o:
    cn.sharesdk.framework.n a -> a
    int a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.sharesdk.framework.p -> cn.sharesdk.framework.p:
    cn.sharesdk.framework.p$a b -> b
    android.content.Context c -> c
    java.util.HashMap d -> d
    java.util.ArrayList e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    java.util.HashMap h -> h
    java.util.HashMap i -> i
    java.util.HashMap j -> j
    java.lang.String k -> k
    boolean l -> l
    java.lang.String m -> m
    boolean n -> n
    boolean o -> o
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void a() -> a
    void j() -> j
    void k() -> k
    void a(android.os.Message) -> a
    void l() -> l
    void m() -> m
    void n() -> n
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void a(java.lang.Class) -> a
    void b(java.lang.Class) -> b
    cn.sharesdk.framework.Service c(java.lang.Class) -> c
    void d(java.lang.Class) -> d
    void e(java.lang.Class) -> e
    cn.sharesdk.framework.Platform b(java.lang.String) -> b
    cn.sharesdk.framework.Platform[] c() -> c
    java.lang.String d() -> d
    int e() -> e
    void a(int) -> a
    void b(int) -> b
    void b(boolean) -> b
    boolean f() -> f
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String c(int) -> c
    int c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean g() -> g
    boolean h() -> h
    boolean a(java.util.HashMap) -> a
    boolean a(cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    void i() -> i
    java.lang.String a(cn.sharesdk.framework.p) -> a
    boolean a(cn.sharesdk.framework.p,cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
cn.sharesdk.framework.p$a -> cn.sharesdk.framework.p$a:
    cn.sharesdk.framework.p$a a -> a
    cn.sharesdk.framework.p$a b -> b
    cn.sharesdk.framework.p$a c -> c
    cn.sharesdk.framework.p$a[] d -> d
    cn.sharesdk.framework.p$a[] values() -> values
    cn.sharesdk.framework.p$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.q -> cn.sharesdk.framework.q:
    cn.sharesdk.framework.p a -> a
    void run() -> run
cn.sharesdk.framework.r -> cn.sharesdk.framework.r:
    cn.sharesdk.framework.statistics.a a -> a
    cn.sharesdk.framework.p b -> b
    void run() -> run
cn.sharesdk.framework.s -> cn.sharesdk.framework.s:
    android.widget.ImageView a -> a
    cn.sharesdk.framework.TitleLayout b -> b
    void setVisibility(int) -> setVisibility
cn.sharesdk.framework.statistics.NewAppReceiver -> cn.sharesdk.framework.statistics.NewAppReceiver:
    java.lang.String[] a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver b -> b
    android.content.Context c -> c
    android.content.IntentFilter[] d -> d
    android.os.Handler e -> e
    void a(android.content.Context) -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.statistics.NewAppReceiver$a -> cn.sharesdk.framework.statistics.NewAppReceiver$a:
    cn.sharesdk.framework.utils.f a -> a
    java.util.ArrayList a() -> a
    void a(java.util.ArrayList) -> a
    long b() -> b
    void a(long) -> a
cn.sharesdk.framework.statistics.NewAppReceiver$b -> cn.sharesdk.framework.statistics.NewAppReceiver$b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver$a b -> b
    void a(android.content.Context) -> a
    void run() -> run
    java.util.HashMap a(java.util.ArrayList) -> a
    java.util.ArrayList a(java.util.HashMap) -> a
cn.sharesdk.framework.statistics.a -> cn.sharesdk.framework.statistics.a:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a e -> e
    cn.sharesdk.framework.statistics.a.c f -> f
    java.lang.String b -> b
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String c -> c
    boolean d -> d
    boolean i -> i
    boolean j -> j
    cn.sharesdk.framework.network.i k -> k
    cn.sharesdk.framework.statistics.a a(android.content.Context) -> a
    void a(boolean) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    boolean a(java.lang.String) -> a
    long h() -> h
    long b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(java.lang.String,java.util.ArrayList) -> a
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    java.lang.String g(java.lang.String) -> g
    java.lang.String a(java.lang.String,cn.sharesdk.framework.statistics.a$a) -> a
    java.lang.String a(android.graphics.Bitmap,cn.sharesdk.framework.statistics.a$a) -> a
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    void a() -> a
    boolean c(java.lang.String,java.lang.String) -> c
    java.lang.String h(java.lang.String) -> h
    java.lang.String a(java.lang.String,byte[]) -> a
    java.lang.String i(java.lang.String) -> i
    org.json.JSONObject i() -> i
    java.lang.String a(java.lang.String,java.lang.String,int,boolean,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.lang.String d(java.lang.String,java.lang.String) -> d
    java.util.HashMap e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String f(java.lang.String) -> f
    java.lang.String b(java.lang.String,java.lang.String) -> b
cn.sharesdk.framework.statistics.a$a -> cn.sharesdk.framework.statistics.a$a:
    cn.sharesdk.framework.statistics.a$a a -> a
    cn.sharesdk.framework.statistics.a$a b -> b
    cn.sharesdk.framework.statistics.a$a[] c -> c
    cn.sharesdk.framework.statistics.a$a[] values() -> values
    cn.sharesdk.framework.statistics.a$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.statistics.a.a -> cn.sharesdk.framework.statistics.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.sharesdk.framework.statistics.a.b -> cn.sharesdk.framework.statistics.a.b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a.a b -> b
    cn.sharesdk.framework.statistics.a.b c -> c
    cn.sharesdk.framework.statistics.a.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
cn.sharesdk.framework.statistics.a.c -> cn.sharesdk.framework.statistics.a.c:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    cn.sharesdk.framework.statistics.a.c c -> c
    cn.sharesdk.framework.statistics.a.c a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Boolean) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,int) -> a
    int c(java.lang.String) -> c
    long a() -> a
    boolean b() -> b
    boolean c() -> c
    int d() -> d
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String g(java.lang.String) -> g
    void h(java.lang.String) -> h
    java.lang.String e() -> e
    void a(long) -> a
    java.lang.Long f() -> f
    void a(boolean) -> a
    boolean g() -> g
    void b(long) -> b
    java.lang.Long h() -> h
cn.sharesdk.framework.statistics.a.d -> cn.sharesdk.framework.statistics.a.d:
    java.lang.String a -> a
    java.util.ArrayList b -> b
cn.sharesdk.framework.statistics.a.e -> cn.sharesdk.framework.statistics.a.e:
    int a -> a
    int b -> b
    int c -> c
    long a(android.content.Context,java.lang.String,long) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context) -> a
cn.sharesdk.framework.statistics.b -> cn.sharesdk.framework.statistics.b:
    cn.sharesdk.framework.statistics.b b -> b
    android.content.Context c -> c
    cn.sharesdk.framework.utils.b d -> d
    cn.sharesdk.framework.statistics.a e -> e
    java.lang.String f -> f
    android.os.Handler g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    long k -> k
    boolean l -> l
    cn.sharesdk.framework.statistics.b a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(android.os.Handler) -> a
    void a(boolean) -> a
    void a(int) -> a
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    void b(cn.sharesdk.framework.statistics.b.c) -> b
    void c(android.os.Message) -> c
    void c(cn.sharesdk.framework.statistics.b.c) -> c
    void c() -> c
    boolean d() -> d
    void e() -> e
cn.sharesdk.framework.statistics.b.a -> cn.sharesdk.framework.statistics.b.a:
    int c -> c
    long d -> d
    int a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.b -> cn.sharesdk.framework.statistics.b.b:
    int n -> n
    long o -> o
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.c -> cn.sharesdk.framework.statistics.b.c:
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long e() -> e
    long d() -> d
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.d -> cn.sharesdk.framework.statistics.b.d:
    int d -> d
    long n -> n
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.e -> cn.sharesdk.framework.statistics.b.e:
    int b -> b
    long c -> c
    long a -> a
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.f -> cn.sharesdk.framework.statistics.b.f:
    int p -> p
    long q -> q
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.statistics.b.f$a d -> d
    java.lang.String n -> n
    java.lang.String[] o -> o
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.f$a -> cn.sharesdk.framework.statistics.b.f$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.HashMap g -> g
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.g -> cn.sharesdk.framework.statistics.b.g:
    int a -> a
    long b -> b
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.utils.BitmapHelper -> cn.sharesdk.framework.utils.BitmapHelper:
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> getBitmap
    java.lang.String downloadBitmap(android.content.Context,java.lang.String) -> downloadBitmap
    java.lang.String saveViewToImage(android.view.View) -> saveViewToImage
    java.lang.String saveViewToImage(android.view.View,int,int) -> saveViewToImage
    android.graphics.Bitmap captureView(android.view.View,int,int) -> captureView
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,int) -> blur
    android.graphics.Bitmap a(android.graphics.Bitmap,int,boolean) -> a
    android.graphics.Bitmap roundBitmap(android.graphics.Bitmap,int,int,float,float,float,float) -> roundBitmap
    int[] fixRect(int[],int[]) -> fixRect
    int[] fixRect_2(int[],int[]) -> fixRect_2
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int) -> saveBitmap
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap) -> saveBitmap
    android.graphics.Bitmap$CompressFormat getBmpFormat(byte[]) -> getBmpFormat
    android.graphics.Bitmap$CompressFormat getBmpFormat(java.lang.String) -> getBmpFormat
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    boolean a(byte[],byte[]) -> a
    android.graphics.Bitmap cropBitmap(android.graphics.Bitmap,int,int,int,int) -> cropBitmap
    boolean isBlackBitmap(android.graphics.Bitmap) -> isBlackBitmap
    int mixAlpha(int,int) -> mixAlpha
cn.sharesdk.framework.utils.Escaper -> cn.sharesdk.framework.utils.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
cn.sharesdk.framework.utils.R -> cn.sharesdk.framework.utils.R:
    java.lang.String a -> a
    float b -> b
    int dipToPx(android.content.Context,int) -> dipToPx
    int pxToDip(android.content.Context,int) -> pxToDip
    int[] getScreenSize(android.content.Context) -> getScreenSize
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getResId(java.lang.Class,java.lang.String) -> getResId
    int getBitmapRes(android.content.Context,java.lang.String) -> getBitmapRes
    int getStringRes(android.content.Context,java.lang.String) -> getStringRes
    int getStringArrayRes(android.content.Context,java.lang.String) -> getStringArrayRes
    int getLayoutRes(android.content.Context,java.lang.String) -> getLayoutRes
    int getStyleRes(android.content.Context,java.lang.String) -> getStyleRes
    int getIdRes(android.content.Context,java.lang.String) -> getIdRes
    int getColorRes(android.content.Context,java.lang.String) -> getColorRes
    int getRawRes(android.content.Context,java.lang.String) -> getRawRes
    int getPluralsRes(android.content.Context,java.lang.String) -> getPluralsRes
    void setCacheRoot(java.lang.String) -> setCacheRoot
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    java.lang.String getImageCachePath(android.content.Context) -> getImageCachePath
    void clearCache(android.content.Context) -> clearCache
    void deleteFileAndFolder(java.io.File) -> deleteFileAndFolder
    java.lang.String toWordText(java.lang.String,int) -> toWordText
    int getTextLengthInWord(java.lang.String) -> getTextLengthInWord
    long strToDate(java.lang.String) -> strToDate
    long dateStrToLong(java.lang.String) -> dateStrToLong
    java.util.Date longToDate(long) -> longToDate
    java.lang.String longToTime(long,int) -> longToTime
    long parseTwitterDate(java.lang.String) -> parseTwitterDate
    int[] covertTimeInYears(long) -> covertTimeInYears
    android.net.Uri pathToContentUri(android.content.Context,java.lang.String) -> pathToContentUri
    java.lang.String contentUriToPath(android.content.Context,android.net.Uri) -> contentUriToPath
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    java.lang.String encodeUrl(java.util.ArrayList) -> encodeUrl
    android.os.Bundle urlToBundle(java.lang.String) -> urlToBundle
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    void copyFile(java.io.FileInputStream,java.io.FileOutputStream) -> copyFile
    boolean saveObjectToFile(java.lang.String,java.lang.Object) -> saveObjectToFile
    java.lang.Object readObjectFromFile(java.lang.String) -> readObjectFromFile
cn.sharesdk.framework.utils.UIHandler -> cn.sharesdk.framework.utils.UIHandler:
    java.lang.String[] prays -> prays
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void reset() -> reset
    void printPray() -> printPray
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$000(android.os.Message) -> access$000
cn.sharesdk.framework.utils.a -> cn.sharesdk.framework.utils.a:
    cn.sharesdk.framework.utils.d a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
    byte[] a(byte[],byte[]) -> a
    java.lang.String b(byte[]) -> b
    java.lang.String a(byte[],int,int) -> a
    java.lang.String b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    byte[] c(byte[]) -> c
    byte[] a(java.io.InputStream) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
cn.sharesdk.framework.utils.b -> cn.sharesdk.framework.utils.b:
    android.content.Context a -> a
    cn.sharesdk.framework.utils.b b -> b
    cn.sharesdk.framework.utils.b a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.Object b(java.lang.String) -> b
    java.lang.String m() -> m
    java.lang.String n() -> n
    int o() -> o
    boolean A() -> A
    boolean B() -> B
    java.lang.String p() -> p
    java.lang.String C() -> C
    void c(java.lang.String) -> c
    java.lang.String q() -> q
    java.lang.String r() -> r
    int s() -> s
    java.lang.String t() -> t
    java.util.ArrayList a(boolean) -> a
    boolean a(android.content.pm.PackageInfo) -> a
    java.lang.String u() -> u
    boolean a(java.lang.String) -> a
    java.lang.String v() -> v
    boolean w() -> w
    java.lang.String x() -> x
    java.lang.String y() -> y
    java.lang.String z() -> z
cn.sharesdk.framework.utils.b$1 -> cn.sharesdk.framework.utils.b$1:
cn.sharesdk.framework.utils.b$a -> cn.sharesdk.framework.utils.b$a:
    boolean a -> a
    java.util.concurrent.BlockingQueue c -> c
    cn.sharesdk.framework.utils.b b -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder a() -> a
cn.sharesdk.framework.utils.c -> cn.sharesdk.framework.utils.c:
    char[] a -> a
    java.lang.String a(byte[]) -> a
cn.sharesdk.framework.utils.d -> cn.sharesdk.framework.utils.d:
    java.util.HashMap a(java.lang.String) -> a
    java.util.HashMap a(org.json.JSONObject) -> a
    java.util.ArrayList a(org.json.JSONArray) -> a
    java.lang.String a(java.util.HashMap) -> a
    org.json.JSONObject b(java.util.HashMap) -> b
    boolean a(java.lang.Object) -> a
    java.util.ArrayList b(java.lang.Object) -> b
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.e -> cn.sharesdk.framework.utils.e:
    android.content.Context c -> c
    java.lang.String d -> d
    cn.sharesdk.framework.utils.e$a a -> a
    cn.sharesdk.framework.utils.e$b b -> b
    void a(android.content.Context) -> a
    int a(java.lang.Throwable) -> a
    int a(java.lang.Object,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.Object[]) -> b
    int b(java.lang.Throwable) -> b
    int c(java.lang.Throwable) -> c
    int c(java.lang.Object,java.lang.Object[]) -> c
    int a(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> a
    android.content.Context a() -> a
    java.lang.String b() -> b
cn.sharesdk.framework.utils.e$a -> cn.sharesdk.framework.utils.e$a:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
cn.sharesdk.framework.utils.e$b -> cn.sharesdk.framework.utils.e$b:
    int a(int,java.lang.String) -> a
    int b(int,java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
cn.sharesdk.framework.utils.f -> cn.sharesdk.framework.utils.f:
    java.io.File a -> a
    java.util.HashMap b -> b
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String,java.lang.Object) -> b
    java.lang.Object e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Long) -> a
    long c(java.lang.String) -> c
    void a(java.lang.String,java.lang.Object) -> a
    java.lang.Object d(java.lang.String) -> d
cn.sharesdk.framework.utils.g -> cn.sharesdk.framework.utils.g:
    cn.sharesdk.framework.utils.g$b a -> a
    cn.sharesdk.framework.utils.h b -> b
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    cn.sharesdk.framework.utils.g$b a() -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList) -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> a
    java.util.ArrayList b(java.lang.String,java.util.ArrayList) -> b
    java.util.ArrayList b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> b
    java.util.ArrayList c(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> c
    void a(java.lang.String,java.lang.String) -> a
    java.util.ArrayList a(java.lang.String,java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> a
    java.lang.String a(java.lang.String) -> a
    java.util.ArrayList a(long,java.util.ArrayList,java.lang.String) -> a
    java.lang.String b(java.util.ArrayList) -> b
    java.util.ArrayList a(long,java.lang.String) -> a
    java.util.ArrayList a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.g$1 -> cn.sharesdk.framework.utils.g$1:
    int[] a -> a
cn.sharesdk.framework.utils.g$a -> cn.sharesdk.framework.utils.g$a:
    cn.sharesdk.framework.utils.g$a a -> a
    cn.sharesdk.framework.utils.g$a b -> b
    cn.sharesdk.framework.utils.g$a[] c -> c
    cn.sharesdk.framework.utils.g$a[] values() -> values
    cn.sharesdk.framework.utils.g$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.utils.g$b -> cn.sharesdk.framework.utils.g$b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
cn.sharesdk.framework.utils.h -> cn.sharesdk.framework.utils.h:
    char[] a -> a
    char[] b -> b
    boolean c -> c
    boolean[] d -> d
    boolean[] a(java.lang.String) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    char[] a(int) -> a
cn.sharesdk.framework.utils.i -> cn.sharesdk.framework.utils.i:
    java.lang.Object a(java.lang.Object) -> a
cn.sharesdk.framework.utils.j -> cn.sharesdk.framework.utils.j:
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.utils.k -> cn.sharesdk.framework.utils.k:
    java.lang.ThreadLocal a -> a
    char[] a(int) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String a(java.lang.String,int) -> a
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int b(java.lang.CharSequence,int,int) -> b
    char[] a(char[],int,int) -> a
cn.sharesdk.framework.utils.l -> cn.sharesdk.framework.utils.l:
    int a -> a
    char[] b -> b
    java.lang.Appendable c -> c
    cn.sharesdk.framework.utils.k d -> d
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void a(char[],int) -> a
cn.sharesdk.framework.utils.m -> cn.sharesdk.framework.utils.m:
    char[] a() -> a
    java.lang.Object initialValue() -> initialValue
cn.sharesdk.framework.utils.n -> cn.sharesdk.framework.utils.n:
    java.util.HashMap a(java.lang.String) -> a
cn.sharesdk.framework.utils.n$a -> cn.sharesdk.framework.utils.n$a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap a() -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
cn.sharesdk.onekeyshare.CustomerLogo -> cn.sharesdk.a.a:
    java.lang.String label -> a
    android.graphics.Bitmap enableLogo -> b
    android.graphics.Bitmap disableLogo -> c
    android.view.View$OnClickListener listener -> d
cn.sharesdk.onekeyshare.EditPageFakeActivity -> cn.sharesdk.a.b:
    java.util.List platforms -> a
    java.util.HashMap shareParamMap -> b
    boolean dialogMode -> c
    android.view.View backgroundView -> d
    java.util.ArrayList shareImageList -> e
    void setShareData(java.util.HashMap) -> a
    void setDialogMode() -> a
    void setBackgroundView(android.view.View) -> a
    void setPlatforms(java.util.List) -> a
    boolean onFinish() -> onFinish
cn.sharesdk.onekeyshare.OnekeyShare -> cn.sharesdk.a.c:
    java.util.HashMap shareParamsMap -> a
    java.util.ArrayList customers -> b
    int notifyIcon -> c
    java.lang.String notifyTitle -> d
    boolean silent -> e
    cn.sharesdk.framework.PlatformActionListener callback -> f
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> g
    boolean dialogMode -> h
    boolean disableSSO -> i
    java.util.HashMap hiddenPlatforms -> j
    android.view.View bgView -> k
    cn.sharesdk.onekeyshare.OnekeyShareTheme theme -> l
    android.content.Context context -> m
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener onShareButtonClickListener -> n
    void show(android.content.Context) -> a
    void setNotification(int,java.lang.String) -> a
    void setTitle(java.lang.String) -> a
    void setTitleUrl(java.lang.String) -> b
    void setText(java.lang.String) -> c
    void setImagePath(java.lang.String) -> d
    void setUrl(java.lang.String) -> e
    void setComment(java.lang.String) -> f
    void setSite(java.lang.String) -> g
    void setSiteUrl(java.lang.String) -> h
    void disableSSOWhenAuthorize() -> a
    void share(java.util.HashMap) -> a
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(long,java.lang.String) -> a
cn.sharesdk.onekeyshare.OnekeyShare$1 -> cn.sharesdk.a.d:
    cn.sharesdk.onekeyshare.OnekeyShare this$0 -> a
    void doShare(java.util.HashMap) -> a
cn.sharesdk.onekeyshare.OnekeyShareTheme -> cn.sharesdk.a.e:
    cn.sharesdk.onekeyshare.OnekeyShareTheme CLASSIC -> a
    cn.sharesdk.onekeyshare.OnekeyShareTheme SKYBLUE -> b
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] ENUM$VALUES -> c
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] values() -> values
    cn.sharesdk.onekeyshare.OnekeyShareTheme valueOf(java.lang.String) -> valueOf
cn.sharesdk.onekeyshare.PlatformListFakeActivity -> cn.sharesdk.a.f:
    java.util.HashMap shareParamsMap -> a
    boolean silent -> b
    java.util.ArrayList customerLogos -> c
    java.util.HashMap hiddenPlatforms -> d
    boolean canceled -> i
    android.view.View backgroundView -> e
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener onShareButtonClickListener -> f
    boolean dialogMode -> g
    cn.sharesdk.onekeyshare.ThemeShareCallback themeShareCallback -> h
    void onCreate() -> onCreate
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void setCanceled(boolean) -> a
    boolean onFinish() -> onFinish
    void show(android.content.Context,android.content.Intent) -> show
    void setShareParamsMap(java.util.HashMap) -> a
    void setSilent(boolean) -> b
    void setCustomerLogos(java.util.ArrayList) -> a
    void setHiddenPlatforms(java.util.HashMap) -> b
    android.view.View getBackgroundView() -> a
    void setBackgroundView(android.view.View) -> a
    void setOnShareButtonClickListener(cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener) -> a
    void setDialogMode(boolean) -> c
    void setThemeShareCallback(cn.sharesdk.onekeyshare.ThemeShareCallback) -> a
    void onShareButtonClick(android.view.View,java.util.List) -> a
    void showEditPage(java.util.List) -> a
    void showEditPage(android.content.Context,cn.sharesdk.framework.Platform) -> a
    void showEditPage(android.content.Context,java.util.List) -> a
cn.sharesdk.onekeyshare.PlatformListFakeActivity$1 -> cn.sharesdk.a.g:
    cn.sharesdk.onekeyshare.PlatformListFakeActivity this$0 -> a
    void onResult(java.util.HashMap) -> onResult
cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener -> cn.sharesdk.a.h:
    void onClick(android.view.View,java.util.List) -> a
cn.sharesdk.onekeyshare.ShareContentCustomizeCallback -> cn.sharesdk.a.i:
    void onShare(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> a
cn.sharesdk.onekeyshare.ShareCore -> cn.sharesdk.a.j:
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> a
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> a
    boolean share(cn.sharesdk.framework.Platform,java.util.HashMap) -> a
    boolean isUseClientToShare(java.lang.String) -> a
    boolean isDirectShare(cn.sharesdk.framework.Platform) -> a
cn.sharesdk.onekeyshare.ThemeShareCallback -> cn.sharesdk.a.k:
    void doShare(java.util.HashMap) -> a
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView -> cn.sharesdk.a.a.a.a:
    int LINE_PER_PAGE -> a
    int COLUMN_PER_LINE -> b
    int PAGE_SIZE -> c
    m.framework.ui.widget.viewpager.ViewPagerClassic pager -> d
    android.widget.ImageView[] points -> e
    android.graphics.Bitmap grayPoint -> f
    android.graphics.Bitmap bluePoint -> g
    boolean silent -> h
    cn.sharesdk.framework.Platform[] platformList -> i
    java.util.HashMap reqData -> j
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage parent -> k
    java.util.ArrayList customers -> l
    java.util.HashMap hiddenPlatforms -> m
    android.view.View bgView -> n
    long lastClickTime -> o
    void init(android.content.Context) -> a
    void calPageSize() -> c
    boolean handleMessage(android.os.Message) -> handleMessage
    void afterPlatformListGot() -> a
    void onConfigurationChanged() -> b
    void setData(java.util.HashMap,boolean) -> a
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setParent(cn.sharesdk.onekeyshare.theme.classic.PlatformListPage) -> setParent
    void onClick(android.view.View) -> onClick
    void disableOverScrollMode(android.view.View) -> a
    cn.sharesdk.framework.Platform[] access$0(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> a
    java.util.HashMap access$1(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> b
    java.util.ArrayList access$2(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> c
    int access$3(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> d
    int access$4(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> e
    android.widget.ImageView[] access$5(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> f
    android.graphics.Bitmap access$6(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> g
    android.graphics.Bitmap access$7(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> h
    void access$8(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView,cn.sharesdk.framework.Platform[]) -> a
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$1 -> cn.sharesdk.a.a.a.b:
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView this$0 -> a
    void run() -> run
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView -> cn.sharesdk.a.a.a.c:
    java.lang.Object[] beans -> a
    android.view.View$OnClickListener callback -> b
    int lines -> c
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter platformAdapter -> d
    void setData(int,java.lang.Object[]) -> a
    void init() -> a
    android.widget.LinearLayout getView(int,android.view.View$OnClickListener,android.content.Context) -> a
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform) -> a
    java.lang.String getName(cn.sharesdk.framework.Platform) -> b
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter -> cn.sharesdk.a.a.a.d:
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView[] girds -> a
    java.util.List logos -> b
    android.view.View$OnClickListener callback -> c
    int lines -> d
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView platformGridView -> e
    int getCount() -> getCount
    android.view.View getView(int,android.view.ViewGroup) -> getView
    void onScreenChange(int,int) -> onScreenChange
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView access$0(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter) -> a
    android.view.View$OnClickListener access$1(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter) -> b
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage -> cn.sharesdk.a.a.a.e:
    android.widget.FrameLayout flPage -> i
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView grid -> j
    android.widget.Button btnCancel -> k
    android.view.animation.Animation animShow -> l
    android.view.animation.Animation animHide -> m
    boolean finishing -> n
    android.widget.LinearLayout llPage -> o
    void onCreate() -> onCreate
    void initPageView() -> b
    void initAnim() -> c
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onFinish() -> onFinish
    void onClick(android.view.View) -> onClick
    void onPlatformIconClick(android.view.View,java.util.ArrayList) -> a
    android.widget.FrameLayout access$0(cn.sharesdk.onekeyshare.theme.classic.PlatformListPage) -> a
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$1 -> cn.sharesdk.a.a.a.f:
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage this$0 -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$2 -> cn.sharesdk.a.a.a.g:
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter -> cn.sharesdk.a.a.b.a:
    android.content.Context context -> a
    java.util.List logos -> b
    java.util.List checkedPositionList -> c
    int directOnlyPosition -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
    void setData(cn.sharesdk.framework.Platform[],java.util.HashMap) -> a
    void setCustomerLogos(java.util.ArrayList) -> a
    java.util.List getCheckedItems() -> a
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform,java.lang.String) -> a
    java.lang.String getName(cn.sharesdk.framework.Platform) -> a
cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter$ViewHolder -> cn.sharesdk.a.a.b.b:
    java.lang.Integer position -> a
    android.widget.ImageView logoImageView -> b
    android.widget.ImageView checkedImageView -> c
    android.widget.TextView nameTextView -> d
cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage -> cn.sharesdk.a.a.b.c:
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter gridViewAdapter -> i
    void onCreate() -> onCreate
    void initView() -> b
    void onClick(android.view.View) -> onClick
    void onShareButtonClick(android.view.View) -> b
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter access$0(cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage) -> a
    java.util.HashMap access$1(cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage) -> b
cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage$1 -> cn.sharesdk.a.a.b.d:
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage this$0 -> a
    cn.sharesdk.framework.Platform[] doInBackground(java.lang.Void[]) -> a
    void onPostExecute(cn.sharesdk.framework.Platform[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.sharesdk.sina.weibo.SinaActivity -> cn.sharesdk.sina.weibo.SinaActivity:
    java.lang.String a -> a
    long b -> b
    com.sina.weibo.sdk.auth.sso.SsoHandler c -> c
    com.sina.weibo.sdk.auth.AuthInfo d -> d
    com.sina.weibo.sdk.api.share.IWeiboShareAPI e -> e
    cn.sharesdk.framework.Platform$ShareParams f -> f
    cn.sharesdk.framework.authorize.AuthorizeListener g -> g
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    com.sina.weibo.sdk.api.BaseMediaObject b() -> b
    com.sina.weibo.sdk.api.ImageObject c() -> c
    android.graphics.Bitmap a(android.content.Context,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
    int a(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    com.sina.weibo.sdk.api.TextObject d() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> onResponse
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void e() -> e
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.sina.weibo.SinaWeibo -> cn.sharesdk.sina.weibo.SinaWeibo:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doAuthorize(java.lang.String[]) -> doAuthorize
    void a(java.lang.String[]) -> a
    void b(java.lang.String[]) -> b
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.framework.Platform$ShareParams) -> b
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.sina.weibo.SinaWeibo) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.sina.weibo.SinaWeibo) -> b
    void a(cn.sharesdk.sina.weibo.SinaWeibo,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.sina.weibo.SinaWeibo) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.sina.weibo.SinaWeibo) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.sina.weibo.SinaWeibo) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.sina.weibo.SinaWeibo) -> f
    cn.sharesdk.framework.PlatformDb g(cn.sharesdk.sina.weibo.SinaWeibo) -> g
    cn.sharesdk.framework.PlatformDb h(cn.sharesdk.sina.weibo.SinaWeibo) -> h
    cn.sharesdk.framework.PlatformDb i(cn.sharesdk.sina.weibo.SinaWeibo) -> i
    void b(cn.sharesdk.sina.weibo.SinaWeibo,int,java.lang.Object) -> b
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.sina.weibo.SinaWeibo) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.sina.weibo.SinaWeibo) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.sina.weibo.SinaWeibo) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.sina.weibo.SinaWeibo) -> m
cn.sharesdk.sina.weibo.SinaWeibo$ShareParams -> cn.sharesdk.sina.weibo.SinaWeibo$ShareParams:
    java.lang.String imageUrl -> imageUrl
    float longitude -> longitude
    float latitude -> latitude
cn.sharesdk.sina.weibo.a -> cn.sharesdk.sina.weibo.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    java.lang.String[] e -> e
    cn.sharesdk.framework.PlatformActionListener f -> f
    cn.sharesdk.framework.Platform g -> g
    cn.sharesdk.framework.Platform$ShareParams h -> h
    void onCreate() -> onCreate
    void a(cn.sharesdk.framework.PlatformActionListener,java.lang.String[],boolean) -> a
    void a(cn.sharesdk.framework.PlatformActionListener,cn.sharesdk.framework.Platform$ShareParams,boolean) -> a
    void a() -> a
    void b() -> b
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.sina.weibo.a) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.sina.weibo.a) -> b
    cn.sharesdk.framework.Platform$ShareParams c(cn.sharesdk.sina.weibo.a) -> c
cn.sharesdk.sina.weibo.b -> cn.sharesdk.sina.weibo.b:
    cn.sharesdk.sina.weibo.a a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.c -> cn.sharesdk.sina.weibo.c:
    cn.sharesdk.sina.weibo.a a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.d -> cn.sharesdk.sina.weibo.d:
    cn.sharesdk.sina.weibo.SinaWeibo a -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.sina.weibo.e -> cn.sharesdk.sina.weibo.e:
    cn.sharesdk.sina.weibo.i a -> a
    cn.sharesdk.sina.weibo.SinaWeibo b -> b
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.f -> cn.sharesdk.sina.weibo.f:
    boolean d -> d
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,java.lang.String) -> a
    android.content.Intent b(java.lang.String) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener a(cn.sharesdk.sina.weibo.f) -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b(cn.sharesdk.sina.weibo.f) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c(cn.sharesdk.sina.weibo.f) -> c
cn.sharesdk.sina.weibo.g -> cn.sharesdk.sina.weibo.g:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.sina.weibo.f c -> c
    void run() -> run
cn.sharesdk.sina.weibo.h -> cn.sharesdk.sina.weibo.h:
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    void a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    void a() -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(android.content.Intent) -> b
    void a(int,int,android.content.Intent) -> a
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
cn.sharesdk.sina.weibo.i -> cn.sharesdk.sina.weibo.i:
    cn.sharesdk.sina.weibo.i b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String[] g -> g
    cn.sharesdk.framework.network.k h -> h
    cn.sharesdk.sina.weibo.i a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void b(java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,float,float) -> b
    java.util.HashMap a(java.lang.String,float,float) -> a
    java.util.HashMap d(java.lang.String) -> d
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap b(int,int,java.lang.String) -> b
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.sharesdk.sina.weibo.i,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.sina.weibo.j -> cn.sharesdk.sina.weibo.j:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.sina.weibo.i b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.QQ -> cn.sharesdk.tencent.qq.QQ:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.QQ) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qq.QQ) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.qq.QQ) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.qq.QQ) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.qq.QQ) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.qq.QQ) -> f
    void a(cn.sharesdk.tencent.qq.QQ,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.tencent.qq.QQ) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.tencent.qq.QQ) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.tencent.qq.QQ) -> i
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.tencent.qq.QQ) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.tencent.qq.QQ) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.tencent.qq.QQ) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.tencent.qq.QQ) -> m
    cn.sharesdk.framework.PlatformActionListener n(cn.sharesdk.tencent.qq.QQ) -> n
cn.sharesdk.tencent.qq.QQ$ShareParams -> cn.sharesdk.tencent.qq.QQ$ShareParams:
    java.lang.String title -> title
    java.lang.String titleUrl -> titleUrl
    java.lang.String imageUrl -> imageUrl
    java.lang.String musicUrl -> musicUrl
cn.sharesdk.tencent.qq.QQClientNotExistException -> cn.sharesdk.tencent.qq.QQClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.QQWebShareAdapter -> cn.sharesdk.tencent.qq.QQWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.a -> cn.sharesdk.tencent.qq.a:
    cn.sharesdk.tencent.qq.e a -> a
    cn.sharesdk.tencent.qq.QQ b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.b -> cn.sharesdk.tencent.qq.b:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qq.QQ b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qq.c -> cn.sharesdk.tencent.qq.c:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
cn.sharesdk.tencent.qq.d -> cn.sharesdk.tencent.qq.d:
    java.lang.String a -> a
    cn.sharesdk.tencent.qq.c b -> b
    void run() -> run
cn.sharesdk.tencent.qq.e -> cn.sharesdk.tencent.qq.e:
    java.lang.String[] b -> b
    cn.sharesdk.tencent.qq.e c -> c
    java.lang.String d -> d
    java.lang.String[] e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    cn.sharesdk.tencent.qq.e a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    void b(java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    void d(java.lang.String) -> d
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String b() -> b
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    java.util.HashMap e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,cn.sharesdk.framework.PlatformActionListener,boolean) -> a
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> b
    void a(cn.sharesdk.tencent.qq.e,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.tencent.qq.f -> cn.sharesdk.tencent.qq.f:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.qq.e b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.g -> cn.sharesdk.tencent.qq.g:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(int,int,android.content.Intent) -> a
cn.sharesdk.tencent.qq.h -> cn.sharesdk.tencent.qq.h:
    java.lang.String a -> a
    cn.sharesdk.framework.Platform b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void onCreate() -> onCreate
cn.sharesdk.tencent.qq.i -> cn.sharesdk.tencent.qq.i:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void onCreate() -> onCreate
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    int[] a() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.app.Activity a(cn.sharesdk.tencent.qq.i) -> a
    android.app.Activity b(cn.sharesdk.tencent.qq.i) -> b
    void a(cn.sharesdk.tencent.qq.i,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
cn.sharesdk.tencent.qq.j -> cn.sharesdk.tencent.qq.j:
    java.lang.String a -> a
    android.os.Bundle b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    cn.sharesdk.tencent.qq.i f -> f
    void run() -> run
cn.sharesdk.tencent.qq.k -> cn.sharesdk.tencent.qq.k:
    java.lang.String a -> a
    cn.sharesdk.framework.PlatformActionListener b -> b
    java.lang.String c -> c
    cn.sharesdk.tencent.qq.QQWebShareAdapter d -> d
    cn.sharesdk.framework.authorize.RegisterView e -> e
    android.webkit.WebView f -> f
    boolean g -> g
    boolean h -> h
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String) -> b
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qq.QQWebShareAdapter b() -> b
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.k) -> a
    java.lang.String b(cn.sharesdk.tencent.qq.k) -> b
    void a(cn.sharesdk.tencent.qq.k,java.lang.String) -> a
    boolean a(cn.sharesdk.tencent.qq.k,boolean) -> a
    android.app.Activity c(cn.sharesdk.tencent.qq.k) -> c
    android.app.Activity d(cn.sharesdk.tencent.qq.k) -> d
    android.app.Activity e(cn.sharesdk.tencent.qq.k) -> e
    android.app.Activity f(cn.sharesdk.tencent.qq.k) -> f
cn.sharesdk.tencent.qq.l -> cn.sharesdk.tencent.qq.l:
    cn.sharesdk.tencent.qq.k a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qq.m -> cn.sharesdk.tencent.qq.m:
    cn.sharesdk.tencent.qq.l a -> a
    void run() -> run
cn.sharesdk.tencent.qq.n -> cn.sharesdk.tencent.qq.n:
    cn.sharesdk.tencent.qq.k a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
cn.sharesdk.tencent.qzone.QZone -> cn.sharesdk.tencent.qzone.QZone:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.framework.Platform$ShareParams) -> b
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.QZone) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qzone.QZone) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.qzone.QZone) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.qzone.QZone) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.qzone.QZone) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.qzone.QZone) -> f
    void a(cn.sharesdk.tencent.qzone.QZone,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.tencent.qzone.QZone) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.tencent.qzone.QZone) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.tencent.qzone.QZone) -> i
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.tencent.qzone.QZone) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.tencent.qzone.QZone) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.tencent.qzone.QZone) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.tencent.qzone.QZone) -> m
    cn.sharesdk.framework.PlatformActionListener n(cn.sharesdk.tencent.qzone.QZone) -> n
cn.sharesdk.tencent.qzone.QZone$ShareParams -> cn.sharesdk.tencent.qzone.QZone$ShareParams:
    java.lang.String title -> title
    java.lang.String imageUrl -> imageUrl
    java.lang.String titleUrl -> titleUrl
    java.lang.String comment -> comment
    java.lang.String site -> site
    java.lang.String siteUrl -> siteUrl
    boolean webShare -> webShare
cn.sharesdk.tencent.qzone.QZoneWebShareAdapter -> cn.sharesdk.tencent.qzone.QZoneWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qzone.a -> cn.sharesdk.tencent.qzone.a:
    cn.sharesdk.tencent.qzone.f a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.b -> cn.sharesdk.tencent.qzone.b:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.tencent.qzone.QZone c -> c
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.c -> cn.sharesdk.tencent.qzone.c:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.d -> cn.sharesdk.tencent.qzone.d:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
cn.sharesdk.tencent.qzone.e -> cn.sharesdk.tencent.qzone.e:
    java.lang.String a -> a
    cn.sharesdk.tencent.qzone.d b -> b
    void run() -> run
cn.sharesdk.tencent.qzone.f -> cn.sharesdk.tencent.qzone.f:
    java.lang.String[] b -> b
    cn.sharesdk.tencent.qzone.f c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    cn.sharesdk.framework.network.k g -> g
    java.lang.String[] h -> h
    cn.sharesdk.tencent.qzone.f a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String a() -> a
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.util.HashMap d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
    java.lang.String b() -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> b
    java.util.HashMap a(java.lang.String,java.lang.String) -> a
    java.util.HashMap e(java.lang.String) -> e
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
    void a(cn.sharesdk.tencent.qzone.f,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.tencent.qzone.g -> cn.sharesdk.tencent.qzone.g:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.qzone.f b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.h -> cn.sharesdk.tencent.qzone.h:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(int,int,android.content.Intent) -> a
cn.sharesdk.tencent.qzone.i -> cn.sharesdk.tencent.qzone.i:
    java.lang.String a -> a
    boolean b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter i -> i
    void a(java.lang.String,boolean) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter b() -> b
    void onCreate() -> onCreate
    void c() -> c
    void d() -> d
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.i) -> a
    java.lang.String b(cn.sharesdk.tencent.qzone.i) -> b
    void a(cn.sharesdk.tencent.qzone.i,java.lang.String) -> a
    void b(cn.sharesdk.tencent.qzone.i,java.lang.String) -> b
cn.sharesdk.tencent.qzone.j -> cn.sharesdk.tencent.qzone.j:
    cn.sharesdk.tencent.qzone.i a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qzone.k -> cn.sharesdk.tencent.qzone.k:
    cn.sharesdk.tencent.qzone.j a -> a
    void run() -> run
cn.sharesdk.tencent.qzone.l -> cn.sharesdk.tencent.qzone.l:
    cn.sharesdk.tencent.qzone.i a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.sharesdk.wechat.moments.WechatMoments -> cn.sharesdk.wechat.moments.WechatMoments:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    boolean isValid() -> isValid
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.moments.WechatMoments) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.moments.WechatMoments) -> b
    void a(cn.sharesdk.wechat.moments.WechatMoments,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.moments.WechatMoments) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.moments.WechatMoments) -> d
cn.sharesdk.wechat.moments.WechatMoments$ShareParams -> cn.sharesdk.wechat.moments.WechatMoments$ShareParams:
cn.sharesdk.wechat.moments.a -> cn.sharesdk.wechat.moments.a:
    cn.sharesdk.wechat.moments.WechatMoments a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.utils.WXAppExtendObject -> cn.sharesdk.wechat.utils.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXEmojiObject -> cn.sharesdk.wechat.utils.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXFileObject -> cn.sharesdk.wechat.utils.WXFileObject:
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXImageObject -> cn.sharesdk.wechat.utils.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage -> cn.sharesdk.wechat.utils.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject -> cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage$a -> cn.sharesdk.wechat.utils.WXMediaMessage$a:
    android.os.Bundle a(cn.sharesdk.wechat.utils.WXMediaMessage) -> a
    cn.sharesdk.wechat.utils.WXMediaMessage a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WXMusicObject -> cn.sharesdk.wechat.utils.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXTextObject -> cn.sharesdk.wechat.utils.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXVideoObject -> cn.sharesdk.wechat.utils.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXWebpageObject -> cn.sharesdk.wechat.utils.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WechatClientNotExistException -> cn.sharesdk.wechat.utils.WechatClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException -> cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatHandlerActivity -> cn.sharesdk.wechat.utils.WechatHandlerActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
cn.sharesdk.wechat.utils.WechatHelper -> cn.sharesdk.wechat.utils.WechatHelper:
    boolean a -> a
    cn.sharesdk.wechat.utils.WechatHelper b -> b
    cn.sharesdk.wechat.utils.j c -> c
    cn.sharesdk.wechat.utils.k d -> d
    cn.sharesdk.wechat.utils.WechatHelper a() -> a
    void a(cn.sharesdk.wechat.utils.k) -> a
    boolean b() -> b
    void a(cn.sharesdk.wechat.utils.k,cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.wechat.utils.k) -> b
    void a(java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    void c(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> c
    void c(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> c
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    byte[] a(java.lang.String) -> a
    int a(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    byte[] b(android.content.Context,java.lang.String) -> b
    byte[] a(android.content.Context,byte[]) -> a
    byte[] a(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity) -> a
    boolean c() -> c
    boolean d() -> d
    void a(cn.sharesdk.wechat.utils.WXMediaMessage,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
cn.sharesdk.wechat.utils.WechatHelper$ShareParams -> cn.sharesdk.wechat.utils.WechatHelper$ShareParams:
    int shareType -> shareType
    java.lang.String title -> title
    java.lang.String musicUrl -> musicUrl
    java.lang.String url -> url
    java.lang.String imageUrl -> imageUrl
    android.graphics.Bitmap imageData -> imageData
    int scene -> scene
    java.lang.String filePath -> filePath
    java.lang.String extInfo -> extInfo
cn.sharesdk.wechat.utils.WechatResp -> cn.sharesdk.wechat.utils.WechatResp:
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int a() -> a
    void b(android.os.Bundle) -> b
    void a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WechatResp$ErrCode -> cn.sharesdk.wechat.utils.WechatResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException -> cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.a -> cn.sharesdk.wechat.utils.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.b -> cn.sharesdk.wechat.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.c -> cn.sharesdk.wechat.utils.c:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.d -> cn.sharesdk.wechat.utils.d:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.e -> cn.sharesdk.wechat.utils.e:
    int a() -> a
cn.sharesdk.wechat.utils.f -> cn.sharesdk.wechat.utils.f:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.g -> cn.sharesdk.wechat.utils.g:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.network.k c -> c
    cn.sharesdk.framework.Platform d -> d
    int e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a(android.os.Bundle,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(java.lang.String,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    cn.sharesdk.framework.Platform a(cn.sharesdk.wechat.utils.g) -> a
    int b(cn.sharesdk.wechat.utils.g) -> b
    cn.sharesdk.framework.network.k c(cn.sharesdk.wechat.utils.g) -> c
    java.lang.String d(cn.sharesdk.wechat.utils.g) -> d
    java.lang.String e(cn.sharesdk.wechat.utils.g) -> e
    void a(cn.sharesdk.wechat.utils.g,java.lang.String) -> a
cn.sharesdk.wechat.utils.h -> cn.sharesdk.wechat.utils.h:
    java.lang.String a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.wechat.utils.g c -> c
    void run() -> run
cn.sharesdk.wechat.utils.i -> cn.sharesdk.wechat.utils.i:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.wechat.utils.g b -> b
    void run() -> run
cn.sharesdk.wechat.utils.j -> cn.sharesdk.wechat.utils.j:
    android.content.Context a -> a
    java.lang.String b -> b
    boolean a(android.content.Context,java.lang.String) -> a
    void a(cn.sharesdk.wechat.utils.l) -> a
    boolean a() -> a
    boolean b() -> b
    boolean d() -> d
    byte[] a(java.lang.String,java.lang.String,int) -> a
    java.lang.String a(java.lang.String) -> a
    boolean c() -> c
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity,cn.sharesdk.wechat.utils.k) -> a
    boolean a(byte[],byte[]) -> a
cn.sharesdk.wechat.utils.k -> cn.sharesdk.wechat.utils.k:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d -> d
    cn.sharesdk.wechat.utils.g e -> e
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(cn.sharesdk.wechat.utils.g) -> a
    void a(cn.sharesdk.wechat.utils.WechatResp) -> a
    cn.sharesdk.framework.Platform$ShareParams a() -> a
    cn.sharesdk.framework.Platform b() -> b
    cn.sharesdk.framework.PlatformActionListener c() -> c
cn.sharesdk.wechat.utils.l -> cn.sharesdk.wechat.utils.l:
    java.lang.String c -> c
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    java.util.Map initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$6 -> com.google.gson.Gson$6:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.StringMap members -> members
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$creator -> val$creator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.StringMap -> com.google.gson.internal.StringMap:
    int MINIMUM_CAPACITY -> MINIMUM_CAPACITY
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    com.google.gson.internal.StringMap$LinkedEntry header -> header
    java.util.Map$Entry[] EMPTY_TABLE -> EMPTY_TABLE
    com.google.gson.internal.StringMap$LinkedEntry[] table -> table
    int size -> size
    int threshold -> threshold
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.util.Collection values -> values
    int seed -> seed
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    com.google.gson.internal.StringMap$LinkedEntry getEntry(java.lang.String) -> getEntry
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    void addNewEntry(java.lang.String,java.lang.Object,int,int) -> addNewEntry
    com.google.gson.internal.StringMap$LinkedEntry[] makeTable(int) -> makeTable
    com.google.gson.internal.StringMap$LinkedEntry[] doubleCapacity() -> doubleCapacity
    java.lang.Object remove(java.lang.Object) -> remove
    void unlink(com.google.gson.internal.StringMap$LinkedEntry) -> unlink
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    boolean removeMapping(java.lang.Object,java.lang.Object) -> removeMapping
    int hash(java.lang.String) -> hash
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap) -> access$300
    int access$500(com.google.gson.internal.StringMap) -> access$500
    boolean access$600(com.google.gson.internal.StringMap,java.lang.Object,java.lang.Object) -> access$600
com.google.gson.internal.StringMap$1 -> com.google.gson.internal.StringMap$1:
com.google.gson.internal.StringMap$EntrySet -> com.google.gson.internal.StringMap$EntrySet:
    com.google.gson.internal.StringMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    void clear() -> clear
com.google.gson.internal.StringMap$EntrySet$1 -> com.google.gson.internal.StringMap$EntrySet$1:
    com.google.gson.internal.StringMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.StringMap$KeySet -> com.google.gson.internal.StringMap$KeySet:
    com.google.gson.internal.StringMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.StringMap$KeySet$1 -> com.google.gson.internal.StringMap$KeySet$1:
    com.google.gson.internal.StringMap$KeySet this$1 -> this$1
    java.lang.String next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.StringMap$LinkedEntry -> com.google.gson.internal.StringMap$LinkedEntry:
    java.lang.String key -> key
    java.lang.Object value -> value
    int hash -> hash
    com.google.gson.internal.StringMap$LinkedEntry next -> next
    com.google.gson.internal.StringMap$LinkedEntry nxt -> nxt
    com.google.gson.internal.StringMap$LinkedEntry prv -> prv
    java.lang.String getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object getKey() -> getKey
com.google.gson.internal.StringMap$LinkedHashIterator -> com.google.gson.internal.StringMap$LinkedHashIterator:
    com.google.gson.internal.StringMap$LinkedEntry next -> next
    com.google.gson.internal.StringMap$LinkedEntry lastReturned -> lastReturned
    com.google.gson.internal.StringMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.StringMap$LinkedEntry nextEntry() -> nextEntry
    void remove() -> remove
com.google.gson.internal.StringMap$Values -> com.google.gson.internal.StringMap$Values:
    com.google.gson.internal.StringMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.gson.internal.StringMap$Values$1 -> com.google.gson.internal.StringMap$Values$1:
    com.google.gson.internal.StringMap$Values this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.CollectionTypeAdapterFactory this$0 -> this$0
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    java.lang.reflect.Field val$field -> val$field
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    java.lang.String TRUE -> TRUE
    java.lang.String FALSE -> FALSE
    com.google.gson.stream.StringPool stringPool -> stringPool
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int bufferStartLine -> bufferStartLine
    int bufferStartColumn -> bufferStartColumn
    com.google.gson.stream.JsonScope[] stack -> stack
    int stackSize -> stackSize
    com.google.gson.stream.JsonToken token -> token
    java.lang.String name -> name
    java.lang.String value -> value
    int valuePos -> valuePos
    int valueLength -> valueLength
    boolean skipping -> skipping
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    void expect(com.google.gson.stream.JsonToken) -> expect
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    com.google.gson.stream.JsonToken advance() -> advance
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(com.google.gson.stream.JsonScope) -> push
    com.google.gson.stream.JsonToken nextInArray(boolean) -> nextInArray
    com.google.gson.stream.JsonToken nextInObject(boolean) -> nextInObject
    com.google.gson.stream.JsonToken objectValue() -> objectValue
    com.google.gson.stream.JsonToken nextValue() -> nextValue
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String nextString(char) -> nextString
    java.lang.String nextLiteral(boolean) -> nextLiteral
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    com.google.gson.stream.JsonToken readLiteral() -> readLiteral
    com.google.gson.stream.JsonToken decodeLiteral() -> decodeLiteral
    com.google.gson.stream.JsonToken decodeNumber(char[],int,int) -> decodeNumber
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    com.google.gson.stream.JsonToken access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    java.lang.String access$302(com.google.gson.stream.JsonReader,java.lang.String) -> access$302
    java.lang.String access$400(com.google.gson.stream.JsonReader) -> access$400
    java.lang.String access$402(com.google.gson.stream.JsonReader,java.lang.String) -> access$402
    com.google.gson.stream.JsonToken access$002(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> access$002
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonReader$2 -> com.google.gson.stream.JsonReader$2:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> $SwitchMap$com$google$gson$stream$JsonScope
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    com.google.gson.stream.JsonScope EMPTY_ARRAY -> EMPTY_ARRAY
    com.google.gson.stream.JsonScope NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    com.google.gson.stream.JsonScope EMPTY_OBJECT -> EMPTY_OBJECT
    com.google.gson.stream.JsonScope DANGLING_NAME -> DANGLING_NAME
    com.google.gson.stream.JsonScope NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    com.google.gson.stream.JsonScope EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    com.google.gson.stream.JsonScope NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    com.google.gson.stream.JsonScope CLOSED -> CLOSED
    com.google.gson.stream.JsonScope[] $VALUES -> $VALUES
    com.google.gson.stream.JsonScope[] values() -> values
    com.google.gson.stream.JsonScope valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    java.util.List stack -> stack
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(com.google.gson.stream.JsonScope,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(com.google.gson.stream.JsonScope,com.google.gson.stream.JsonScope,java.lang.String) -> close
    com.google.gson.stream.JsonScope peek() -> peek
    void replaceTop(com.google.gson.stream.JsonScope) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.JsonWriter$1 -> com.google.gson.stream.JsonWriter$1:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> $SwitchMap$com$google$gson$stream$JsonScope
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.google.gson.stream.StringPool -> com.google.gson.stream.StringPool:
    java.lang.String[] pool -> pool
    java.lang.String get(char[],int,int) -> get
com.jakewharton.disklrucache.DiskLruCache -> com.jakewharton.disklrucache.DiskLruCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION_1 -> VERSION_1
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    java.lang.String STRING_KEY_PATTERN -> STRING_KEY_PATTERN
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> LEGAL_KEY_PATTERN
    java.lang.String CLEAN -> CLEAN
    java.lang.String DIRTY -> DIRTY
    java.lang.String REMOVE -> REMOVE
    java.lang.String READ -> READ
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int valueCount -> valueCount
    long size -> size
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.jakewharton.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    com.jakewharton.disklrucache.DiskLruCache$Snapshot get(java.lang.String) -> get
    com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String) -> edit
    com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    void completeEdit(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void delete() -> delete
    void validateKey(java.lang.String) -> validateKey
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.io.Writer access$000(com.jakewharton.disklrucache.DiskLruCache) -> access$000
    void access$100(com.jakewharton.disklrucache.DiskLruCache) -> access$100
    boolean access$200(com.jakewharton.disklrucache.DiskLruCache) -> access$200
    void access$300(com.jakewharton.disklrucache.DiskLruCache) -> access$300
    int access$402(com.jakewharton.disklrucache.DiskLruCache,int) -> access$402
    com.jakewharton.disklrucache.DiskLruCache$Editor access$1600(com.jakewharton.disklrucache.DiskLruCache,java.lang.String,long) -> access$1600
    java.lang.String access$1700(java.io.InputStream) -> access$1700
    int access$1800(com.jakewharton.disklrucache.DiskLruCache) -> access$1800
    java.io.File access$1900(com.jakewharton.disklrucache.DiskLruCache) -> access$1900
    java.io.OutputStream access$2000() -> access$2000
    void access$2200(com.jakewharton.disklrucache.DiskLruCache,com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> access$2200
com.jakewharton.disklrucache.DiskLruCache$1 -> com.jakewharton.disklrucache.DiskLruCache$1:
    com.jakewharton.disklrucache.DiskLruCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.jakewharton.disklrucache.DiskLruCache$2 -> com.jakewharton.disklrucache.DiskLruCache$2:
    void write(int) -> write
com.jakewharton.disklrucache.DiskLruCache$Editor -> com.jakewharton.disklrucache.DiskLruCache$Editor:
    com.jakewharton.disklrucache.DiskLruCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.jakewharton.disklrucache.DiskLruCache this$0 -> this$0
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    com.jakewharton.disklrucache.DiskLruCache$Entry access$1400(com.jakewharton.disklrucache.DiskLruCache$Editor) -> access$1400
    boolean[] access$1500(com.jakewharton.disklrucache.DiskLruCache$Editor) -> access$1500
    boolean access$2302(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> access$2302
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream -> com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream:
    com.jakewharton.disklrucache.DiskLruCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.jakewharton.disklrucache.DiskLruCache$Entry -> com.jakewharton.disklrucache.DiskLruCache$Entry:
    java.lang.String key -> key
    long[] lengths -> lengths
    boolean readable -> readable
    com.jakewharton.disklrucache.DiskLruCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.jakewharton.disklrucache.DiskLruCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[]) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$602(com.jakewharton.disklrucache.DiskLruCache$Entry,boolean) -> access$602
    com.jakewharton.disklrucache.DiskLruCache$Editor access$702(com.jakewharton.disklrucache.DiskLruCache$Entry,com.jakewharton.disklrucache.DiskLruCache$Editor) -> access$702
    void access$800(com.jakewharton.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> access$800
    com.jakewharton.disklrucache.DiskLruCache$Editor access$700(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$700
    long[] access$1000(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$1000
    java.lang.String access$1100(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$1100
    boolean access$600(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$600
    long access$1200(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$1200
    long access$1202(com.jakewharton.disklrucache.DiskLruCache$Entry,long) -> access$1202
com.jakewharton.disklrucache.DiskLruCache$Snapshot -> com.jakewharton.disklrucache.DiskLruCache$Snapshot:
    java.lang.String key -> key
    long sequenceNumber -> sequenceNumber
    java.io.InputStream[] ins -> ins
    long[] lengths -> lengths
    com.jakewharton.disklrucache.DiskLruCache$Entry entry -> entry
    com.jakewharton.disklrucache.DiskLruCache this$0 -> this$0
    com.jakewharton.disklrucache.DiskLruCache$Editor edit() -> edit
    java.io.InputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    java.io.File getFile(int) -> getFile
    void close() -> close
com.jakewharton.disklrucache.StrictLineReader -> com.jakewharton.disklrucache.StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    void close() -> close
    java.lang.String readLine() -> readLine
    boolean hasUnterminatedLine() -> hasUnterminatedLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$000(com.jakewharton.disklrucache.StrictLineReader) -> access$000
com.jakewharton.disklrucache.StrictLineReader$1 -> com.jakewharton.disklrucache.StrictLineReader$1:
    com.jakewharton.disklrucache.StrictLineReader this$0 -> this$0
    java.lang.String toString() -> toString
com.jakewharton.disklrucache.Util -> com.jakewharton.disklrucache.Util:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.lidroid.xutils.BitmapUtils -> com.lidroid.xutils.BitmapUtils:
    boolean pauseTask -> pauseTask
    boolean cancelAllTask -> cancelAllTask
    java.lang.Object pauseTaskLock -> pauseTaskLock
    android.content.Context context -> context
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    com.lidroid.xutils.bitmap.BitmapDisplayConfig defaultDisplayConfig -> defaultDisplayConfig
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.drawable.Drawable) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(int) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.Bitmap) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.drawable.Drawable) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(int) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.Bitmap) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(int,int) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultImageLoadAnimation(android.view.animation.Animation) -> configDefaultImageLoadAnimation
    com.lidroid.xutils.BitmapUtils configDefaultAutoRotation(boolean) -> configDefaultAutoRotation
    com.lidroid.xutils.BitmapUtils configDefaultShowOriginal(boolean) -> configDefaultShowOriginal
    com.lidroid.xutils.BitmapUtils configDefaultBitmapConfig(android.graphics.Bitmap$Config) -> configDefaultBitmapConfig
    com.lidroid.xutils.BitmapUtils configDefaultDisplayConfig(com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> configDefaultDisplayConfig
    com.lidroid.xutils.BitmapUtils configDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> configDownloader
    com.lidroid.xutils.BitmapUtils configDefaultCacheExpiry(long) -> configDefaultCacheExpiry
    com.lidroid.xutils.BitmapUtils configDefaultConnectTimeout(int) -> configDefaultConnectTimeout
    com.lidroid.xutils.BitmapUtils configDefaultReadTimeout(int) -> configDefaultReadTimeout
    com.lidroid.xutils.BitmapUtils configThreadPoolSize(int) -> configThreadPoolSize
    com.lidroid.xutils.BitmapUtils configMemoryCacheEnabled(boolean) -> configMemoryCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheEnabled(boolean) -> configDiskCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> configDiskCacheFileNameGenerator
    com.lidroid.xutils.BitmapUtils configBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> configBitmapCacheListener
    void display(android.view.View,java.lang.String) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapTaskFromContainer(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> getBitmapTaskFromContainer
    boolean bitmapLoadTaskExist(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> bitmapLoadTaskExist
    java.lang.Object access$0(com.lidroid.xutils.BitmapUtils) -> access$0
    boolean access$1(com.lidroid.xutils.BitmapUtils) -> access$1
    boolean access$2(com.lidroid.xutils.BitmapUtils) -> access$2
    com.lidroid.xutils.bitmap.BitmapGlobalConfig access$3(com.lidroid.xutils.BitmapUtils) -> access$3
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask access$4(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> access$4
com.lidroid.xutils.BitmapUtils$BitmapLoadTask -> com.lidroid.xutils.BitmapUtils$BitmapLoadTask:
    java.lang.String uri -> uri
    java.lang.ref.WeakReference containerReference -> containerReference
    com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack callBack -> callBack
    com.lidroid.xutils.bitmap.BitmapDisplayConfig displayConfig -> displayConfig
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom from -> from
    int PROGRESS_LOAD_STARTED -> PROGRESS_LOAD_STARTED
    int PROGRESS_LOADING -> PROGRESS_LOADING
    com.lidroid.xutils.BitmapUtils this$0 -> this$0
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> doInBackground
    void updateProgress(long,long) -> updateProgress
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    android.view.View getTargetContainer() -> getTargetContainer
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$3(com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> access$3
com.lidroid.xutils.DbUtils -> com.lidroid.xutils.DbUtils:
    java.util.HashMap daoMap -> daoMap
    android.database.sqlite.SQLiteDatabase database -> database
    com.lidroid.xutils.DbUtils$DaoConfig daoConfig -> daoConfig
    boolean debug -> debug
    boolean allowTransaction -> allowTransaction
    java.util.concurrent.locks.Lock writeLock -> writeLock
    boolean writeLocked -> writeLocked
    com.lidroid.xutils.DbUtils$FindTempCache findTempCache -> findTempCache
    com.lidroid.xutils.DbUtils getInstance(com.lidroid.xutils.DbUtils$DaoConfig) -> getInstance
    com.lidroid.xutils.DbUtils create(android.content.Context) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(com.lidroid.xutils.DbUtils$DaoConfig) -> create
    com.lidroid.xutils.DbUtils configDebug(boolean) -> configDebug
    com.lidroid.xutils.DbUtils configAllowTransaction(boolean) -> configAllowTransaction
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    com.lidroid.xutils.DbUtils$DaoConfig getDaoConfig() -> getDaoConfig
    void saveOrUpdate(java.lang.Object) -> saveOrUpdate
    void saveOrUpdateAll(java.util.List) -> saveOrUpdateAll
    void replace(java.lang.Object) -> replace
    void replaceAll(java.util.List) -> replaceAll
    void save(java.lang.Object) -> save
    void saveAll(java.util.List) -> saveAll
    boolean saveBindingId(java.lang.Object) -> saveBindingId
    void saveBindingIdAll(java.util.List) -> saveBindingIdAll
    void deleteById(java.lang.Class,java.lang.Object) -> deleteById
    void delete(java.lang.Object) -> delete
    void delete(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> delete
    void deleteAll(java.util.List) -> deleteAll
    void deleteAll(java.lang.Class) -> deleteAll
    void update(java.lang.Object,java.lang.String[]) -> update
    void update(java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> update
    void updateAll(java.util.List,java.lang.String[]) -> updateAll
    void updateAll(java.util.List,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> updateAll
    java.lang.Object findById(java.lang.Class,java.lang.Object) -> findById
    java.lang.Object findFirst(com.lidroid.xutils.db.sqlite.Selector) -> findFirst
    java.lang.Object findFirst(java.lang.Class) -> findFirst
    java.util.List findAll(com.lidroid.xutils.db.sqlite.Selector) -> findAll
    java.util.List findAll(java.lang.Class) -> findAll
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelFirst
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelFirst
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelAll
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelAll
    long count(com.lidroid.xutils.db.sqlite.Selector) -> count
    long count(java.lang.Class) -> count
    android.database.sqlite.SQLiteDatabase createDatabase(com.lidroid.xutils.DbUtils$DaoConfig) -> createDatabase
    void saveOrUpdateWithoutTransaction(java.lang.Object) -> saveOrUpdateWithoutTransaction
    boolean saveBindingIdWithoutTransaction(java.lang.Object) -> saveBindingIdWithoutTransaction
    long getLastAutoIncrementId(java.lang.String) -> getLastAutoIncrementId
    void createTableIfNotExist(java.lang.Class) -> createTableIfNotExist
    boolean tableIsExist(java.lang.Class) -> tableIsExist
    void dropDb() -> dropDb
    void dropTable(java.lang.Class) -> dropTable
    void close() -> close
    void debugSql(java.lang.String) -> debugSql
    void beginTransaction() -> beginTransaction
    void setTransactionSuccessful() -> setTransactionSuccessful
    void endTransaction() -> endTransaction
    void execNonQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execNonQuery
    void execNonQuery(java.lang.String) -> execNonQuery
    android.database.Cursor execQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execQuery
    android.database.Cursor execQuery(java.lang.String) -> execQuery
com.lidroid.xutils.DbUtils$DaoConfig -> com.lidroid.xutils.DbUtils$DaoConfig:
    android.content.Context context -> context
    java.lang.String dbName -> dbName
    int dbVersion -> dbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener dbUpgradeListener -> dbUpgradeListener
    java.lang.String dbDir -> dbDir
    android.content.Context getContext() -> getContext
    java.lang.String getDbName() -> getDbName
    void setDbName(java.lang.String) -> setDbName
    int getDbVersion() -> getDbVersion
    void setDbVersion(int) -> setDbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener getDbUpgradeListener() -> getDbUpgradeListener
    void setDbUpgradeListener(com.lidroid.xutils.DbUtils$DbUpgradeListener) -> setDbUpgradeListener
    java.lang.String getDbDir() -> getDbDir
    void setDbDir(java.lang.String) -> setDbDir
com.lidroid.xutils.DbUtils$DbUpgradeListener -> com.lidroid.xutils.DbUtils$DbUpgradeListener:
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.lidroid.xutils.DbUtils$FindTempCache -> com.lidroid.xutils.DbUtils$FindTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    com.lidroid.xutils.DbUtils this$0 -> this$0
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void setSeq(long) -> setSeq
com.lidroid.xutils.HttpUtils -> com.lidroid.xutils.HttpUtils:
    com.lidroid.xutils.http.HttpCache sHttpCache -> sHttpCache
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String responseTextCharset -> responseTextCharset
    long currentRequestExpiry -> currentRequestExpiry
    int DEFAULT_CONN_TIMEOUT -> DEFAULT_CONN_TIMEOUT
    int DEFAULT_RETRY_TIMES -> DEFAULT_RETRY_TIMES
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> EXECUTOR
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    com.lidroid.xutils.HttpUtils configResponseTextCharset(java.lang.String) -> configResponseTextCharset
    com.lidroid.xutils.HttpUtils configHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> configHttpRedirectHandler
    com.lidroid.xutils.HttpUtils configHttpCacheSize(int) -> configHttpCacheSize
    com.lidroid.xutils.HttpUtils configDefaultHttpCacheExpiry(long) -> configDefaultHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCurrentHttpCacheExpiry(long) -> configCurrentHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCookieStore(org.apache.http.client.CookieStore) -> configCookieStore
    com.lidroid.xutils.HttpUtils configUserAgent(java.lang.String) -> configUserAgent
    com.lidroid.xutils.HttpUtils configTimeout(int) -> configTimeout
    com.lidroid.xutils.HttpUtils configSoTimeout(int) -> configSoTimeout
    com.lidroid.xutils.HttpUtils configRegisterScheme(org.apache.http.conn.scheme.Scheme) -> configRegisterScheme
    com.lidroid.xutils.HttpUtils configSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> configSSLSocketFactory
    com.lidroid.xutils.HttpUtils configRequestRetryCount(int) -> configRequestRetryCount
    com.lidroid.xutils.HttpUtils configRequestThreadPoolSize(int) -> configRequestThreadPoolSize
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String) -> sendSync
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams) -> sendSync
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> sendRequest
    com.lidroid.xutils.http.ResponseStream sendSyncRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams) -> sendSyncRequest
com.lidroid.xutils.HttpUtils$1 -> com.lidroid.xutils.HttpUtils$1:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.lidroid.xutils.HttpUtils$2:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.ViewUtils -> com.lidroid.xutils.ViewUtils:
    void inject(android.view.View) -> inject
    void inject(android.app.Activity) -> inject
    void inject(android.preference.PreferenceActivity) -> inject
    void inject(java.lang.Object,android.view.View) -> inject
    void inject(java.lang.Object,android.app.Activity) -> inject
    void inject(java.lang.Object,android.preference.PreferenceGroup) -> inject
    void inject(java.lang.Object,android.preference.PreferenceActivity) -> inject
    void injectObject(java.lang.Object,com.lidroid.xutils.view.ViewFinder) -> injectObject
com.lidroid.xutils.bitmap.BitmapCacheListener -> com.lidroid.xutils.bitmap.BitmapCacheListener:
    void onInitMemoryCacheFinished() -> onInitMemoryCacheFinished
    void onInitDiskFinished() -> onInitDiskFinished
    void onClearCacheFinished() -> onClearCacheFinished
    void onClearMemoryCacheFinished() -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished() -> onClearDiskCacheFinished
    void onClearCacheFinished(java.lang.String) -> onClearCacheFinished
    void onClearMemoryCacheFinished(java.lang.String) -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished(java.lang.String) -> onClearDiskCacheFinished
    void onFlushCacheFinished() -> onFlushCacheFinished
    void onCloseCacheFinished() -> onCloseCacheFinished
com.lidroid.xutils.bitmap.BitmapCommonUtils -> com.lidroid.xutils.bitmap.BitmapCommonUtils:
    com.lidroid.xutils.bitmap.core.BitmapSize screenSize -> screenSize
    com.lidroid.xutils.bitmap.core.BitmapSize getScreenSize(android.content.Context) -> getScreenSize
    com.lidroid.xutils.bitmap.core.BitmapSize optimizeMaxSizeByView(android.view.View,int,int) -> optimizeMaxSizeByView
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
com.lidroid.xutils.bitmap.BitmapDisplayConfig -> com.lidroid.xutils.bitmap.BitmapDisplayConfig:
    com.lidroid.xutils.bitmap.core.BitmapSize bitmapMaxSize -> bitmapMaxSize
    android.view.animation.Animation animation -> animation
    android.graphics.drawable.Drawable loadingDrawable -> loadingDrawable
    android.graphics.drawable.Drawable loadFailedDrawable -> loadFailedDrawable
    boolean autoRotation -> autoRotation
    boolean showOriginal -> showOriginal
    android.graphics.Bitmap$Config bitmapConfig -> bitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory bitmapFactory -> bitmapFactory
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.bitmap.core.BitmapSize getBitmapMaxSize() -> getBitmapMaxSize
    void setBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> setBitmapMaxSize
    android.view.animation.Animation getAnimation() -> getAnimation
    void setAnimation(android.view.animation.Animation) -> setAnimation
    android.graphics.drawable.Drawable getLoadingDrawable() -> getLoadingDrawable
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    android.graphics.drawable.Drawable getLoadFailedDrawable() -> getLoadFailedDrawable
    void setLoadFailedDrawable(android.graphics.drawable.Drawable) -> setLoadFailedDrawable
    boolean isAutoRotation() -> isAutoRotation
    void setAutoRotation(boolean) -> setAutoRotation
    boolean isShowOriginal() -> isShowOriginal
    void setShowOriginal(boolean) -> setShowOriginal
    android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    void setBitmapConfig(android.graphics.Bitmap$Config) -> setBitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory getBitmapFactory() -> getBitmapFactory
    void setBitmapFactory(com.lidroid.xutils.bitmap.factory.BitmapFactory) -> setBitmapFactory
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String toString() -> toString
    com.lidroid.xutils.bitmap.BitmapDisplayConfig cloneNew() -> cloneNew
com.lidroid.xutils.bitmap.BitmapGlobalConfig -> com.lidroid.xutils.bitmap.BitmapGlobalConfig:
    java.lang.String diskCachePath -> diskCachePath
    int MIN_MEMORY_CACHE_SIZE -> MIN_MEMORY_CACHE_SIZE
    int memoryCacheSize -> memoryCacheSize
    int MIN_DISK_CACHE_SIZE -> MIN_DISK_CACHE_SIZE
    int diskCacheSize -> diskCacheSize
    boolean memoryCacheEnabled -> memoryCacheEnabled
    boolean diskCacheEnabled -> diskCacheEnabled
    com.lidroid.xutils.bitmap.download.Downloader downloader -> downloader
    com.lidroid.xutils.bitmap.core.BitmapCache bitmapCache -> bitmapCache
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor BITMAP_LOAD_EXECUTOR -> BITMAP_LOAD_EXECUTOR
    com.lidroid.xutils.task.PriorityExecutor DISK_CACHE_EXECUTOR -> DISK_CACHE_EXECUTOR
    long defaultCacheExpiry -> defaultCacheExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener bitmapCacheListener -> bitmapCacheListener
    android.content.Context mContext -> mContext
    java.util.HashMap configMap -> configMap
    com.lidroid.xutils.bitmap.BitmapGlobalConfig getInstance(android.content.Context,java.lang.String) -> getInstance
    void initBitmapCache() -> initBitmapCache
    java.lang.String getDiskCachePath() -> getDiskCachePath
    com.lidroid.xutils.bitmap.download.Downloader getDownloader() -> getDownloader
    void setDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> setDownloader
    long getDefaultCacheExpiry() -> getDefaultCacheExpiry
    void setDefaultCacheExpiry(long) -> setDefaultCacheExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
    com.lidroid.xutils.bitmap.core.BitmapCache getBitmapCache() -> getBitmapCache
    int getMemoryCacheSize() -> getMemoryCacheSize
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setMemCacheSizePercent(float) -> setMemCacheSizePercent
    int getDiskCacheSize() -> getDiskCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    int getThreadPoolSize() -> getThreadPoolSize
    void setThreadPoolSize(int) -> setThreadPoolSize
    com.lidroid.xutils.task.PriorityExecutor getBitmapLoadExecutor() -> getBitmapLoadExecutor
    com.lidroid.xutils.task.PriorityExecutor getDiskCacheExecutor() -> getDiskCacheExecutor
    boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    void setMemoryCacheEnabled(boolean) -> setMemoryCacheEnabled
    boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    void setDiskCacheEnabled(boolean) -> setDiskCacheEnabled
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener getBitmapCacheListener() -> getBitmapCacheListener
    void setBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> setBitmapCacheListener
    int getMemoryClass() -> getMemoryClass
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    com.lidroid.xutils.bitmap.BitmapCacheListener access$0(com.lidroid.xutils.bitmap.BitmapGlobalConfig) -> access$0
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask -> com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask:
    int MESSAGE_INIT_MEMORY_CACHE -> MESSAGE_INIT_MEMORY_CACHE
    int MESSAGE_INIT_DISK_CACHE -> MESSAGE_INIT_DISK_CACHE
    int MESSAGE_FLUSH -> MESSAGE_FLUSH
    int MESSAGE_CLOSE -> MESSAGE_CLOSE
    int MESSAGE_CLEAR -> MESSAGE_CLEAR
    int MESSAGE_CLEAR_MEMORY -> MESSAGE_CLEAR_MEMORY
    int MESSAGE_CLEAR_DISK -> MESSAGE_CLEAR_DISK
    int MESSAGE_CLEAR_BY_KEY -> MESSAGE_CLEAR_BY_KEY
    int MESSAGE_CLEAR_MEMORY_BY_KEY -> MESSAGE_CLEAR_MEMORY_BY_KEY
    int MESSAGE_CLEAR_DISK_BY_KEY -> MESSAGE_CLEAR_DISK_BY_KEY
    com.lidroid.xutils.bitmap.BitmapGlobalConfig this$0 -> this$0
    java.lang.Object[] doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.bitmap.PauseOnScrollListener -> com.lidroid.xutils.bitmap.PauseOnScrollListener:
    com.lidroid.xutils.task.TaskHandler taskHandler -> taskHandler
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack:
    com.lidroid.xutils.bitmap.callback.BitmapSetter bitmapSetter -> bitmapSetter
    void onPreLoad(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onPreLoad
    void onLoadStarted(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onLoadStarted
    void onLoading(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,long,long) -> onLoading
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void setBitmapSetter(com.lidroid.xutils.bitmap.callback.BitmapSetter) -> setBitmapSetter
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom -> com.lidroid.xutils.bitmap.callback.BitmapLoadFrom:
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom MEMORY_CACHE -> MEMORY_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom DISK_CACHE -> DISK_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom URI -> URI
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] values() -> values
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.bitmap.callback.BitmapSetter -> com.lidroid.xutils.bitmap.callback.BitmapSetter:
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack:
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void animationDisplay(android.view.View,android.view.animation.Animation) -> animationDisplay
com.lidroid.xutils.bitmap.core.AsyncDrawable -> com.lidroid.xutils.bitmap.core.AsyncDrawable:
    java.lang.ref.WeakReference bitmapLoadTaskReference -> bitmapLoadTaskReference
    android.graphics.drawable.Drawable baseDrawable -> baseDrawable
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapWorkerTask() -> getBitmapWorkerTask
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void setBounds(int,int,int,int) -> setBounds
    void setBounds(android.graphics.Rect) -> setBounds
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void invalidateSelf() -> invalidateSelf
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
com.lidroid.xutils.bitmap.core.BitmapCache -> com.lidroid.xutils.bitmap.core.BitmapCache:
    int DISK_CACHE_INDEX -> DISK_CACHE_INDEX
    com.lidroid.xutils.cache.LruDiskCache mDiskLruCache -> mDiskLruCache
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    java.lang.Object mDiskCacheLock -> mDiskCacheLock
    boolean isDiskCacheReady -> isDiskCacheReady
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    void initMemoryCache() -> initMemoryCache
    void initDiskCache() -> initDiskCache
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    void setDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setDiskCacheFileNameGenerator
    android.graphics.Bitmap downloadBitmap(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadBitmap
    android.graphics.Bitmap addBitmapToMemoryCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap,long) -> addBitmapToMemoryCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromDiskCache
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flush() -> flush
    void close() -> close
    android.graphics.Bitmap decodeBitmapMeta(com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> decodeBitmapMeta
    android.graphics.Bitmap rotateBitmapIfNeeded(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap) -> rotateBitmapIfNeeded
com.lidroid.xutils.bitmap.core.BitmapCache$1 -> com.lidroid.xutils.bitmap.core.BitmapCache$1:
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    int sizeOf(com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta -> com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta:
    java.io.FileInputStream inputStream -> inputStream
    byte[] data -> data
    long expiryTimestamp -> expiryTimestamp
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey -> com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey:
    java.lang.String uri -> uri
    java.lang.String subKey -> subKey
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lidroid.xutils.bitmap.core.BitmapDecoder -> com.lidroid.xutils.bitmap.core.BitmapDecoder:
    java.lang.Object lock -> lock
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromResource
    android.graphics.Bitmap decodeSampledBitmapFromFile(java.lang.String,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromFile
    android.graphics.Bitmap decodeSampledBitmapFromDescriptor(java.io.FileDescriptor,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromDescriptor
    android.graphics.Bitmap decodeSampledBitmapFromByteArray(byte[],com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromByteArray
    android.graphics.Bitmap decodeResource(android.content.res.Resources,int) -> decodeResource
    android.graphics.Bitmap decodeFile(java.lang.String) -> decodeFile
    android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor) -> decodeFileDescriptor
    android.graphics.Bitmap decodeByteArray(byte[]) -> decodeByteArray
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
com.lidroid.xutils.bitmap.core.BitmapSize -> com.lidroid.xutils.bitmap.core.BitmapSize:
    com.lidroid.xutils.bitmap.core.BitmapSize ZERO -> ZERO
    int width -> width
    int height -> height
    com.lidroid.xutils.bitmap.core.BitmapSize scaleDown(int) -> scaleDown
    com.lidroid.xutils.bitmap.core.BitmapSize scale(float) -> scale
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    java.lang.String toString() -> toString
com.lidroid.xutils.bitmap.download.DefaultDownloader -> com.lidroid.xutils.bitmap.download.DefaultDownloader:
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
com.lidroid.xutils.bitmap.download.Downloader -> com.lidroid.xutils.bitmap.download.Downloader:
    android.content.Context context -> context
    long defaultExpiry -> defaultExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    void setDefaultExpiry(long) -> setDefaultExpiry
    long getDefaultExpiry() -> getDefaultExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
com.lidroid.xutils.bitmap.factory.BitmapFactory -> com.lidroid.xutils.bitmap.factory.BitmapFactory:
    com.lidroid.xutils.bitmap.factory.BitmapFactory cloneNew() -> cloneNew
    android.graphics.Bitmap createBitmap(android.graphics.Bitmap) -> createBitmap
com.lidroid.xutils.cache.FileNameGenerator -> com.lidroid.xutils.cache.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.lidroid.xutils.cache.KeyExpiryMap -> com.lidroid.xutils.cache.KeyExpiryMap:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    java.lang.Long get(java.lang.Object) -> get
    java.lang.Long put(java.lang.Object,java.lang.Long) -> put
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Long remove(java.lang.Object) -> remove
    void clear() -> clear
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.lidroid.xutils.cache.LruDiskCache -> com.lidroid.xutils.cache.LruDiskCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION -> VERSION
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    char CLEAN -> CLEAN
    char UPDATE -> UPDATE
    char DELETE -> DELETE
    char READ -> READ
    char EXPIRY_PREFIX -> EXPIRY_PREFIX
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int valueCount -> valueCount
    long size -> size
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.cache.LruDiskCache open(java.io.File,int,int,long) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    long getExpiryTimestamp(java.lang.String) -> getExpiryTimestamp
    java.io.File getCacheFile(java.lang.String,int) -> getCacheFile
    com.lidroid.xutils.cache.LruDiskCache$Snapshot get(java.lang.String) -> get
    com.lidroid.xutils.cache.LruDiskCache$Snapshot getByDiskKey(java.lang.String) -> getByDiskKey
    com.lidroid.xutils.cache.LruDiskCache$Editor edit(java.lang.String) -> edit
    com.lidroid.xutils.cache.LruDiskCache$Editor editByDiskKey(java.lang.String,long) -> editByDiskKey
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    void completeEdit(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean removeByDiskKey(java.lang.String) -> removeByDiskKey
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void delete() -> delete
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    java.io.Writer access$0(com.lidroid.xutils.cache.LruDiskCache) -> access$0
    void access$1(com.lidroid.xutils.cache.LruDiskCache) -> access$1
    boolean access$2(com.lidroid.xutils.cache.LruDiskCache) -> access$2
    void access$3(com.lidroid.xutils.cache.LruDiskCache) -> access$3
    void access$4(com.lidroid.xutils.cache.LruDiskCache,int) -> access$4
    com.lidroid.xutils.cache.LruDiskCache$Editor access$5(com.lidroid.xutils.cache.LruDiskCache,java.lang.String,long) -> access$5
    java.lang.String access$6(java.io.InputStream) -> access$6
    int access$7(com.lidroid.xutils.cache.LruDiskCache) -> access$7
    java.io.File access$8(com.lidroid.xutils.cache.LruDiskCache) -> access$8
    java.io.OutputStream access$9() -> access$9
    void access$10(com.lidroid.xutils.cache.LruDiskCache,com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$10
    boolean access$11(com.lidroid.xutils.cache.LruDiskCache,java.lang.String) -> access$11
com.lidroid.xutils.cache.LruDiskCache$1 -> com.lidroid.xutils.cache.LruDiskCache$1:
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.lidroid.xutils.cache.LruDiskCache$2 -> com.lidroid.xutils.cache.LruDiskCache$2:
    void write(int) -> write
com.lidroid.xutils.cache.LruDiskCache$Editor -> com.lidroid.xutils.cache.LruDiskCache$Editor:
    com.lidroid.xutils.cache.LruDiskCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void setEntryExpiryTimestamp(long) -> setEntryExpiryTimestamp
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    void access$0(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$0
    com.lidroid.xutils.cache.LruDiskCache$Entry access$2(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$2
    boolean[] access$3(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$3
com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream -> com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream:
    com.lidroid.xutils.cache.LruDiskCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.lidroid.xutils.cache.LruDiskCache$Entry -> com.lidroid.xutils.cache.LruDiskCache$Entry:
    java.lang.String diskKey -> diskKey
    long expiryTimestamp -> expiryTimestamp
    long[] lengths -> lengths
    boolean readable -> readable
    com.lidroid.xutils.cache.LruDiskCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[],int) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$0(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$0
    void access$1(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$1
    com.lidroid.xutils.cache.LruDiskCache$Editor access$2(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$2
    java.lang.String access$3(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$3
    void access$5(com.lidroid.xutils.cache.LruDiskCache$Entry,boolean) -> access$5
    void access$6(com.lidroid.xutils.cache.LruDiskCache$Entry,com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$6
    void access$7(com.lidroid.xutils.cache.LruDiskCache$Entry,java.lang.String[],int) -> access$7
    long[] access$8(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$8
    long access$9(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$9
    long access$10(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$10
    void access$11(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$11
com.lidroid.xutils.cache.LruDiskCache$Snapshot -> com.lidroid.xutils.cache.LruDiskCache$Snapshot:
    java.lang.String diskKey -> diskKey
    long sequenceNumber -> sequenceNumber
    java.io.FileInputStream[] ins -> ins
    long[] lengths -> lengths
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    com.lidroid.xutils.cache.LruDiskCache$Editor edit() -> edit
    java.io.FileInputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$0(com.lidroid.xutils.cache.LruDiskCache$StrictLineReader) -> access$0
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1 -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1:
    com.lidroid.xutils.cache.LruDiskCache$StrictLineReader this$1 -> this$1
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.LruMemoryCache -> com.lidroid.xutils.cache.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> keyExpiryMap
    void setMaxSize(int) -> setMaxSize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put(java.lang.Object,java.lang.Object,long) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    boolean containsKey(java.lang.Object) -> containsKey
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.MD5FileNameGenerator -> com.lidroid.xutils.cache.MD5FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.lidroid.xutils.db.annotation.Check -> com.lidroid.xutils.db.annotation.Check:
    java.lang.String value() -> value
com.lidroid.xutils.db.annotation.Column -> com.lidroid.xutils.db.annotation.Column:
    java.lang.String column() -> column
    java.lang.String defaultValue() -> defaultValue
com.lidroid.xutils.db.annotation.Finder -> com.lidroid.xutils.db.annotation.Finder:
    java.lang.String valueColumn() -> valueColumn
    java.lang.String targetColumn() -> targetColumn
com.lidroid.xutils.db.annotation.Foreign -> com.lidroid.xutils.db.annotation.Foreign:
    java.lang.String column() -> column
    java.lang.String foreign() -> foreign
com.lidroid.xutils.db.annotation.Id -> com.lidroid.xutils.db.annotation.Id:
    java.lang.String column() -> column
com.lidroid.xutils.db.annotation.NoAutoIncrement -> com.lidroid.xutils.db.annotation.NoAutoIncrement:
com.lidroid.xutils.db.annotation.NotNull -> com.lidroid.xutils.db.annotation.NotNull:
com.lidroid.xutils.db.annotation.Table -> com.lidroid.xutils.db.annotation.Table:
    java.lang.String name() -> name
    java.lang.String execAfterTableCreated() -> execAfterTableCreated
com.lidroid.xutils.db.annotation.Transient -> com.lidroid.xutils.db.annotation.Transient:
com.lidroid.xutils.db.annotation.Unique -> com.lidroid.xutils.db.annotation.Unique:
com.lidroid.xutils.db.converter.BooleanColumnConverter -> com.lidroid.xutils.db.converter.BooleanColumnConverter:
    java.lang.Boolean getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Boolean getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Boolean) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteArrayColumnConverter -> com.lidroid.xutils.db.converter.ByteArrayColumnConverter:
    byte[] getFieldValue(android.database.Cursor,int) -> getFieldValue
    byte[] getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(byte[]) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteColumnConverter -> com.lidroid.xutils.db.converter.ByteColumnConverter:
    java.lang.Byte getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Byte getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Byte) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.CharColumnConverter -> com.lidroid.xutils.db.converter.CharColumnConverter:
    java.lang.Character getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Character getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Character) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ColumnConverter -> com.lidroid.xutils.db.converter.ColumnConverter:
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.converter.ColumnConverterFactory -> com.lidroid.xutils.db.converter.ColumnConverterFactory:
    java.util.concurrent.ConcurrentHashMap columnType_columnConverter_map -> columnType_columnConverter_map
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter(java.lang.Class) -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getDbColumnType(java.lang.Class) -> getDbColumnType
    void registerColumnConverter(java.lang.Class,com.lidroid.xutils.db.converter.ColumnConverter) -> registerColumnConverter
    boolean isSupportColumnConverter(java.lang.Class) -> isSupportColumnConverter
com.lidroid.xutils.db.converter.DateColumnConverter -> com.lidroid.xutils.db.converter.DateColumnConverter:
    java.util.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.util.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.util.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.DoubleColumnConverter -> com.lidroid.xutils.db.converter.DoubleColumnConverter:
    java.lang.Double getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Double getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Double) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.FloatColumnConverter -> com.lidroid.xutils.db.converter.FloatColumnConverter:
    java.lang.Float getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Float getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Float) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.IntegerColumnConverter -> com.lidroid.xutils.db.converter.IntegerColumnConverter:
    java.lang.Integer getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Integer getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Integer) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.LongColumnConverter -> com.lidroid.xutils.db.converter.LongColumnConverter:
    java.lang.Long getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Long getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Long) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ShortColumnConverter -> com.lidroid.xutils.db.converter.ShortColumnConverter:
    java.lang.Short getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Short getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Short) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.SqlDateColumnConverter -> com.lidroid.xutils.db.converter.SqlDateColumnConverter:
    java.sql.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.sql.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.sql.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.StringColumnConverter -> com.lidroid.xutils.db.converter.StringColumnConverter:
    java.lang.String getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.String getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.String) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.sqlite.ColumnDbType -> com.lidroid.xutils.db.sqlite.ColumnDbType:
    com.lidroid.xutils.db.sqlite.ColumnDbType INTEGER -> INTEGER
    com.lidroid.xutils.db.sqlite.ColumnDbType REAL -> REAL
    com.lidroid.xutils.db.sqlite.ColumnDbType TEXT -> TEXT
    com.lidroid.xutils.db.sqlite.ColumnDbType BLOB -> BLOB
    java.lang.String value -> value
    com.lidroid.xutils.db.sqlite.ColumnDbType[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.lidroid.xutils.db.sqlite.ColumnDbType[] values() -> values
    com.lidroid.xutils.db.sqlite.ColumnDbType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.db.sqlite.CursorUtils -> com.lidroid.xutils.db.sqlite.CursorUtils:
    java.lang.Object getEntity(com.lidroid.xutils.DbUtils,android.database.Cursor,java.lang.Class,long) -> getEntity
    com.lidroid.xutils.db.table.DbModel getDbModel(android.database.Cursor) -> getDbModel
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache -> com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void setSeq(long) -> setSeq
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence -> com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence:
    long seq -> seq
    java.lang.String FOREIGN_LAZY_LOADER_CLASS_NAME -> FOREIGN_LAZY_LOADER_CLASS_NAME
    java.lang.String FINDER_LAZY_LOADER_CLASS_NAME -> FINDER_LAZY_LOADER_CLASS_NAME
    long getSeq() -> getSeq
com.lidroid.xutils.db.sqlite.DbModelSelector -> com.lidroid.xutils.db.sqlite.DbModelSelector:
    java.lang.String[] columnExpressions -> columnExpressions
    java.lang.String groupByColumnName -> groupByColumnName
    com.lidroid.xutils.db.sqlite.WhereBuilder having -> having
    com.lidroid.xutils.db.sqlite.Selector selector -> selector
    com.lidroid.xutils.db.sqlite.DbModelSelector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.DbModelSelector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector having(com.lidroid.xutils.db.sqlite.WhereBuilder) -> having
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.DbModelSelector offset(int) -> offset
    java.lang.Class getEntityType() -> getEntityType
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.FinderLazyLoader -> com.lidroid.xutils.db.sqlite.FinderLazyLoader:
    com.lidroid.xutils.db.table.Finder finderColumn -> finderColumn
    java.lang.Object finderValue -> finderValue
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
com.lidroid.xutils.db.sqlite.ForeignLazyLoader -> com.lidroid.xutils.db.sqlite.ForeignLazyLoader:
    com.lidroid.xutils.db.table.Foreign foreignColumn -> foreignColumn
    java.lang.Object columnValue -> columnValue
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
    void setColumnValue(java.lang.Object) -> setColumnValue
    java.lang.Object getColumnValue() -> getColumnValue
com.lidroid.xutils.db.sqlite.Selector -> com.lidroid.xutils.db.sqlite.Selector:
    java.lang.Class entityType -> entityType
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.sqlite.WhereBuilder whereBuilder -> whereBuilder
    java.util.List orderByList -> orderByList
    int limit -> limit
    int offset -> offset
    com.lidroid.xutils.db.sqlite.Selector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.Selector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.Selector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.Selector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.Selector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.Selector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.Selector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.Selector offset(int) -> offset
    java.lang.String toString() -> toString
    java.lang.Class getEntityType() -> getEntityType
com.lidroid.xutils.db.sqlite.Selector$OrderBy -> com.lidroid.xutils.db.sqlite.Selector$OrderBy:
    java.lang.String columnName -> columnName
    boolean desc -> desc
    com.lidroid.xutils.db.sqlite.Selector this$0 -> this$0
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.SqlInfo -> com.lidroid.xutils.db.sqlite.SqlInfo:
    java.lang.String sql -> sql
    java.util.LinkedList bindArgs -> bindArgs
    java.lang.String getSql() -> getSql
    void setSql(java.lang.String) -> setSql
    java.util.LinkedList getBindArgs() -> getBindArgs
    java.lang.Object[] getBindArgsAsArray() -> getBindArgsAsArray
    java.lang.String[] getBindArgsAsStrArray() -> getBindArgsAsStrArray
    void addBindArg(java.lang.Object) -> addBindArg
    void addBindArgWithoutConverter(java.lang.Object) -> addBindArgWithoutConverter
    void addBindArgs(java.lang.Object[]) -> addBindArgs
com.lidroid.xutils.db.sqlite.SqlInfoBuilder -> com.lidroid.xutils.db.sqlite.SqlInfoBuilder:
    com.lidroid.xutils.db.sqlite.SqlInfo buildInsertSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildInsertSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildReplaceSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildReplaceSqlInfo
    java.lang.String buildDeleteSqlByTableName(java.lang.String) -> buildDeleteSqlByTableName
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildCreateTableSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class) -> buildCreateTableSqlInfo
    com.lidroid.xutils.db.table.KeyValue column2KeyValue(java.lang.Object,com.lidroid.xutils.db.table.Column) -> column2KeyValue
    java.util.List entity2KeyValueList(com.lidroid.xutils.DbUtils,java.lang.Object) -> entity2KeyValueList
com.lidroid.xutils.db.sqlite.WhereBuilder -> com.lidroid.xutils.db.sqlite.WhereBuilder:
    java.util.List whereItems -> whereItems
    com.lidroid.xutils.db.sqlite.WhereBuilder b() -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder b(java.lang.String,java.lang.String,java.lang.Object) -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.WhereBuilder or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    int getWhereItemSize() -> getWhereItemSize
    java.lang.String toString() -> toString
    void appendCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> appendCondition
com.lidroid.xutils.db.table.Column -> com.lidroid.xutils.db.table.Column:
    com.lidroid.xutils.db.table.Table table -> table
    int index -> index
    java.lang.String columnName -> columnName
    java.lang.Object defaultValue -> defaultValue
    java.lang.reflect.Method getMethod -> getMethod
    java.lang.reflect.Method setMethod -> setMethod
    java.lang.reflect.Field columnField -> columnField
    com.lidroid.xutils.db.converter.ColumnConverter columnConverter -> columnConverter
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getFieldValue(java.lang.Object) -> getFieldValue
    com.lidroid.xutils.db.table.Table getTable() -> getTable
    void setTable(com.lidroid.xutils.db.table.Table) -> setTable
    int getIndex() -> getIndex
    java.lang.String getColumnName() -> getColumnName
    java.lang.Object getDefaultValue() -> getDefaultValue
    java.lang.reflect.Field getColumnField() -> getColumnField
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter() -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.ColumnUtils -> com.lidroid.xutils.db.table.ColumnUtils:
    java.util.HashSet DB_PRIMITIVE_TYPES -> DB_PRIMITIVE_TYPES
    boolean isDbPrimitiveType(java.lang.Class) -> isDbPrimitiveType
    java.lang.reflect.Method getColumnGetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnGetMethod
    java.lang.reflect.Method getColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnSetMethod
    java.lang.String getColumnNameByField(java.lang.reflect.Field) -> getColumnNameByField
    java.lang.String getForeignColumnNameByField(java.lang.reflect.Field) -> getForeignColumnNameByField
    java.lang.String getColumnDefaultValue(java.lang.reflect.Field) -> getColumnDefaultValue
    boolean isTransient(java.lang.reflect.Field) -> isTransient
    boolean isForeign(java.lang.reflect.Field) -> isForeign
    boolean isFinder(java.lang.reflect.Field) -> isFinder
    boolean isUnique(java.lang.reflect.Field) -> isUnique
    boolean isNotNull(java.lang.reflect.Field) -> isNotNull
    java.lang.String getCheck(java.lang.reflect.Field) -> getCheck
    java.lang.Class getForeignEntityType(com.lidroid.xutils.db.table.Foreign) -> getForeignEntityType
    java.lang.Class getFinderTargetEntityType(com.lidroid.xutils.db.table.Finder) -> getFinderTargetEntityType
    java.lang.Object convert2DbColumnValueIfNeeded(java.lang.Object) -> convert2DbColumnValueIfNeeded
    boolean isStartWithIs(java.lang.String) -> isStartWithIs
    java.lang.reflect.Method getBooleanColumnGetMethod(java.lang.Class,java.lang.String) -> getBooleanColumnGetMethod
    java.lang.reflect.Method getBooleanColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getBooleanColumnSetMethod
com.lidroid.xutils.db.table.DbModel -> com.lidroid.xutils.db.table.DbModel:
    java.util.HashMap dataMap -> dataMap
    java.lang.String getString(java.lang.String) -> getString
    int getInt(java.lang.String) -> getInt
    boolean getBoolean(java.lang.String) -> getBoolean
    double getDouble(java.lang.String) -> getDouble
    float getFloat(java.lang.String) -> getFloat
    long getLong(java.lang.String) -> getLong
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    void add(java.lang.String,java.lang.String) -> add
    java.util.HashMap getDataMap() -> getDataMap
    boolean isEmpty(java.lang.String) -> isEmpty
com.lidroid.xutils.db.table.Finder -> com.lidroid.xutils.db.table.Finder:
    java.lang.String valueColumnName -> valueColumnName
    java.lang.String targetColumnName -> targetColumnName
    java.lang.Class getTargetEntityType() -> getTargetEntityType
    java.lang.String getTargetColumnName() -> getTargetColumnName
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getDefaultValue() -> getDefaultValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.Foreign -> com.lidroid.xutils.db.table.Foreign:
    java.lang.String foreignColumnName -> foreignColumnName
    com.lidroid.xutils.db.converter.ColumnConverter foreignColumnConverter -> foreignColumnConverter
    java.lang.String getForeignColumnName() -> getForeignColumnName
    java.lang.Class getForeignEntityType() -> getForeignEntityType
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object getDefaultValue() -> getDefaultValue
com.lidroid.xutils.db.table.Id -> com.lidroid.xutils.db.table.Id:
    java.lang.String columnFieldClassName -> columnFieldClassName
    boolean isAutoIncrementChecked -> isAutoIncrementChecked
    boolean isAutoIncrement -> isAutoIncrement
    java.util.HashSet INTEGER_TYPES -> INTEGER_TYPES
    java.util.HashSet AUTO_INCREMENT_TYPES -> AUTO_INCREMENT_TYPES
    boolean isAutoIncrement() -> isAutoIncrement
    void setAutoIncrementId(java.lang.Object,long) -> setAutoIncrementId
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
com.lidroid.xutils.db.table.KeyValue -> com.lidroid.xutils.db.table.KeyValue:
    java.lang.String key -> key
    java.lang.Object value -> value
com.lidroid.xutils.db.table.Table -> com.lidroid.xutils.db.table.Table:
    com.lidroid.xutils.DbUtils db -> db
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.table.Id id -> id
    java.util.HashMap columnMap -> columnMap
    java.util.HashMap finderMap -> finderMap
    java.util.HashMap tableMap -> tableMap
    boolean checkedDatabase -> checkedDatabase
    com.lidroid.xutils.db.table.Table get(com.lidroid.xutils.DbUtils,java.lang.Class) -> get
    void remove(com.lidroid.xutils.DbUtils,java.lang.Class) -> remove
    void remove(com.lidroid.xutils.DbUtils,java.lang.String) -> remove
    boolean isCheckedDatabase() -> isCheckedDatabase
    void setCheckedDatabase(boolean) -> setCheckedDatabase
com.lidroid.xutils.db.table.TableUtils -> com.lidroid.xutils.db.table.TableUtils:
    java.util.concurrent.ConcurrentHashMap entityColumnsMap -> entityColumnsMap
    java.util.concurrent.ConcurrentHashMap entityIdMap -> entityIdMap
    java.lang.String getTableName(java.lang.Class) -> getTableName
    java.lang.String getExecAfterTableCreated(java.lang.Class) -> getExecAfterTableCreated
    java.util.HashMap getColumnMap(java.lang.Class) -> getColumnMap
    void addColumns2Map(java.lang.Class,java.lang.String,java.util.HashMap) -> addColumns2Map
    com.lidroid.xutils.db.table.Column getColumnOrId(java.lang.Class,java.lang.String) -> getColumnOrId
    com.lidroid.xutils.db.table.Id getId(java.lang.Class) -> getId
    java.lang.String getPrimaryKeyFieldName(java.lang.Class) -> getPrimaryKeyFieldName
    java.lang.String getPrimaryKeyColumnName(java.lang.Class) -> getPrimaryKeyColumnName
com.lidroid.xutils.exception.BaseException -> com.lidroid.xutils.exception.BaseException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.DbException -> com.lidroid.xutils.exception.DbException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.HttpException -> com.lidroid.xutils.exception.HttpException:
    long serialVersionUID -> serialVersionUID
    int exceptionCode -> exceptionCode
    int getExceptionCode() -> getExceptionCode
com.lidroid.xutils.http.HttpCache -> com.lidroid.xutils.http.HttpCache:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    long DEFAULT_EXPIRY_TIME -> DEFAULT_EXPIRY_TIME
    int cacheSize -> cacheSize
    long defaultExpiryTime -> defaultExpiryTime
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> httpMethod_enabled_map
    void setCacheSize(int) -> setCacheSize
    void setDefaultExpiryTime(long) -> setDefaultExpiryTime
    long getDefaultExpiryTime() -> getDefaultExpiryTime
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.lang.String,long) -> put
    java.lang.String get(java.lang.String) -> get
    void clear() -> clear
    boolean isEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod) -> isEnabled
    boolean isEnabled(java.lang.String) -> isEnabled
    void setEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,boolean) -> setEnabled
com.lidroid.xutils.http.HttpCache$1 -> com.lidroid.xutils.http.HttpCache$1:
    com.lidroid.xutils.http.HttpCache this$0 -> this$0
    int sizeOf(java.lang.String,java.lang.String) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.http.HttpHandler -> com.lidroid.xutils.http.HttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    org.apache.http.client.methods.HttpRequestBase request -> request
    boolean isUploading -> isUploading
    com.lidroid.xutils.http.callback.RequestCallBack callback -> callback
    int retriedCount -> retriedCount
    java.lang.String fileSavePath -> fileSavePath
    boolean isDownloadingFile -> isDownloadingFile
    boolean autoResume -> autoResume
    boolean autoRename -> autoRename
    java.lang.String charset -> charset
    com.lidroid.xutils.http.HttpHandler$State state -> state
    long expiry -> expiry
    int UPDATE_START -> UPDATE_START
    int UPDATE_LOADING -> UPDATE_LOADING
    int UPDATE_FAILURE -> UPDATE_FAILURE
    int UPDATE_SUCCESS -> UPDATE_SUCCESS
    long lastUpdateTime -> lastUpdateTime
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> notUseApacheRedirectHandler
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    com.lidroid.xutils.http.HttpHandler$State getState() -> getState
    void setExpiry(long) -> setExpiry
    void setRequestCallBack(com.lidroid.xutils.http.callback.RequestCallBack) -> setRequestCallBack
    com.lidroid.xutils.http.callback.RequestCallBack getRequestCallBack() -> getRequestCallBack
    com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> handleResponse
    void cancel() -> cancel
    boolean updateProgress(long,long,boolean) -> updateProgress
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.lidroid.xutils.http.HttpHandler$State -> com.lidroid.xutils.http.HttpHandler$State:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> WAITING
    com.lidroid.xutils.http.HttpHandler$State STARTED -> STARTED
    com.lidroid.xutils.http.HttpHandler$State LOADING -> LOADING
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> FAILURE
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> CANCELLED
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> SUCCESS
    int value -> value
    com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.http.HttpHandler$State valueOf(int) -> valueOf
    int value() -> value
    com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.RequestParams -> com.lidroid.xutils.http.RequestParams:
    java.lang.String charset -> charset
    java.util.List headers -> headers
    java.util.List queryStringParams -> queryStringParams
    org.apache.http.HttpEntity bodyEntity -> bodyEntity
    java.util.List bodyParams -> bodyParams
    java.util.HashMap fileParams -> fileParams
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String getCharset() -> getCharset
    void setContentType(java.lang.String) -> setContentType
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void addHeaders(java.util.List) -> addHeaders
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(java.util.List) -> setHeaders
    void addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    void addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    void addQueryStringParameter(java.util.List) -> addQueryStringParameter
    void addBodyParameter(java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(org.apache.http.NameValuePair) -> addBodyParameter
    void addBodyParameter(java.util.List) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String,java.lang.String) -> addBodyParameter
    void setBodyEntity(org.apache.http.HttpEntity) -> setBodyEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.List getQueryStringParams() -> getQueryStringParams
    java.util.List getHeaders() -> getHeaders
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.lidroid.xutils.http.RequestParams$HeaderItem:
    boolean overwrite -> overwrite
    org.apache.http.Header header -> header
    com.lidroid.xutils.http.RequestParams this$0 -> this$0
com.lidroid.xutils.http.ResponseInfo -> com.lidroid.xutils.http.ResponseInfo:
    org.apache.http.HttpResponse response -> response
    java.lang.Object result -> result
    boolean resultFormCache -> resultFormCache
    java.util.Locale locale -> locale
    int statusCode -> statusCode
    org.apache.http.ProtocolVersion protocolVersion -> protocolVersion
    java.lang.String reasonPhrase -> reasonPhrase
    long contentLength -> contentLength
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
com.lidroid.xutils.http.ResponseStream -> com.lidroid.xutils.http.ResponseStream:
    org.apache.http.HttpResponse baseResponse -> baseResponse
    java.io.InputStream baseStream -> baseStream
    java.lang.String charset -> charset
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    long expiry -> expiry
    java.lang.String _directResult -> _directResult
    java.lang.String getRequestUrl() -> getRequestUrl
    java.lang.String getRequestMethod() -> getRequestMethod
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.io.InputStream getBaseStream() -> getBaseStream
    org.apache.http.HttpResponse getBaseResponse() -> getBaseResponse
    int getStatusCode() -> getStatusCode
    java.util.Locale getLocale() -> getLocale
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String readString() -> readString
    void readFile(java.lang.String) -> readFile
    int read() -> read
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.SyncHttpHandler -> com.lidroid.xutils.http.SyncHttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    java.lang.String charset -> charset
    int retriedTimes -> retriedTimes
    long expiry -> expiry
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    void setExpiry(long) -> setExpiry
    com.lidroid.xutils.http.ResponseStream sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    com.lidroid.xutils.http.ResponseStream handleResponse(org.apache.http.HttpResponse) -> handleResponse
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.lidroid.xutils.http.callback.FileDownloadHandler:
    java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> handleEntity
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.lidroid.xutils.http.callback.HttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.RequestCallBack -> com.lidroid.xutils.http.callback.RequestCallBack:
    int DEFAULT_RATE -> DEFAULT_RATE
    int MIN_RATE -> MIN_RATE
    java.lang.String requestUrl -> requestUrl
    java.lang.Object userTag -> userTag
    int rate -> rate
    int getRate() -> getRate
    void setRate(int) -> setRate
    java.lang.Object getUserTag() -> getUserTag
    void setUserTag(java.lang.Object) -> setUserTag
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void onStart() -> onStart
    void onCancelled() -> onCancelled
    void onLoading(long,long,boolean) -> onLoading
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.lidroid.xutils.http.callback.RequestCallBackHandler:
    boolean updateProgress(long,long,boolean) -> updateProgress
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.lidroid.xutils.http.callback.StringDownloadHandler:
    java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> handleEntity
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.security.KeyStore trustStore -> trustStore
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> instance
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.lidroid.xutils.http.client.HttpRequest:
    org.apache.http.HttpEntity entity -> entity
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> method
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> uriBuilder
    java.nio.charset.Charset uriCharset -> uriCharset
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> addQueryStringParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams) -> setRequestParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setRequestParams
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    void setURI(java.lang.String) -> setURI
    java.lang.String getMethod() -> getMethod
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.lidroid.xutils.http.client.HttpRequest$HttpMethod:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> GET
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> POST
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> PUT
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> HEAD
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> MOVE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> COPY
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> DELETE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> OPTIONS
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> TRACE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> CONNECT
    java.lang.String value -> value
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.RetryHandler -> com.lidroid.xutils.http.client.RetryHandler:
    int RETRY_SLEEP_INTERVAL -> RETRY_SLEEP_INTERVAL
    java.util.HashSet exceptionWhiteList -> exceptionWhiteList
    java.util.HashSet exceptionBlackList -> exceptionBlackList
    int maxRetries -> maxRetries
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.lidroid.xutils.http.client.entity.BodyParamsEntity:
    byte[] content -> content
    boolean dirty -> dirty
    java.lang.String charset -> charset
    java.util.List params -> params
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParams(java.util.List) -> addParams
    void refreshContent() -> refreshContent
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.lidroid.xutils.http.client.entity.DecompressingEntity:
    java.io.InputStream content -> content
    long uncompressedLength -> uncompressedLength
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    java.io.InputStream getDecompressingStream() -> getDecompressingStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.FileUploadEntity -> com.lidroid.xutils.http.client.entity.FileUploadEntity:
    long fileSize -> fileSize
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.lidroid.xutils.http.client.entity.GZipDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity -> com.lidroid.xutils.http.client.entity.InputStreamUploadEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    long length -> length
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.UploadEntity -> com.lidroid.xutils.http.client.entity.UploadEntity:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.lidroid.xutils.http.client.multipart.FormBodyPart:
    java.lang.String name -> name
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> header
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> body
    java.lang.String getName() -> getName
    com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> getBody
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentDisposition
    void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentType
    void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateTransferEncoding
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.lidroid.xutils.http.client.multipart.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> mode
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> writeField
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    void setSubType(java.lang.String) -> setSubType
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> writeTo
    long getTotalLength() -> getTotalLength
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode() -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.lidroid.xutils.http.client.multipart.HttpMultipartMode:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> STRICT
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.lidroid.xutils.http.client.multipart.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
com.lidroid.xutils.http.client.multipart.MinimalField -> com.lidroid.xutils.http.client.multipart.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.lidroid.xutils.http.client.multipart.MinimalFieldHeader:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> addField
    java.util.List getFields() -> getFields
    com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(com.lidroid.xutils.http.client.multipart.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.lidroid.xutils.http.client.multipart.MultipartEntity:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String boundary -> boundary
    java.nio.charset.Charset charset -> charset
    java.lang.String multipartSubtype -> multipartSubtype
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void setMultipartSubtype(java.lang.String) -> setMultipartSubtype
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody,java.lang.String) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> DEFAULT
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    long totalLength -> totalLength
    long pos -> pos
    boolean doCallBack(boolean) -> doCallBack
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.lidroid.xutils.http.client.multipart.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody -> com.lidroid.xutils.http.client.multipart.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.lidroid.xutils.http.client.multipart.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.lidroid.xutils.http.client.multipart.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.FileBody -> com.lidroid.xutils.http.client.multipart.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
com.lidroid.xutils.http.client.multipart.content.InputStreamBody -> com.lidroid.xutils.http.client.multipart.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    long length -> length
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.lidroid.xutils.http.client.multipart.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.util.URIBuilder -> com.lidroid.xutils.http.client.util.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    void digestURI(java.net.URI) -> digestURI
    java.util.List parseQuery(java.lang.String) -> parseQuery
    java.net.URI build(java.nio.charset.Charset) -> build
    java.lang.String buildString(java.nio.charset.Charset) -> buildString
    java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> encodeUserInfo
    java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> encodePath
    java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> encodeQuery
    java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> encodeFragment
    com.lidroid.xutils.http.client.util.URIBuilder setScheme(java.lang.String) -> setScheme
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setHost(java.lang.String) -> setHost
    com.lidroid.xutils.http.client.util.URIBuilder setPort(int) -> setPort
    com.lidroid.xutils.http.client.util.URIBuilder setPath(java.lang.String) -> setPath
    com.lidroid.xutils.http.client.util.URIBuilder setQuery(java.lang.String) -> setQuery
    com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.util.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    com.lidroid.xutils.http.client.util.URIBuilder setFragment(java.lang.String) -> setFragment
    java.lang.String getScheme() -> getScheme
    java.lang.String getUserInfo() -> getUserInfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    java.util.List getQueryParams() -> getQueryParams
    java.lang.String getFragment() -> getFragment
    java.lang.String normalizePath(java.lang.String) -> normalizePath
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.lidroid.xutils.http.client.util.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] DELIM -> DELIM
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet FRAGMENT -> FRAGMENT
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    java.util.List parse(java.net.URI) -> parse
    void parse(java.util.List,java.util.Scanner) -> parse
    java.util.List parse(java.lang.String) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlencode
    java.lang.String urldecode(java.lang.String,java.nio.charset.Charset,boolean) -> urldecode
    java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> encFragment
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
com.lidroid.xutils.task.Node -> com.lidroid.xutils.task.Node:
    boolean valueAsT -> valueAsT
    com.lidroid.xutils.task.PriorityObject value -> value
    com.lidroid.xutils.task.Node next -> next
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
com.lidroid.xutils.task.Priority -> com.lidroid.xutils.task.Priority:
    com.lidroid.xutils.task.Priority UI_TOP -> UI_TOP
    com.lidroid.xutils.task.Priority UI_NORMAL -> UI_NORMAL
    com.lidroid.xutils.task.Priority UI_LOW -> UI_LOW
    com.lidroid.xutils.task.Priority DEFAULT -> DEFAULT
    com.lidroid.xutils.task.Priority BG_TOP -> BG_TOP
    com.lidroid.xutils.task.Priority BG_NORMAL -> BG_NORMAL
    com.lidroid.xutils.task.Priority BG_LOW -> BG_LOW
    com.lidroid.xutils.task.Priority[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.task.Priority[] values() -> values
    com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.lidroid.xutils.task.PriorityAsyncTask:
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    boolean mExecuteInvoked -> mExecuteInvoked
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.lidroid.xutils.task.PriorityAsyncTask execute(java.lang.Object[]) -> execute
    com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void execute(java.lang.Runnable,com.lidroid.xutils.task.Priority) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    void access$0(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$0
    java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.task.PriorityAsyncTask) -> access$1
    java.lang.Object access$2(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$2
    void access$3(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$3
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.lidroid.xutils.task.PriorityAsyncTask$1:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.lidroid.xutils.task.PriorityAsyncTask$2:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
com.lidroid.xutils.task.PriorityExecutor -> com.lidroid.xutils.task.PriorityExecutor:
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> mPoolWorkQueue
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> mThreadPoolExecutor
    int getPoolSize() -> getPoolSize
    void setPoolSize(int) -> setPoolSize
    boolean isBusy() -> isBusy
    void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.lidroid.xutils.task.PriorityExecutor$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.lidroid.xutils.task.PriorityObject:
    com.lidroid.xutils.task.Priority priority -> priority
    java.lang.Object obj -> obj
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.lidroid.xutils.task.PriorityObjectBlockingQueue:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    java.util.concurrent.atomic.AtomicInteger count -> count
    com.lidroid.xutils.task.Node head -> head
    com.lidroid.xutils.task.Node last -> last
    java.util.concurrent.locks.ReentrantLock takeLock -> takeLock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.ReentrantLock putLock -> putLock
    java.util.concurrent.locks.Condition notFull -> notFull
    void signalNotEmpty() -> signalNotEmpty
    void signalNotFull() -> signalNotFull
    java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> opQueue
    void _enqueue(com.lidroid.xutils.task.Node) -> _enqueue
    java.lang.Object _dequeue() -> _dequeue
    void fullyLock() -> fullyLock
    void fullyUnlock() -> fullyUnlock
    int size() -> size
    int remainingCapacity() -> remainingCapacity
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    boolean offer(java.lang.Object) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> unlink
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Iterator iterator() -> iterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr:
    com.lidroid.xutils.task.Node current -> current
    com.lidroid.xutils.task.Node lastRet -> lastRet
    java.lang.Object currentElement -> currentElement
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> this$0
    boolean hasNext() -> hasNext
    com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> nextNode
    java.lang.Object next() -> next
    void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.lidroid.xutils.task.PriorityRunnable:
    void run() -> run
com.lidroid.xutils.task.TaskHandler -> com.lidroid.xutils.task.TaskHandler:
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
com.lidroid.xutils.util.CharsetUtils -> com.lidroid.xutils.util.CharsetUtils:
    java.lang.String DEFAULT_ENCODING_CHARSET -> DEFAULT_ENCODING_CHARSET
    java.util.List SUPPORT_CHARSET -> SUPPORT_CHARSET
    java.lang.String toCharset(java.lang.String,java.lang.String,int) -> toCharset
    java.lang.String getEncoding(java.lang.String,int) -> getEncoding
    boolean isCharset(java.lang.String,java.lang.String,int) -> isCharset
com.lidroid.xutils.util.DoubleKeyValueMap -> com.lidroid.xutils.util.DoubleKeyValueMap:
    java.util.concurrent.ConcurrentHashMap k1_k2V_map -> k1_k2V_map
    void put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    java.util.Set getFirstKeys() -> getFirstKeys
    java.util.concurrent.ConcurrentHashMap get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.util.Collection getAllValues(java.lang.Object) -> getAllValues
    java.util.Collection getAllValues() -> getAllValues
    boolean containsKey(java.lang.Object,java.lang.Object) -> containsKey
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    void remove(java.lang.Object) -> remove
    void remove(java.lang.Object,java.lang.Object) -> remove
    void clear() -> clear
com.lidroid.xutils.util.IOUtils -> com.lidroid.xutils.util.IOUtils:
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(android.database.Cursor) -> closeQuietly
com.lidroid.xutils.util.LogUtils -> com.lidroid.xutils.util.LogUtils:
    java.lang.String customTagPrefix -> customTagPrefix
    boolean allowD -> allowD
    boolean allowE -> allowE
    boolean allowI -> allowI
    boolean allowV -> allowV
    boolean allowW -> allowW
    boolean allowWtf -> allowWtf
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> customLogger
    java.lang.String generateTag(java.lang.StackTraceElement) -> generateTag
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.Throwable) -> w
    void wtf(java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.Throwable) -> wtf
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.lidroid.xutils.util.LogUtils$CustomLogger:
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void wtf(java.lang.String,java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
com.lidroid.xutils.util.MimeTypeUtils -> com.lidroid.xutils.util.MimeTypeUtils:
    java.lang.String getMimeType(java.lang.String) -> getMimeType
com.lidroid.xutils.util.OtherUtils -> com.lidroid.xutils.util.OtherUtils:
    int STRING_BUFFER_LENGTH -> STRING_BUFFER_LENGTH
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> sslSocketFactory
    java.lang.String getUserAgent(android.content.Context) -> getUserAgent
    java.lang.String getDiskCacheDir(android.content.Context,java.lang.String) -> getDiskCacheDir
    long getAvailableSpace(java.io.File) -> getAvailableSpace
    boolean isSupportRange(org.apache.http.HttpResponse) -> isSupportRange
    java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> getFileNameFromHttpResponse
    java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> getCharsetFromHttpRequest
    long sizeOfString(java.lang.String,java.lang.String) -> sizeOfString
    java.lang.String getSubString(java.lang.String,int,int) -> getSubString
    java.lang.StackTraceElement getCurrentStackTraceElement() -> getCurrentStackTraceElement
    java.lang.StackTraceElement getCallerStackTraceElement() -> getCallerStackTraceElement
    void trustAllHttpsURLConnection() -> trustAllHttpsURLConnection
com.lidroid.xutils.util.OtherUtils$1 -> com.lidroid.xutils.util.OtherUtils$1:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.util.PreferencesCookieStore -> com.lidroid.xutils.util.PreferencesCookieStore:
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    org.apache.http.cookie.Cookie getCookie(java.lang.String) -> getCookie
    java.lang.String encodeCookie(com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie -> com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    com.lidroid.xutils.util.PreferencesCookieStore this$0 -> this$0
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.view.EventListenerManager -> com.lidroid.xutils.view.EventListenerManager:
    com.lidroid.xutils.util.DoubleKeyValueMap listenerCache -> listenerCache
    void addEventMethod(com.lidroid.xutils.view.ViewFinder,com.lidroid.xutils.view.ViewInjectInfo,java.lang.annotation.Annotation,java.lang.Object,java.lang.reflect.Method) -> addEventMethod
com.lidroid.xutils.view.EventListenerManager$DynamicHandler -> com.lidroid.xutils.view.EventListenerManager$DynamicHandler:
    java.lang.ref.WeakReference handlerRef -> handlerRef
    java.util.HashMap methodMap -> methodMap
    void addMethod(java.lang.String,java.lang.reflect.Method) -> addMethod
    java.lang.Object getHandler() -> getHandler
    void setHandler(java.lang.Object) -> setHandler
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.lidroid.xutils.view.ResLoader -> com.lidroid.xutils.view.ResLoader:
    int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
    java.lang.Object loadRes(com.lidroid.xutils.view.ResType,android.content.Context,int) -> loadRes
    int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType() -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
com.lidroid.xutils.view.ResType -> com.lidroid.xutils.view.ResType:
    com.lidroid.xutils.view.ResType Animation -> Animation
    com.lidroid.xutils.view.ResType Boolean -> Boolean
    com.lidroid.xutils.view.ResType Color -> Color
    com.lidroid.xutils.view.ResType ColorStateList -> ColorStateList
    com.lidroid.xutils.view.ResType Dimension -> Dimension
    com.lidroid.xutils.view.ResType DimensionPixelOffset -> DimensionPixelOffset
    com.lidroid.xutils.view.ResType DimensionPixelSize -> DimensionPixelSize
    com.lidroid.xutils.view.ResType Drawable -> Drawable
    com.lidroid.xutils.view.ResType Integer -> Integer
    com.lidroid.xutils.view.ResType IntArray -> IntArray
    com.lidroid.xutils.view.ResType Movie -> Movie
    com.lidroid.xutils.view.ResType String -> String
    com.lidroid.xutils.view.ResType StringArray -> StringArray
    com.lidroid.xutils.view.ResType Text -> Text
    com.lidroid.xutils.view.ResType TextArray -> TextArray
    com.lidroid.xutils.view.ResType Xml -> Xml
    com.lidroid.xutils.view.ResType[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.view.ResType[] values() -> values
    com.lidroid.xutils.view.ResType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.view.ViewFinder -> com.lidroid.xutils.view.ViewFinder:
    android.view.View view -> view
    android.app.Activity activity -> activity
    android.preference.PreferenceGroup preferenceGroup -> preferenceGroup
    android.preference.PreferenceActivity preferenceActivity -> preferenceActivity
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByInfo(com.lidroid.xutils.view.ViewInjectInfo) -> findViewByInfo
    android.view.View findViewById(int,int) -> findViewById
    android.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    android.content.Context getContext() -> getContext
com.lidroid.xutils.view.ViewInjectInfo -> com.lidroid.xutils.view.ViewInjectInfo:
    java.lang.Object value -> value
    int parentId -> parentId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lidroid.xutils.view.annotation.ContentView -> com.lidroid.xutils.view.annotation.ContentView:
    int value() -> value
com.lidroid.xutils.view.annotation.PreferenceInject -> com.lidroid.xutils.view.annotation.PreferenceInject:
    java.lang.String value() -> value
com.lidroid.xutils.view.annotation.ResInject -> com.lidroid.xutils.view.annotation.ResInject:
    int id() -> id
    com.lidroid.xutils.view.ResType type() -> type
com.lidroid.xutils.view.annotation.ViewInject -> com.lidroid.xutils.view.annotation.ViewInject:
    int value() -> value
    int parentId() -> parentId
com.lidroid.xutils.view.annotation.event.EventBase -> com.lidroid.xutils.view.annotation.event.EventBase:
    java.lang.Class listenerType() -> listenerType
    java.lang.String listenerSetter() -> listenerSetter
    java.lang.String methodName() -> methodName
com.lidroid.xutils.view.annotation.event.OnChildClick -> com.lidroid.xutils.view.annotation.event.OnChildClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnClick -> com.lidroid.xutils.view.annotation.event.OnClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange -> com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnFocusChange -> com.lidroid.xutils.view.annotation.event.OnFocusChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupClick -> com.lidroid.xutils.view.annotation.event.OnGroupClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupCollapse -> com.lidroid.xutils.view.annotation.event.OnGroupCollapse:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupExpand -> com.lidroid.xutils.view.annotation.event.OnGroupExpand:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemClick -> com.lidroid.xutils.view.annotation.event.OnItemClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemLongClick -> com.lidroid.xutils.view.annotation.event.OnItemLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemSelected -> com.lidroid.xutils.view.annotation.event.OnItemSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnKey -> com.lidroid.xutils.view.annotation.event.OnKey:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnLongClick -> com.lidroid.xutils.view.annotation.event.OnLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnNothingSelected -> com.lidroid.xutils.view.annotation.event.OnNothingSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnPreferenceChange -> com.lidroid.xutils.view.annotation.event.OnPreferenceChange:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnPreferenceClick -> com.lidroid.xutils.view.annotation.event.OnPreferenceClick:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnProgressChanged -> com.lidroid.xutils.view.annotation.event.OnProgressChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange -> com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScroll -> com.lidroid.xutils.view.annotation.event.OnScroll:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScrollStateChanged -> com.lidroid.xutils.view.annotation.event.OnScrollStateChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTabChange -> com.lidroid.xutils.view.annotation.event.OnTabChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTouch -> com.lidroid.xutils.view.annotation.event.OnTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.cache.disc.DiscCacheAware:
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.DiskCache -> com.nostra13.universalimageloader.cache.disc.DiskCache:
com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> DEFAULT_COMPRESS_FORMAT
    int DEFAULT_COMPRESS_QUALITY -> DEFAULT_COMPRESS_QUALITY
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.lang.String TEMP_IMAGE_POSTFIX -> TEMP_IMAGE_POSTFIX
    java.io.File cacheDir -> cacheDir
    java.io.File reserveCacheDir -> reserveCacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    int bufferSize -> bufferSize
    android.graphics.Bitmap$CompressFormat compressFormat -> compressFormat
    int compressQuality -> compressQuality
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
    java.io.File getFile(java.lang.String) -> getFile
    void setBufferSize(int) -> setBufferSize
    void setCompressFormat(android.graphics.Bitmap$CompressFormat) -> setCompressFormat
    void setCompressQuality(int) -> setCompressQuality
com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache:
    long maxFileAge -> maxFileAge
    java.util.Map loadingDates -> loadingDates
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void clear() -> clear
    void rememberUsage(java.lang.String) -> rememberUsage
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache:
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION_1 -> VERSION_1
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> LEGAL_KEY_PATTERN
    java.lang.String CLEAN -> CLEAN
    java.lang.String DIRTY -> DIRTY
    java.lang.String REMOVE -> REMOVE
    java.lang.String READ -> READ
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int maxFileCount -> maxFileCount
    int valueCount -> valueCount
    long size -> size
    int fileCount -> fileCount
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String) -> get
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String) -> edit
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    int getMaxFileCount() -> getMaxFileCount
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    long fileCount() -> fileCount
    void completeEdit(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void trimToFileCount() -> trimToFileCount
    void delete() -> delete
    void validateKey(java.lang.String) -> validateKey
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.io.Writer access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$000
    void access$100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$100
    void access$200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$200
    boolean access$300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$300
    void access$400(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$400
    int access$502(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,int) -> access$502
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$1700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,java.lang.String,long) -> access$1700
    java.lang.String access$1800(java.io.InputStream) -> access$1800
    int access$1900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$1900
    java.io.File access$2000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$2000
    java.io.OutputStream access$2100() -> access$2100
    void access$2300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$2300
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2:
    void write(int) -> write
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry access$1500(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$1500
    boolean[] access$1600(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$1600
    boolean access$2402(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$2402
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry:
    java.lang.String key -> key
    long[] lengths -> lengths
    boolean readable -> readable
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[]) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$702(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,boolean) -> access$702
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$802(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$802
    void access$900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,java.lang.String[]) -> access$900
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$800(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$800
    long[] access$1100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1100
    java.lang.String access$1200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1200
    boolean access$700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$700
    long access$1300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1300
    long access$1302(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,long) -> access$1302
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot:
    java.lang.String key -> key
    long sequenceNumber -> sequenceNumber
    java.io.File[] files -> files
    java.io.InputStream[] ins -> ins
    long[] lengths -> lengths
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit() -> edit
    java.io.File getFile(int) -> getFile
    java.io.InputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> DEFAULT_COMPRESS_FORMAT
    int DEFAULT_COMPRESS_QUALITY -> DEFAULT_COMPRESS_QUALITY
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.lang.String ERROR_ARG_NEGATIVE -> ERROR_ARG_NEGATIVE
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache -> cache
    java.io.File reserveCacheDir -> reserveCacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    int bufferSize -> bufferSize
    android.graphics.Bitmap$CompressFormat compressFormat -> compressFormat
    int compressQuality -> compressQuality
    void initCache(java.io.File,java.io.File,long,int) -> initCache
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
    java.lang.String getKey(java.lang.String) -> getKey
    void setBufferSize(int) -> setBufferSize
    void setCompressFormat(android.graphics.Bitmap$CompressFormat) -> setCompressFormat
    void setCompressQuality(int) -> setCompressQuality
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader) -> access$000
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1:
    com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader this$0 -> this$0
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.cache.disc.impl.ext.Util -> com.nostra13.universalimageloader.cache.disc.impl.ext.Util:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator:
    java.lang.String HASH_ALGORITHM -> HASH_ALGORITHM
    int RADIX -> RADIX
    java.lang.String generate(java.lang.String) -> generate
    byte[] getMD5(byte[]) -> getMD5
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.nostra13.universalimageloader.cache.memory.BaseMemoryCache:
    java.util.Map softMap -> softMap
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache:
    int MAX_NORMAL_CACHE_SIZE_IN_MB -> MAX_NORMAL_CACHE_SIZE_IN_MB
    int MAX_NORMAL_CACHE_SIZE -> MAX_NORMAL_CACHE_SIZE
    int sizeLimit -> sizeLimit
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    java.util.List hardCache -> hardCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSizeLimit() -> getSizeLimit
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.Object remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.MemoryCache -> com.nostra13.universalimageloader.cache.memory.MemoryCache:
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.cache.memory.MemoryCacheAware:
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache:
    java.util.List queue -> queue
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> cache
    java.util.Comparator keyComparator -> keyComparator
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Collection keys() -> keys
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    float LOAD_FACTOR -> LOAD_FACTOR
    java.util.Map lruCache -> lruCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache:
    java.util.Map valueSizes -> valueSizes
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> cache
    long maxAge -> maxAge
    java.util.Map loadingDates -> loadingDates
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    android.graphics.Bitmap remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void trimToSize(int) -> trimToSize
    android.graphics.Bitmap remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    java.lang.String toString() -> toString
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache:
    java.util.Map usingCounts -> usingCounts
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache:
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    java.util.concurrent.Executor createTaskDistributor() -> createTaskDistributor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiskCache createDiskCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int) -> createDiskCache
    java.io.File createReserveDiskCacheDir(android.content.Context) -> createReserveDiskCacheDir
    com.nostra13.universalimageloader.cache.memory.MemoryCache createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int,java.lang.String) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEAWARE -> LOG_DISPLAY_IMAGE_IN_IMAGEAWARE
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisk() -> isCacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    boolean isConsiderExifParams() -> isConsiderExifParams
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    boolean isSyncLoading() -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2800
    android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2900
    int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3000
    boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3100
    java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3200
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3400
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3500
    android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3600
    boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3700
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.nostra13.universalimageloader.core.DisplayImageOptions$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(android.graphics.drawable.Drawable) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(android.graphics.drawable.Drawable) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(android.graphics.drawable.Drawable) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisk(boolean) -> cacheOnDisk
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1500
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1600
    android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> loadImage
    android.graphics.Bitmap loadImageSync(java.lang.String) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCache getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDiscCache() -> getDiscCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDiskCache() -> getDiskCache
    void clearDiscCache() -> clearDiscCache
    void clearDiskCache() -> clearDiskCache
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTask
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
    android.os.Handler defineHandler(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defineHandler
com.nostra13.universalimageloader.core.ImageLoader$1 -> com.nostra13.universalimageloader.core.ImageLoader$1:
com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener -> com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener:
    android.graphics.Bitmap loadedImage -> loadedImage
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.res.Resources resources -> resources
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISK_CACHE_PARAMS -> WARNING_OVERLAP_DISK_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    long diskCacheSize -> diskCacheSize
    int diskCacheFileCount -> diskCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator diskCacheFileNameGenerator -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> discCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheExtraOptions(int,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> diskCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSizePercentage(int) -> memoryCacheSizePercentage
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCache) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheSize(int) -> diskCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileCount(int) -> diskCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> discCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> diskCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    java.util.concurrent.Executor access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    int access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    com.nostra13.universalimageloader.cache.disc.DiskCache access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    com.nostra13.universalimageloader.cache.memory.MemoryCache access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    boolean access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.Executor taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageAwares -> cacheKeysForImageAwares
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    java.lang.Object pauseLock -> pauseLock
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void fireCallback(java.lang.Runnable) -> fireCallback
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    java.lang.Object getPauseLock() -> getPauseLock
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISK_CACHE -> LOG_LOAD_IMAGE_FROM_DISK_CACHE
    java.lang.String LOG_RESIZE_CACHED_IMAGE_FILE -> LOG_RESIZE_CACHED_IMAGE_FILE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISK -> LOG_CACHE_IMAGE_ON_DISK
    java.lang.String LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK -> LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String ERROR_PRE_PROCESSOR_NULL -> ERROR_PRE_PROCESSOR_NULL
    java.lang.String ERROR_POST_PROCESSOR_NULL -> ERROR_POST_PROCESSOR_NULL
    java.lang.String ERROR_PROCESSOR_FOR_DISK_CACHE_NULL -> ERROR_PROCESSOR_FOR_DISK_CACHE_NULL
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    boolean syncLoading -> syncLoading
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    boolean tryCacheImageOnDisk() -> tryCacheImageOnDisk
    boolean downloadImage() -> downloadImage
    boolean resizeAndSaveImage(int,int) -> resizeAndSaveImage
    boolean onBytesCopied(int,int) -> onBytesCopied
    boolean fireProgressEvent(int,int) -> fireProgressEvent
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    void fireCancelEvent() -> fireCancelEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    void checkTaskNotActual() -> checkTaskNotActual
    boolean isTaskNotActual() -> isTaskNotActual
    void checkViewCollected() -> checkViewCollected
    boolean isViewCollected() -> isViewCollected
    void checkViewReused() -> checkViewReused
    boolean isViewReused() -> isViewReused
    void checkTaskInterrupted() -> checkTaskInterrupted
    boolean isTaskInterrupted() -> isTaskInterrupted
    java.lang.String getLoadingUri() -> getLoadingUri
    void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine) -> runTask
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> access$000
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    int val$current -> val$current
    int val$total -> val$total
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> com.nostra13.universalimageloader.core.assist.ContentLengthInputStream:
    java.io.InputStream stream -> stream
    int length -> length
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    boolean markSupported() -> markSupported
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE_SAFE -> NONE_SAFE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    int TO_STRING_MAX_LENGHT -> TO_STRING_MAX_LENGHT
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.nostra13.universalimageloader.core.assist.LoadedFrom:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> NETWORK
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> DISC_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> MEMORY_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SUBSAMPLE_IMAGE -> LOG_SUBSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> resetStream
    android.graphics.Bitmap considerExactScaleAndOrientatiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientatiton
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    java.lang.String originalImageUri -> originalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    boolean considerExifParams -> considerExifParams
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    java.lang.String getOriginalImageUri() -> getOriginalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    boolean shouldConsiderExifParams() -> shouldConsiderExifParams
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    boolean animateFromNetwork -> animateFromNetwork
    boolean animateFromDisk -> animateFromDisk
    boolean animateFromMemory -> animateFromMemory
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
    void animate(android.view.View,int) -> animate
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int cornerRadius -> cornerRadius
    int margin -> margin
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable:
    float cornerRadius -> cornerRadius
    int margin -> margin
    android.graphics.RectF mRect -> mRect
    android.graphics.RectF mBitmapRect -> mBitmapRect
    android.graphics.BitmapShader bitmapShader -> bitmapShader
    android.graphics.Paint paint -> paint
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable:
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String CONTENT_CONTACTS_URI_PREFIX -> CONTENT_CONTACTS_URI_PREFIX
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> createConnection
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
    boolean isVideoUri(android.net.Uri) -> isVideoUri
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
com.nostra13.universalimageloader.core.imageaware.AnimImageViewAware -> com.nostra13.universalimageloader.core.imageaware.AnimImageViewAware:
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.nostra13.universalimageloader.core.imageaware.ImageAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageViewAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.widget.ImageView getWrappedView() -> getWrappedView
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    android.view.View getWrappedView() -> getWrappedView
com.nostra13.universalimageloader.core.imageaware.NonViewAware -> com.nostra13.universalimageloader.core.imageaware.NonViewAware:
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.assist.ViewScaleType scaleType -> scaleType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ViewAware -> com.nostra13.universalimageloader.core.imageaware.ViewAware:
    java.lang.String WARN_CANT_SET_DRAWABLE -> WARN_CANT_SET_DRAWABLE
    java.lang.String WARN_CANT_SET_BITMAP -> WARN_CANT_SET_BITMAP
    java.lang.ref.Reference viewRef -> viewRef
    boolean checkActualViewSize -> checkActualViewSize
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
com.nostra13.universalimageloader.core.listener.ImageLoadingListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener:
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.nostra13.universalimageloader.core.listener.PauseOnScrollListener -> com.nostra13.universalimageloader.core.listener.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.DiskCacheUtils -> com.nostra13.universalimageloader.utils.DiskCacheUtils:
    java.io.File findInCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiskCache) -> findInCache
    boolean removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiskCache) -> removeFromCache
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.utils.ImageSizeUtils:
    int DEFAULT_MAX_BITMAP_DIMENSION -> DEFAULT_MAX_BITMAP_DIMENSION
    com.nostra13.universalimageloader.core.assist.ImageSize maxBitmapSize -> maxBitmapSize
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> defineTargetSizeForView
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    int considerMaxTextureSize(int,int,int,boolean) -> considerMaxTextureSize
    int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> computeMinImageSampleSize
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.utils.ImageSizeUtils$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.utils.IoUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int DEFAULT_IMAGE_TOTAL_SIZE -> DEFAULT_IMAGE_TOTAL_SIZE
    int CONTINUE_LOADING_PERCENTAGE -> CONTINUE_LOADING_PERCENTAGE
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> copyStream
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> copyStream
    boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> shouldStopLoading
    void readAndCloseStream(java.io.InputStream) -> readAndCloseStream
    void closeSilently(java.io.Closeable) -> closeSilently
com.nostra13.universalimageloader.utils.IoUtils$CopyListener -> com.nostra13.universalimageloader.utils.IoUtils$CopyListener:
    boolean onBytesCopied(int,int) -> onBytesCopied
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.utils.L:
    java.lang.String LOG_FORMAT -> LOG_FORMAT
    boolean writeDebugLogs -> writeDebugLogs
    boolean writeLogs -> writeLogs
    void enableLogging() -> enableLogging
    void disableLogging() -> disableLogging
    void writeDebugLogs(boolean) -> writeDebugLogs
    void writeLogs(boolean) -> writeLogs
    void d(java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.utils.MemoryCacheUtils -> com.nostra13.universalimageloader.utils.MemoryCacheUtils:
    java.lang.String URI_AND_SIZE_SEPARATOR -> URI_AND_SIZE_SEPARATOR
    java.lang.String WIDTH_AND_HEIGHT_SEPARATOR -> WIDTH_AND_HEIGHT_SEPARATOR
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> generateKey
    java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    java.util.List findCachedBitmapsForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> findCachedBitmapsForImageUri
    java.util.List findCacheKeysForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> findCacheKeysForImageUri
    void removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> removeFromCache
com.nostra13.universalimageloader.utils.MemoryCacheUtils$1 -> com.nostra13.universalimageloader.utils.MemoryCacheUtils$1:
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.utils.StorageUtils:
    java.lang.String EXTERNAL_STORAGE_PERMISSION -> EXTERNAL_STORAGE_PERMISSION
    java.lang.String INDIVIDUAL_DIR_NAME -> INDIVIDUAL_DIR_NAME
    java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> getOwnCacheDirectory
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    boolean hasExternalStoragePermission(android.content.Context) -> hasExternalStoragePermission
com.rongdai.MainActivity -> com.rongdai.MainActivity:
    com.rongdai.view.NoScrollViewPager mViewPager -> f
    java.util.List pagers -> g
    int index -> h
    android.widget.ImageView serviceImageButton -> i
    android.widget.RadioGroup mRadioGroup -> j
    android.widget.RadioButton manage_money_center -> k
    android.widget.RadioButton i_want_loan -> l
    android.widget.RadioButton notice_consult -> m
    android.widget.RadioButton person_center -> n
    android.widget.TextView titleTextView -> o
    com.rongdai.pager.ManagerMenoyCenter managerMenoyCenter -> p
    com.rongdai.pager.IWantLoan iWantLoan -> q
    com.rongdai.pager.NoticConsult noticConsult -> r
    com.rongdai.pager.PersonCenter personCenter -> s
    android.content.Intent serviceIntent -> a
    android.view.WindowManager wm -> t
    int width -> u
    android.app.Activity mainActivity -> b
    java.lang.String check_login -> c
    java.lang.String check_hf_login -> d
    java.lang.String check_user -> e
    java.lang.String from_certificate -> v
    int[] intArrays -> w
    java.lang.String sadasfaf -> x
    android.os.Handler handler -> y
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void onClick(android.view.View) -> onClick
    void onRestart() -> onRestart
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onResume() -> onResume
    void onPause() -> onPause
    int access$0(com.rongdai.MainActivity) -> a
    android.widget.TextView access$1(com.rongdai.MainActivity) -> b
    java.util.List access$2(com.rongdai.MainActivity) -> c
    com.rongdai.view.NoScrollViewPager access$3(com.rongdai.MainActivity) -> d
    void access$4(com.rongdai.MainActivity,int) -> a
    android.os.Handler access$5(com.rongdai.MainActivity) -> e
com.rongdai.MainActivity$1 -> com.rongdai.a:
    com.rongdai.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.rongdai.MainActivity$2 -> com.rongdai.b:
    android.os.Message msg -> b
    com.rongdai.MainActivity this$0 -> a
    int val$checkedId -> c
    void run() -> run
com.rongdai.MainActivity$MyPagerAdapter -> com.rongdai.c:
    com.rongdai.MainActivity this$0 -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
com.rongdai.R -> com.rongdai.d:
com.rongdai.R$styleable -> com.rongdai.e:
    int[] AsyncImageView -> AsyncImageView
    int AsyncImageView_defDrawable -> AsyncImageView_defDrawable
    int AsyncImageView_shape -> AsyncImageView_shape
    int[] CirclePageIndicator -> CirclePageIndicator
    int CirclePageIndicator_android_background -> CirclePageIndicator_android_background
    int CirclePageIndicator_android_orientation -> CirclePageIndicator_android_orientation
    int CirclePageIndicator_centered_ -> CirclePageIndicator_centered_
    int CirclePageIndicator_fillColor -> CirclePageIndicator_fillColor
    int CirclePageIndicator_pageColor -> CirclePageIndicator_pageColor
    int CirclePageIndicator_radius_ -> CirclePageIndicator_radius_
    int CirclePageIndicator_snap -> CirclePageIndicator_snap
    int CirclePageIndicator_strokeColor -> CirclePageIndicator_strokeColor
    int CirclePageIndicator_strokeWidth_ -> CirclePageIndicator_strokeWidth_
    int[] CoverFrameLayout -> CoverFrameLayout
    int CoverFrameLayout_coverView -> CoverFrameLayout_coverView
    int CoverFrameLayout_triggerLimit -> CoverFrameLayout_triggerLimit
    int CoverFrameLayout_triggerView -> CoverFrameLayout_triggerView
    int[] LinePageIndicator -> LinePageIndicator
    int LinePageIndicator_android_background -> LinePageIndicator_android_background
    int LinePageIndicator_centered_ -> LinePageIndicator_centered_
    int LinePageIndicator_gapWidth -> LinePageIndicator_gapWidth
    int LinePageIndicator_lineWidth -> LinePageIndicator_lineWidth
    int LinePageIndicator_selectedColor_ -> LinePageIndicator_selectedColor_
    int LinePageIndicator_strokeWidth_ -> LinePageIndicator_strokeWidth_
    int LinePageIndicator_unselectedColor_ -> LinePageIndicator_unselectedColor_
    int[] PullLayout -> PullLayout
    int PullLayout_hold_adjust_type -> PullLayout_hold_adjust_type
    int PullLayout_pull_limit -> PullLayout_pull_limit
    int PullLayout_support_over -> PullLayout_support_over
    int[] RoundProgressBar -> RoundProgressBar
    int RoundProgressBar_max -> RoundProgressBar_max
    int RoundProgressBar_roundColor -> RoundProgressBar_roundColor
    int RoundProgressBar_roundProgressColor -> RoundProgressBar_roundProgressColor
    int RoundProgressBar_roundWidth -> RoundProgressBar_roundWidth
    int RoundProgressBar_style -> RoundProgressBar_style
    int RoundProgressBar_textColor -> RoundProgressBar_textColor
    int RoundProgressBar_textIsDisplayable -> RoundProgressBar_textIsDisplayable
    int RoundProgressBar_textSize -> RoundProgressBar_textSize
    int[] SlipButton -> SlipButton
    int SlipButton_slipButtonBG -> SlipButton_slipButtonBG
    int SlipButton_slipButtonOff -> SlipButton_slipButtonOff
    int SlipButton_slipButtonOn -> SlipButton_slipButtonOn
    int[] SwitchGroup -> SwitchGroup
    int SwitchGroup_orientation -> SwitchGroup_orientation
    int SwitchGroup_pinned_item -> SwitchGroup_pinned_item
    int SwitchGroup_pinned_item_array -> SwitchGroup_pinned_item_array
    int SwitchGroup_pinned_view -> SwitchGroup_pinned_view
    int[] TitlePageIndicator -> TitlePageIndicator
    int TitlePageIndicator_android_background -> TitlePageIndicator_android_background
    int TitlePageIndicator_android_textColor -> TitlePageIndicator_android_textColor
    int TitlePageIndicator_android_textSize -> TitlePageIndicator_android_textSize
    int TitlePageIndicator_clipPadding -> TitlePageIndicator_clipPadding
    int TitlePageIndicator_footerColor -> TitlePageIndicator_footerColor
    int TitlePageIndicator_footerIndicatorHeight -> TitlePageIndicator_footerIndicatorHeight
    int TitlePageIndicator_footerIndicatorStyle -> TitlePageIndicator_footerIndicatorStyle
    int TitlePageIndicator_footerIndicatorUnderlinePadding -> TitlePageIndicator_footerIndicatorUnderlinePadding
    int TitlePageIndicator_footerLineHeight -> TitlePageIndicator_footerLineHeight
    int TitlePageIndicator_footerPadding -> TitlePageIndicator_footerPadding
    int TitlePageIndicator_linePosition -> TitlePageIndicator_linePosition
    int TitlePageIndicator_selectedBold -> TitlePageIndicator_selectedBold
    int TitlePageIndicator_selectedColor_ -> TitlePageIndicator_selectedColor_
    int TitlePageIndicator_titlePadding -> TitlePageIndicator_titlePadding
    int TitlePageIndicator_topPadding -> TitlePageIndicator_topPadding
    int[] UnderlinePageIndicator -> UnderlinePageIndicator
    int UnderlinePageIndicator_android_background -> UnderlinePageIndicator_android_background
    int UnderlinePageIndicator_fadeDelay -> UnderlinePageIndicator_fadeDelay
    int UnderlinePageIndicator_fadeLength -> UnderlinePageIndicator_fadeLength
    int UnderlinePageIndicator_fades -> UnderlinePageIndicator_fades
    int UnderlinePageIndicator_selectedColor_ -> UnderlinePageIndicator_selectedColor_
    int[] ViewPagerIndicator -> ViewPagerIndicator
    int ViewPagerIndicator_vpiCirclePageIndicatorStyle -> ViewPagerIndicator_vpiCirclePageIndicatorStyle
    int ViewPagerIndicator_vpiIconPageIndicatorStyle -> ViewPagerIndicator_vpiIconPageIndicatorStyle
    int ViewPagerIndicator_vpiLinePageIndicatorStyle -> ViewPagerIndicator_vpiLinePageIndicatorStyle
    int ViewPagerIndicator_vpiTabPageIndicatorStyle -> ViewPagerIndicator_vpiTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTitlePageIndicatorStyle -> ViewPagerIndicator_vpiTitlePageIndicatorStyle
    int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle -> ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
com.rongdai.SplishActivity -> com.rongdai.SplishActivity:
    android.widget.LinearLayout splishLinearLayout -> a
    void onCreate(android.os.Bundle) -> onCreate
    void showAnimation() -> b
    void onResume() -> onResume
    void onPause() -> onPause
    void toMainUi() -> a
com.rongdai.SplishActivity$1 -> com.rongdai.f:
    com.rongdai.SplishActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.rongdai.activity.NoticConsult.NoticeInfo -> com.rongdai.activity.NoticConsult.NoticeInfo:
    android.widget.TextView noticeinfo_title -> b
    android.widget.TextView newsKeyWord -> c
    android.widget.TextView noticeinfo_time -> d
    android.widget.TextView noticeinfo_content -> e
    android.widget.TextView resouce -> f
    android.widget.EditText noticeinfo_say -> g
    android.widget.ImageButton noiticeinfo_back -> h
    android.widget.ImageButton noticeinfo_share -> i
    java.lang.String pageNo -> j
    java.lang.String newsId -> k
    android.widget.ListView lv_evaluation -> l
    java.util.List replyInfos -> m
    java.lang.String title -> n
    java.lang.String newsContent -> o
    java.lang.String newsSendTime -> p
    java.lang.String newsKeyWords -> q
    java.lang.String newsCome -> r
    java.lang.String newsImg -> s
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter adapter -> t
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters adapters -> u
    java.util.List replys -> v
    java.lang.String evaluation_type -> w
    java.util.List mReplyInfo -> x
    com.rongdai.view.PullToRefreshView refreshView -> y
    java.lang.String userId -> z
    java.lang.String content -> A
    android.view.inputmethod.InputMethodManager inputManager -> B
    java.lang.String replyId -> C
    com.rongdai.domain.NoticeInfoBean noticeInfo -> D
    int pagerNumber -> a
    boolean fromRefresh -> E
    void initData() -> a
    void getNoticeDataFromNet(java.lang.String,java.lang.String) -> a
    void getMoreNoticeDataFromNet(java.lang.String,java.lang.String) -> b
    void onClick(android.view.View) -> onClick
    void getEvaluationDataFromNet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void onFooterRefresh(com.rongdai.view.PullToRefreshView) -> a
    void onHeaderRefresh(com.rongdai.view.PullToRefreshView) -> b
    java.util.List access$0(com.rongdai.activity.NoticConsult.NoticeInfo) -> a
    void access$1(com.rongdai.activity.NoticConsult.NoticeInfo,java.util.List) -> a
    java.util.List access$2(com.rongdai.activity.NoticConsult.NoticeInfo) -> b
    void access$3(com.rongdai.activity.NoticConsult.NoticeInfo,com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters) -> a
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters access$4(com.rongdai.activity.NoticConsult.NoticeInfo) -> c
    java.lang.String access$5(com.rongdai.activity.NoticConsult.NoticeInfo) -> d
    void access$6(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String) -> a
    android.widget.EditText access$7(com.rongdai.activity.NoticConsult.NoticeInfo) -> e
    android.view.inputmethod.InputMethodManager access$8(com.rongdai.activity.NoticConsult.NoticeInfo) -> f
    void access$9(com.rongdai.activity.NoticConsult.NoticeInfo,android.view.inputmethod.InputMethodManager) -> a
    void access$10(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String) -> b
    java.lang.String access$11(com.rongdai.activity.NoticConsult.NoticeInfo) -> g
    void access$12(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String) -> c
    java.lang.String access$13(com.rongdai.activity.NoticConsult.NoticeInfo) -> h
    java.lang.String access$14(com.rongdai.activity.NoticConsult.NoticeInfo) -> i
    java.lang.String access$15(com.rongdai.activity.NoticConsult.NoticeInfo) -> j
    void access$16(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void access$17(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String,java.lang.String) -> a
    void access$18(com.rongdai.activity.NoticConsult.NoticeInfo,com.rongdai.domain.NoticeInfoBean) -> a
    com.rongdai.domain.NoticeInfoBean access$19(com.rongdai.activity.NoticConsult.NoticeInfo) -> k
    void access$20(com.rongdai.activity.NoticConsult.NoticeInfo,java.util.List) -> b
    boolean access$21(com.rongdai.activity.NoticConsult.NoticeInfo) -> l
    com.rongdai.view.PullToRefreshView access$22(com.rongdai.activity.NoticConsult.NoticeInfo) -> m
    void access$23(com.rongdai.activity.NoticConsult.NoticeInfo,boolean) -> a
    void access$24(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String) -> d
    void access$25(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String) -> e
    void access$26(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String) -> f
    void access$27(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String) -> g
    void access$28(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String) -> h
    void access$29(com.rongdai.activity.NoticConsult.NoticeInfo,java.lang.String) -> i
    void access$30(com.rongdai.activity.NoticConsult.NoticeInfo,java.util.List) -> c
    android.widget.TextView access$31(com.rongdai.activity.NoticConsult.NoticeInfo) -> n
    java.lang.String access$32(com.rongdai.activity.NoticConsult.NoticeInfo) -> o
    java.lang.String access$33(com.rongdai.activity.NoticConsult.NoticeInfo) -> p
    android.widget.TextView access$34(com.rongdai.activity.NoticConsult.NoticeInfo) -> q
    android.widget.TextView access$35(com.rongdai.activity.NoticConsult.NoticeInfo) -> r
    java.lang.String access$36(com.rongdai.activity.NoticConsult.NoticeInfo) -> s
    android.widget.TextView access$37(com.rongdai.activity.NoticConsult.NoticeInfo) -> t
    java.lang.String access$38(com.rongdai.activity.NoticConsult.NoticeInfo) -> u
    android.widget.TextView access$39(com.rongdai.activity.NoticConsult.NoticeInfo) -> v
    java.lang.String access$40(com.rongdai.activity.NoticConsult.NoticeInfo) -> w
    void access$41(com.rongdai.activity.NoticConsult.NoticeInfo,com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter) -> a
    android.widget.ListView access$42(com.rongdai.activity.NoticConsult.NoticeInfo) -> x
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter access$43(com.rongdai.activity.NoticConsult.NoticeInfo) -> y
    java.util.List access$44(com.rongdai.activity.NoticConsult.NoticeInfo) -> z
    java.lang.String access$45(com.rongdai.activity.NoticConsult.NoticeInfo) -> A
com.rongdai.activity.NoticConsult.NoticeInfo$1 -> com.rongdai.activity.NoticConsult.a:
    com.rongdai.activity.NoticConsult.NoticeInfo this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.rongdai.activity.NoticConsult.NoticeInfo$2 -> com.rongdai.activity.NoticConsult.b:
    com.rongdai.activity.NoticConsult.NoticeInfo this$0 -> a
    java.lang.String val$pageNo -> b
    java.lang.String val$newsId -> c
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void setData() -> a
    com.rongdai.activity.NoticConsult.NoticeInfo access$0(com.rongdai.activity.NoticConsult.NoticeInfo$2) -> a
com.rongdai.activity.NoticConsult.NoticeInfo$2$1 -> com.rongdai.activity.NoticConsult.c:
    com.rongdai.activity.NoticConsult.NoticeInfo$2 this$1 -> a
    java.lang.String val$pageNo -> b
    java.lang.String val$newsId -> c
    void update() -> a
com.rongdai.activity.NoticConsult.NoticeInfo$2$2 -> com.rongdai.activity.NoticConsult.d:
    com.rongdai.activity.NoticConsult.NoticeInfo$2 this$1 -> a
    void update() -> a
com.rongdai.activity.NoticConsult.NoticeInfo$3 -> com.rongdai.activity.NoticConsult.e:
    com.rongdai.domain.NoticeInfoBean noticeInfo2 -> b
    com.rongdai.activity.NoticConsult.NoticeInfo this$0 -> a
    java.lang.String val$pageNo -> c
    java.lang.String val$newsId -> d
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void setData() -> a
    com.rongdai.activity.NoticConsult.NoticeInfo access$0(com.rongdai.activity.NoticConsult.NoticeInfo$3) -> a
com.rongdai.activity.NoticConsult.NoticeInfo$3$1 -> com.rongdai.activity.NoticConsult.f:
    com.rongdai.activity.NoticConsult.NoticeInfo$3 this$1 -> a
    java.lang.String val$pageNo -> b
    java.lang.String val$newsId -> c
    void update() -> a
com.rongdai.activity.NoticConsult.NoticeInfo$3$2 -> com.rongdai.activity.NoticConsult.g:
    com.rongdai.activity.NoticConsult.NoticeInfo$3 this$1 -> a
    void update() -> a
com.rongdai.activity.NoticConsult.NoticeInfo$4 -> com.rongdai.activity.NoticConsult.h:
    com.rongdai.activity.NoticConsult.NoticeInfo this$0 -> a
    java.lang.String val$newsId -> b
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter -> com.rongdai.activity.NoticConsult.i:
    com.rongdai.activity.NoticConsult.NoticeInfo this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.rongdai.activity.NoticConsult.NoticeInfo access$0(com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter) -> a
com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter$1 -> com.rongdai.activity.NoticConsult.j:
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter access$0(com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter$1) -> a
com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter$1$1 -> com.rongdai.activity.NoticConsult.k:
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapter$1 this$2 -> a
    int val$position -> b
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters -> com.rongdai.activity.NoticConsult.l:
    com.rongdai.activity.NoticConsult.NoticeInfo this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.rongdai.activity.NoticConsult.NoticeInfo access$0(com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters) -> a
com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters$1 -> com.rongdai.activity.NoticConsult.m:
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters access$0(com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters$1) -> a
com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters$1$1 -> com.rongdai.activity.NoticConsult.n:
    com.rongdai.activity.NoticConsult.NoticeInfo$MyEvaluationAdapters$1 this$2 -> a
    int val$position -> b
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.rongdai.activity.NoticConsult.ShowImage -> com.rongdai.activity.NoticConsult.ShowImage:
    android.webkit.WebView wv -> a
    android.widget.TextView tv_title -> b
    android.widget.ImageView ib_back -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.AboutUsActivity -> com.rongdai.activity.personalcenter.AboutUsActivity:
    android.widget.TextView aboutus_textview -> a
    android.widget.ImageButton about_us_back -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.BindingPhoneNumberActivity -> com.rongdai.activity.personalcenter.BindingPhoneNumberActivity:
    android.widget.ImageButton binding_phone_number_back -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.CertificateHuiFu -> com.rongdai.activity.personalcenter.CertificateHuiFu:
    android.webkit.WebView certifycation -> a
    void initData() -> a
    void goopen() -> b
    void onStop() -> onStop
    void loginByNet() -> c
    android.webkit.WebView access$0(com.rongdai.activity.personalcenter.CertificateHuiFu) -> a
com.rongdai.activity.personalcenter.CertificateHuiFu$1 -> com.rongdai.activity.personalcenter.a:
    com.rongdai.activity.personalcenter.CertificateHuiFu this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    com.rongdai.activity.personalcenter.CertificateHuiFu access$0(com.rongdai.activity.personalcenter.CertificateHuiFu$1) -> a
com.rongdai.activity.personalcenter.CertificateHuiFu$1$1 -> com.rongdai.activity.personalcenter.b:
    com.rongdai.activity.personalcenter.CertificateHuiFu$1 this$1 -> a
    void update() -> a
com.rongdai.activity.personalcenter.CertificateHuiFu$1$2 -> com.rongdai.activity.personalcenter.c:
    com.rongdai.activity.personalcenter.CertificateHuiFu$1 this$1 -> a
    void update() -> a
com.rongdai.activity.personalcenter.CertificateHuiFu$2 -> com.rongdai.activity.personalcenter.d:
    com.rongdai.activity.personalcenter.CertificateHuiFu this$0 -> a
    java.lang.String val$userName -> b
    java.lang.String val$password -> c
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.CustomServiceActivity -> com.rongdai.activity.personalcenter.CustomServiceActivity:
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.EditPasswordActivity -> com.rongdai.activity.personalcenter.EditPasswordActivity:
    android.widget.ImageButton editpassword_back -> a
    android.widget.Button changepassword_button -> b
    com.rongdai.utils.CustomProgressDialog progressDialog -> c
    android.widget.EditText old_password_EditText -> d
    android.widget.EditText new_password_EditText -> e
    android.widget.EditText again_password_EditText -> f
    void initData() -> a
    void ModifyLoginPwdDo() -> b
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.EditPasswordActivity$1 -> com.rongdai.activity.personalcenter.e:
    com.rongdai.activity.personalcenter.EditPasswordActivity this$0 -> a
    android.content.SharedPreferences val$sp -> b
    java.lang.String val$new_password -> c
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.FeedBackActivity -> com.rongdai.activity.personalcenter.FeedBackActivity:
    android.widget.Button post_Feedback_button -> a
    android.widget.ImageButton feedback_back -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.FinancingserviceActivity -> com.rongdai.activity.personalcenter.FinancingserviceActivity:
    android.widget.ImageView financingservice_back -> a
    void initData() -> a
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.ForgetPswActivity -> com.rongdai.activity.personalcenter.ForgetPswActivity:
    android.widget.ImageView forgetpsw_back -> a
    android.widget.EditText number -> b
    android.widget.Button forgetpsw_sure -> c
    com.rongdai.domain.MessageData messageData -> d
    void initData() -> a
    void onClick(android.view.View) -> onClick
    void getVerificationFromNeet() -> b
    void processMessageData(java.lang.String) -> a
com.rongdai.activity.personalcenter.ForgetPswActivity$1 -> com.rongdai.activity.personalcenter.f:
    com.rongdai.activity.personalcenter.ForgetPswActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.GetMoneyActivity -> com.rongdai.activity.personalcenter.GetMoneyActivity:
    android.widget.TextView getmoneyinfo_text -> a
    android.widget.ImageButton pay_back -> b
    android.widget.Button goto_getmoney_webview -> c
    java.lang.String rongDaiAccount -> d
    java.lang.String usrcustId -> e
    android.widget.TextView queryBalance_textview -> f
    android.widget.EditText extract_money -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void queryBalanceDo() -> a
    android.widget.TextView access$0(com.rongdai.activity.personalcenter.GetMoneyActivity) -> a
com.rongdai.activity.personalcenter.GetMoneyActivity$1 -> com.rongdai.activity.personalcenter.g:
    com.rongdai.activity.personalcenter.GetMoneyActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.GetMoneyActivity$1$1 -> com.rongdai.activity.personalcenter.h:
    com.rongdai.activity.personalcenter.GetMoneyActivity$1 this$1 -> a
com.rongdai.activity.personalcenter.GetMoneyInfoActivity -> com.rongdai.activity.personalcenter.GetMoneyInfoActivity:
    android.widget.TextView paydetailed_textview -> a
    android.widget.ImageButton MyBankCard_back -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.GetMoneyWebviewActivity -> com.rongdai.activity.personalcenter.GetMoneyWebviewActivity:
    android.widget.ImageButton pay_back -> a
    java.lang.String money -> b
    java.lang.String usrcustId -> c
    java.lang.String Webviewurl -> d
    android.webkit.WebView pay_webview -> e
    void onCreate(android.os.Bundle) -> onCreate
    void WebViewDo() -> b
    void onClick(android.view.View) -> onClick
    void queryBalanceDo() -> c
    void getBanckCardFromNet() -> a
    void access$0(com.rongdai.activity.personalcenter.GetMoneyWebviewActivity,java.lang.String) -> a
    void access$1(com.rongdai.activity.personalcenter.GetMoneyWebviewActivity) -> a
com.rongdai.activity.personalcenter.GetMoneyWebviewActivity$1 -> com.rongdai.activity.personalcenter.i:
    com.rongdai.activity.personalcenter.GetMoneyWebviewActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.GetMoneyWebviewActivity$2 -> com.rongdai.activity.personalcenter.j:
    com.rongdai.activity.personalcenter.GetMoneyWebviewActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.InputHandPasswordActivity -> com.rongdai.activity.personalcenter.InputHandPasswordActivity:
    android.widget.FrameLayout body_layout -> d
    com.rongdai.view.ContentView content -> e
    android.widget.ImageView handpsw_headimage -> a
    long waitTime -> b
    long touchTime -> c
    void initData() -> a
    void inputPassword() -> b
    void onBackPressed() -> onBackPressed
com.rongdai.activity.personalcenter.InputHandPasswordActivity$1 -> com.rongdai.activity.personalcenter.k:
    com.rongdai.activity.personalcenter.InputHandPasswordActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.InputHandPasswordActivity$2 -> com.rongdai.activity.personalcenter.l:
    com.rongdai.activity.personalcenter.InputHandPasswordActivity this$0 -> a
    void checkedSuccess() -> a
    void checkedFail() -> b
    void setSuccess() -> c
    void setFail() -> d
com.rongdai.activity.personalcenter.InvestmentProjectActivity -> com.rongdai.activity.personalcenter.InvestmentProjectActivity:
    android.widget.ImageButton about_us_back -> c
    com.rongdai.utils.XListView mListView -> d
    android.widget.ArrayAdapter mAdapter -> e
    java.util.ArrayList items -> f
    java.util.List list -> g
    android.os.Handler mHandler -> h
    int start -> i
    int refreshCnt -> j
    java.util.List listjson -> a
    android.content.Context mContext -> b
    com.rongdai.activity.personalcenter.InvestmentProjectActivity$MyAdapter adapter -> k
    java.lang.String moreid -> l
    void onCreate(android.os.Bundle) -> onCreate
    void geneItems() -> d
    void onLoad() -> e
    void onRefresh() -> a
    void onLoadMore() -> b
    void onClick(android.view.View) -> onClick
    void investmentProjectListPost(int) -> b
    int access$0() -> c
    void access$1(int) -> a
    void access$2(com.rongdai.activity.personalcenter.InvestmentProjectActivity,int) -> a
    void access$3(com.rongdai.activity.personalcenter.InvestmentProjectActivity) -> a
    java.util.ArrayList access$4(com.rongdai.activity.personalcenter.InvestmentProjectActivity) -> b
    void access$5(com.rongdai.activity.personalcenter.InvestmentProjectActivity,android.widget.ArrayAdapter) -> a
    com.rongdai.utils.XListView access$6(com.rongdai.activity.personalcenter.InvestmentProjectActivity) -> c
    com.rongdai.activity.personalcenter.InvestmentProjectActivity$MyAdapter access$7(com.rongdai.activity.personalcenter.InvestmentProjectActivity) -> d
    void access$8(com.rongdai.activity.personalcenter.InvestmentProjectActivity) -> e
    int access$9(com.rongdai.activity.personalcenter.InvestmentProjectActivity) -> f
    void access$10(com.rongdai.activity.personalcenter.InvestmentProjectActivity,java.lang.String) -> a
com.rongdai.activity.personalcenter.InvestmentProjectActivity$1 -> com.rongdai.activity.personalcenter.m:
    com.rongdai.activity.personalcenter.InvestmentProjectActivity this$0 -> a
    void run() -> run
com.rongdai.activity.personalcenter.InvestmentProjectActivity$2 -> com.rongdai.activity.personalcenter.n:
    com.rongdai.activity.personalcenter.InvestmentProjectActivity this$0 -> a
    void run() -> run
com.rongdai.activity.personalcenter.InvestmentProjectActivity$3 -> com.rongdai.activity.personalcenter.o:
    com.rongdai.activity.personalcenter.InvestmentProjectActivity this$0 -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.rongdai.activity.personalcenter.InvestmentProjectActivity$3$1 -> com.rongdai.activity.personalcenter.p:
    com.rongdai.activity.personalcenter.InvestmentProjectActivity$3 this$1 -> a
com.rongdai.activity.personalcenter.InvestmentProjectActivity$3$2 -> com.rongdai.activity.personalcenter.q:
    com.rongdai.activity.personalcenter.InvestmentProjectActivity$3 this$1 -> a
    void update() -> a
com.rongdai.activity.personalcenter.InvestmentProjectActivity$MyAdapter -> com.rongdai.activity.personalcenter.r:
    com.rongdai.activity.personalcenter.InvestmentProjectActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.rongdai.activity.personalcenter.LoanserviceActivity -> com.rongdai.activity.personalcenter.LoanserviceActivity:
    android.widget.ImageView loanservice_back -> a
    void initData() -> a
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.LoginActivity -> com.rongdai.activity.personalcenter.LoginActivity:
    android.widget.ImageView login_back -> a
    android.widget.EditText login_password -> b
    android.widget.EditText login_username -> c
    android.widget.Button login -> d
    android.widget.Button regist -> e
    android.widget.Button forget_password -> f
    android.widget.CheckBox psw_see -> g
    void initData() -> a
    void onClick(android.view.View) -> onClick
    void loginByNet() -> d
    void setHandPsw() -> b
    void saveUsername() -> c
    android.widget.EditText access$0(com.rongdai.activity.personalcenter.LoginActivity) -> a
com.rongdai.activity.personalcenter.LoginActivity$1 -> com.rongdai.activity.personalcenter.s:
    com.rongdai.activity.personalcenter.LoginActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.rongdai.activity.personalcenter.LoginActivity$2 -> com.rongdai.activity.personalcenter.t:
    com.rongdai.activity.personalcenter.LoginActivity this$0 -> a
    java.lang.String val$userName -> b
    java.lang.String val$password -> c
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.MoneyRecordActivity -> com.rongdai.activity.personalcenter.MoneyRecordActivity:
    android.widget.ImageButton about_us_back -> c
    com.rongdai.utils.XListView mListView -> d
    java.util.ArrayList items -> e
    java.util.List list -> f
    android.os.Handler mHandler -> g
    int start -> h
    int refreshCnt -> i
    java.util.List listjson -> a
    android.content.Context mContext -> b
    com.rongdai.activity.personalcenter.MoneyRecordActivity$MyAdapter adapter -> j
    java.lang.String moreid -> k
    void onCreate(android.os.Bundle) -> onCreate
    void geneItems() -> d
    void onLoad() -> e
    void onRefresh() -> a
    void onLoadMore() -> b
    void onClick(android.view.View) -> onClick
    void MoneyRecordListPost(int) -> b
    int access$0() -> c
    void access$1(int) -> a
    void access$2(com.rongdai.activity.personalcenter.MoneyRecordActivity,int) -> a
    void access$3(com.rongdai.activity.personalcenter.MoneyRecordActivity) -> a
    com.rongdai.utils.XListView access$4(com.rongdai.activity.personalcenter.MoneyRecordActivity) -> b
    com.rongdai.activity.personalcenter.MoneyRecordActivity$MyAdapter access$5(com.rongdai.activity.personalcenter.MoneyRecordActivity) -> c
    void access$6(com.rongdai.activity.personalcenter.MoneyRecordActivity) -> d
    int access$7(com.rongdai.activity.personalcenter.MoneyRecordActivity) -> e
    void access$8(com.rongdai.activity.personalcenter.MoneyRecordActivity,java.lang.String) -> a
com.rongdai.activity.personalcenter.MoneyRecordActivity$1 -> com.rongdai.activity.personalcenter.u:
    com.rongdai.activity.personalcenter.MoneyRecordActivity this$0 -> a
    void run() -> run
com.rongdai.activity.personalcenter.MoneyRecordActivity$2 -> com.rongdai.activity.personalcenter.v:
    com.rongdai.activity.personalcenter.MoneyRecordActivity this$0 -> a
    void run() -> run
com.rongdai.activity.personalcenter.MoneyRecordActivity$3 -> com.rongdai.activity.personalcenter.w:
    com.rongdai.activity.personalcenter.MoneyRecordActivity this$0 -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.rongdai.activity.personalcenter.MoneyRecordActivity$3$1 -> com.rongdai.activity.personalcenter.x:
    com.rongdai.activity.personalcenter.MoneyRecordActivity$3 this$1 -> a
com.rongdai.activity.personalcenter.MoneyRecordActivity$3$2 -> com.rongdai.activity.personalcenter.y:
    com.rongdai.activity.personalcenter.MoneyRecordActivity$3 this$1 -> a
    void update() -> a
com.rongdai.activity.personalcenter.MoneyRecordActivity$MyAdapter -> com.rongdai.activity.personalcenter.z:
    com.rongdai.activity.personalcenter.MoneyRecordActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.rongdai.activity.personalcenter.MyBankCardActivity -> com.rongdai.activity.personalcenter.MyBankCardActivity:
    android.widget.ImageButton MyBankCard_back -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.MyRedEnvelopeActivity -> com.rongdai.activity.personalcenter.MyRedEnvelopeActivity:
    android.widget.ImageButton myuser_back -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.MyUserActivity -> com.rongdai.activity.personalcenter.MyUserActivity:
    android.widget.ImageButton myuser_back -> a
    android.widget.RelativeLayout pay_relativelayout -> b
    android.widget.RelativeLayout getmoney_relativelayout -> c
    android.widget.TextView totalMoney_TexvView -> d
    android.widget.TextView canUseBal_TextView -> e
    android.widget.TextView frzBal_TextView -> f
    android.widget.TextView investAmount_TextView -> g
    android.widget.TextView incomeAmount_TextView -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void myAccount() -> a
    android.widget.TextView access$0(com.rongdai.activity.personalcenter.MyUserActivity) -> a
    android.widget.TextView access$1(com.rongdai.activity.personalcenter.MyUserActivity) -> b
    android.widget.TextView access$2(com.rongdai.activity.personalcenter.MyUserActivity) -> c
    android.widget.TextView access$3(com.rongdai.activity.personalcenter.MyUserActivity) -> d
    android.widget.TextView access$4(com.rongdai.activity.personalcenter.MyUserActivity) -> e
com.rongdai.activity.personalcenter.MyUserActivity$1 -> com.rongdai.activity.personalcenter.aa:
    com.rongdai.activity.personalcenter.MyUserActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.NotUsedRedActivity -> com.rongdai.activity.personalcenter.NotUsedRedActivity:
    android.widget.RadioGroup rg_orderstate -> a
    android.widget.ImageView red_back -> b
    com.rongdai.view.PullToRefreshView refreshlist -> c
    android.widget.ListView red_lv_order -> d
    com.rongdai.activity.personalcenter.NotUsedRedActivity$MyListViewAdapter adapter -> e
    void initData() -> a
    void onClick(android.view.View) -> onClick
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void onFooterRefresh(com.rongdai.view.PullToRefreshView) -> a
    void onHeaderRefresh(com.rongdai.view.PullToRefreshView) -> b
com.rongdai.activity.personalcenter.NotUsedRedActivity$MyListViewAdapter -> com.rongdai.activity.personalcenter.ab:
    com.rongdai.activity.personalcenter.NotUsedRedActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.rongdai.activity.personalcenter.OpenActivity -> com.rongdai.activity.personalcenter.OpenActivity:
    android.widget.Button openlater -> a
    android.widget.Button goopen -> b
    android.app.Dialog dialog -> c
    void initData() -> a
    void showDialog() -> b
    android.app.Dialog access$0(com.rongdai.activity.personalcenter.OpenActivity) -> a
com.rongdai.activity.personalcenter.OpenActivity$1 -> com.rongdai.activity.personalcenter.ac:
    com.rongdai.activity.personalcenter.OpenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.OpenActivity$2 -> com.rongdai.activity.personalcenter.ad:
    com.rongdai.activity.personalcenter.OpenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.PayActivity -> com.rongdai.activity.personalcenter.PayActivity:
    android.widget.ImageButton pay_back -> b
    java.lang.String rongDaiAccount -> c
    java.lang.String usrcustId -> d
    android.widget.TextView queryBalance_textview -> e
    android.widget.Button goto_pay_button -> a
    android.widget.EditText recharge_money -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void queryBalanceDo() -> a
    android.widget.TextView access$0(com.rongdai.activity.personalcenter.PayActivity) -> a
com.rongdai.activity.personalcenter.PayActivity$1 -> com.rongdai.activity.personalcenter.ae:
    com.rongdai.activity.personalcenter.PayActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.PayActivity$1$1 -> com.rongdai.activity.personalcenter.af:
    com.rongdai.activity.personalcenter.PayActivity$1 this$1 -> a
com.rongdai.activity.personalcenter.PayDetailedActivity -> com.rongdai.activity.personalcenter.PayDetailedActivity:
    android.widget.TextView paydetailed_textview -> a
    android.widget.Button next_button -> b
    android.widget.ImageButton MyBankCard_back -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.PaySuccessActivity -> com.rongdai.activity.personalcenter.PaySuccessActivity:
    android.widget.ImageButton paysuccess_back -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.PayWebViewActivity -> com.rongdai.activity.personalcenter.PayWebViewActivity:
    android.widget.ImageButton pay_back -> a
    java.lang.String money -> b
    java.lang.String usrcustId -> c
    java.lang.String Webviewurl -> d
    android.webkit.WebView pay_webview -> e
    void onCreate(android.os.Bundle) -> onCreate
    void WebViewDo() -> a
    void onClick(android.view.View) -> onClick
    void queryBalanceDo() -> b
    void access$0(com.rongdai.activity.personalcenter.PayWebViewActivity,java.lang.String) -> a
    void access$1(com.rongdai.activity.personalcenter.PayWebViewActivity) -> a
com.rongdai.activity.personalcenter.PayWebViewActivity$1 -> com.rongdai.activity.personalcenter.ag:
    com.rongdai.activity.personalcenter.PayWebViewActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.RealNameCertificationActivity -> com.rongdai.activity.personalcenter.RealNameCertificationActivity:
    android.widget.ImageButton realname_certification_back -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.RecentDealActivity -> com.rongdai.activity.personalcenter.RecentDealActivity:
    android.widget.ImageButton about_us_back -> c
    com.rongdai.utils.XListView mListView -> d
    android.os.Handler mHandler -> e
    int start -> f
    int refreshCnt -> g
    java.util.List listjson -> a
    android.content.Context mContext -> b
    com.rongdai.activity.personalcenter.RecentDealActivity$MyAdapter adapter -> h
    java.lang.String moreid -> i
    void onCreate(android.os.Bundle) -> onCreate
    void geneItems() -> d
    void onLoad() -> e
    void onRefresh() -> a
    void onLoadMore() -> b
    void onClick(android.view.View) -> onClick
    void MoneyRecordListPost(int) -> b
    int access$0() -> c
    void access$1(int) -> a
    void access$2(com.rongdai.activity.personalcenter.RecentDealActivity,int) -> a
    void access$3(com.rongdai.activity.personalcenter.RecentDealActivity) -> a
    com.rongdai.utils.XListView access$4(com.rongdai.activity.personalcenter.RecentDealActivity) -> b
    com.rongdai.activity.personalcenter.RecentDealActivity$MyAdapter access$5(com.rongdai.activity.personalcenter.RecentDealActivity) -> c
    void access$6(com.rongdai.activity.personalcenter.RecentDealActivity) -> d
    int access$7(com.rongdai.activity.personalcenter.RecentDealActivity) -> e
    void access$8(com.rongdai.activity.personalcenter.RecentDealActivity,java.lang.String) -> a
com.rongdai.activity.personalcenter.RecentDealActivity$1 -> com.rongdai.activity.personalcenter.ah:
    com.rongdai.activity.personalcenter.RecentDealActivity this$0 -> a
    void run() -> run
com.rongdai.activity.personalcenter.RecentDealActivity$2 -> com.rongdai.activity.personalcenter.ai:
    com.rongdai.activity.personalcenter.RecentDealActivity this$0 -> a
    void run() -> run
com.rongdai.activity.personalcenter.RecentDealActivity$3 -> com.rongdai.activity.personalcenter.aj:
    com.rongdai.activity.personalcenter.RecentDealActivity this$0 -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.rongdai.activity.personalcenter.RecentDealActivity$3$1 -> com.rongdai.activity.personalcenter.ak:
    com.rongdai.activity.personalcenter.RecentDealActivity$3 this$1 -> a
com.rongdai.activity.personalcenter.RecentDealActivity$3$2 -> com.rongdai.activity.personalcenter.al:
    com.rongdai.activity.personalcenter.RecentDealActivity$3 this$1 -> a
    void update() -> a
com.rongdai.activity.personalcenter.RecentDealActivity$MyAdapter -> com.rongdai.activity.personalcenter.am:
    com.rongdai.activity.personalcenter.RecentDealActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.rongdai.activity.personalcenter.RegistActivity -> com.rongdai.activity.personalcenter.RegistActivity:
    android.widget.ImageView regist_back -> a
    android.widget.EditText regist_username -> b
    android.widget.EditText regist_psw -> c
    android.widget.EditText regist_repsw -> d
    android.widget.EditText regist_phone -> e
    android.widget.EditText regist_verification -> f
    android.widget.Button regist_getverification -> g
    android.widget.Button regist -> h
    int time -> i
    java.util.Timer timer -> j
    java.util.TimerTask task -> k
    android.widget.ImageView regist_headimage -> l
    android.widget.PopupWindow popupWindow -> m
    android.view.View allView -> n
    android.widget.Button picture -> o
    android.widget.Button back -> p
    android.widget.Button camera -> q
    android.graphics.Bitmap bitmap -> r
    java.lang.String imgPath -> s
    android.net.Uri mUri -> t
    java.lang.String userName -> u
    java.lang.String password -> v
    java.lang.String phone -> w
    java.lang.String verification -> x
    android.widget.TextView regist_agreement -> y
    com.rongdai.domain.MessageData messageData -> z
    void initData() -> a
    void onClick(android.view.View) -> onClick
    void verification() -> b
    boolean getVerificationFromNet() -> c
    void processMessageData(java.lang.String) -> a
    void RegistByNet() -> d
    void dismissPopupWindow() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void postHeadImage(java.io.File) -> a
    void access$0(com.rongdai.activity.personalcenter.RegistActivity) -> a
    int access$1(com.rongdai.activity.personalcenter.RegistActivity) -> b
    android.widget.Button access$2(com.rongdai.activity.personalcenter.RegistActivity) -> c
    java.util.TimerTask access$3(com.rongdai.activity.personalcenter.RegistActivity) -> d
    void access$4(com.rongdai.activity.personalcenter.RegistActivity,int) -> a
    java.lang.String access$5(com.rongdai.activity.personalcenter.RegistActivity) -> e
    java.lang.String access$6(com.rongdai.activity.personalcenter.RegistActivity) -> f
    java.lang.String access$7(com.rongdai.activity.personalcenter.RegistActivity) -> g
com.rongdai.activity.personalcenter.RegistActivity$1 -> com.rongdai.activity.personalcenter.an:
    com.rongdai.activity.personalcenter.RegistActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.rongdai.activity.personalcenter.RegistActivity$2 -> com.rongdai.activity.personalcenter.ao:
    com.rongdai.activity.personalcenter.RegistActivity this$0 -> a
    void run() -> run
    com.rongdai.activity.personalcenter.RegistActivity access$0(com.rongdai.activity.personalcenter.RegistActivity$2) -> a
com.rongdai.activity.personalcenter.RegistActivity$2$1 -> com.rongdai.activity.personalcenter.ap:
    com.rongdai.activity.personalcenter.RegistActivity$2 this$1 -> a
    void run() -> run
com.rongdai.activity.personalcenter.RegistActivity$3 -> com.rongdai.activity.personalcenter.aq:
    com.rongdai.activity.personalcenter.RegistActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.RegistActivity$4 -> com.rongdai.activity.personalcenter.ar:
    com.rongdai.activity.personalcenter.RegistActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.RegistActivity$5 -> com.rongdai.activity.personalcenter.as:
    com.rongdai.activity.personalcenter.RegistActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.RegistAgreementActivity -> com.rongdai.activity.personalcenter.RegistAgreementActivity:
    void initData() -> a
com.rongdai.activity.personalcenter.RegistAgreementActivity$1 -> com.rongdai.activity.personalcenter.at:
    com.rongdai.activity.personalcenter.RegistAgreementActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.SecurityCenterActivity -> com.rongdai.activity.personalcenter.SecurityCenterActivity:
    android.widget.ImageButton securitycenter_back -> a
    android.widget.RelativeLayout real_name_certification -> b
    android.widget.RelativeLayout binding_phone_number_back_relativelayout -> c
    android.widget.RelativeLayout mybankcard_relativelayout -> d
    android.widget.RelativeLayout editpassword_relativelayout -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.SetHandPasswordActivity -> com.rongdai.activity.personalcenter.SetHandPasswordActivity:
    android.widget.FrameLayout body_layout -> e
    com.rongdai.view.ContentView content -> f
    android.widget.TextView sethand_title -> a
    android.widget.TextView sethand_info -> b
    long waitTime -> c
    long touchTime -> d
    void initData() -> a
    void setHandPassword() -> b
    void onBackPressed() -> onBackPressed
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.SetHandPasswordActivity$1 -> com.rongdai.activity.personalcenter.au:
    com.rongdai.activity.personalcenter.SetHandPasswordActivity this$0 -> a
    void checkedSuccess() -> a
    void checkedFail() -> b
    void setSuccess() -> c
    void setFail() -> d
com.rongdai.activity.personalcenter.SetNewPswActivity -> com.rongdai.activity.personalcenter.SetNewPswActivity:
    android.widget.ImageView setnewpsw_back -> a
    android.widget.EditText setnewpsw_psw -> b
    android.widget.EditText setnewpsw_repsw -> c
    android.widget.Button setnewpsw_sure -> d
    android.widget.EditText userName -> e
    void initData() -> a
    void onClick(android.view.View) -> onClick
    void setNewPswToNet() -> b
com.rongdai.activity.personalcenter.SetNewPswActivity$1 -> com.rongdai.activity.personalcenter.av:
    com.rongdai.domain.SetNewPsw setNewPsw -> b
    com.rongdai.activity.personalcenter.SetNewPswActivity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.activity.personalcenter.SettingActivity -> com.rongdai.activity.personalcenter.SettingActivity:
    android.widget.ImageButton setting_back -> a
    android.widget.RelativeLayout feedback -> b
    android.widget.RelativeLayout aboutus_relativeLayout -> c
    android.widget.Button quitback_button -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.SpeedPayActivity -> com.rongdai.activity.personalcenter.SpeedPayActivity:
    android.widget.ImageButton speedpay_back -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.rongdai.activity.personalcenter.VerificationActivity -> com.rongdai.activity.personalcenter.VerificationActivity:
    android.widget.ImageView verification_back -> a
    android.widget.EditText verification -> b
    android.widget.Button verificartion_sure -> c
    java.lang.String messageCode -> d
    void initData() -> a
    void onClick(android.view.View) -> onClick
com.rongdai.base.BaseActivity -> com.rongdai.base.BaseActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
com.rongdai.base.BaseApplication -> com.rongdai.base.BaseApplication:
    android.content.Context mContext -> a
    void onCreate() -> onCreate
    android.content.Context getContext() -> a
com.rongdai.base.BasePager -> com.rongdai.base.a:
    android.content.Context mContext -> a
    android.view.View RootView -> b
    android.view.View initView(android.content.Context) -> a
    android.view.View getRootView() -> a
    void initData() -> b
com.rongdai.calculator.FloatWindowBigView -> com.rongdai.calculator.a:
    android.view.WindowManager windowManager -> c
    android.view.WindowManager$LayoutParams mParams -> d
    int statusBarHeight -> e
    float xInScreen -> f
    float yInScreen -> g
    float xDownInScreen -> h
    float yDownInScreen -> i
    float xInView -> j
    float yInView -> k
    int viewWidth -> a
    int viewHeight -> b
    android.widget.EditText moneyEditText -> l
    android.widget.EditText interestEditText -> m
    android.widget.EditText timeEditText -> n
    android.widget.TextView resultTextView -> o
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void updateViewPosition() -> a
    int getStatusBarHeight() -> getStatusBarHeight
    void setParams(android.view.WindowManager$LayoutParams) -> setParams
    android.widget.EditText access$0(com.rongdai.calculator.FloatWindowBigView) -> a
    android.widget.EditText access$1(com.rongdai.calculator.FloatWindowBigView) -> b
    android.widget.EditText access$2(com.rongdai.calculator.FloatWindowBigView) -> c
    android.widget.TextView access$3(com.rongdai.calculator.FloatWindowBigView) -> d
com.rongdai.calculator.FloatWindowBigView$1 -> com.rongdai.calculator.b:
    com.rongdai.calculator.FloatWindowBigView this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
com.rongdai.calculator.FloatWindowBigView$2 -> com.rongdai.calculator.c:
    com.rongdai.calculator.FloatWindowBigView this$0 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.calculator.FloatWindowService -> com.rongdai.calculator.FloatWindowService:
    android.os.Handler handler -> a
    java.util.Timer timer -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    boolean isHome() -> a
    boolean access$0(com.rongdai.calculator.FloatWindowService) -> a
    android.os.Handler access$1(com.rongdai.calculator.FloatWindowService) -> b
com.rongdai.calculator.FloatWindowService$RefreshTask -> com.rongdai.calculator.d:
    com.rongdai.calculator.FloatWindowService this$0 -> a
    void run() -> run
    com.rongdai.calculator.FloatWindowService access$0(com.rongdai.calculator.FloatWindowService$RefreshTask) -> a
com.rongdai.calculator.FloatWindowService$RefreshTask$1 -> com.rongdai.calculator.e:
    com.rongdai.calculator.FloatWindowService$RefreshTask this$1 -> a
    void run() -> run
com.rongdai.calculator.FloatWindowService$RefreshTask$2 -> com.rongdai.calculator.f:
    com.rongdai.calculator.FloatWindowService$RefreshTask this$1 -> a
    void run() -> run
com.rongdai.calculator.FloatWindowService$RefreshTask$3 -> com.rongdai.calculator.g:
    com.rongdai.calculator.FloatWindowService$RefreshTask this$1 -> a
    void run() -> run
com.rongdai.calculator.FloatWindowService$RefreshTask$4 -> com.rongdai.calculator.h:
    com.rongdai.calculator.FloatWindowService$RefreshTask this$1 -> a
    void run() -> run
com.rongdai.calculator.FloatWindowSmallView -> com.rongdai.calculator.i:
    int viewWidth -> a
    int viewHeight -> b
    int statusBarHeight -> c
    android.view.WindowManager windowManager -> d
    android.view.WindowManager$LayoutParams mParams -> e
    float xInScreen -> f
    float yInScreen -> g
    float xDownInScreen -> h
    float yDownInScreen -> i
    float xInView -> j
    float yInView -> k
    android.view.View view -> l
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setParams(android.view.WindowManager$LayoutParams) -> setParams
    void updateViewPosition() -> a
    void openBigWindow() -> b
    int getStatusBarHeight() -> getStatusBarHeight
com.rongdai.calculator.MyWindowManager -> com.rongdai.calculator.j:
    com.rongdai.calculator.FloatWindowSmallView smallWindow -> a
    com.rongdai.calculator.FloatWindowBigView bigWindow -> b
    android.view.WindowManager$LayoutParams smallWindowParams -> c
    android.view.WindowManager$LayoutParams bigWindowParams -> d
    android.view.WindowManager mWindowManager -> e
    void createSmallWindow(android.content.Context) -> a
    void removeSmallWindow(android.content.Context) -> b
    void createBigWindow(android.content.Context) -> c
    void removeBigWindow(android.content.Context) -> d
    void updateUsedPercent(android.content.Context) -> e
    boolean isWindowShowing() -> a
    android.view.WindowManager getWindowManager(android.content.Context) -> f
com.rongdai.constants.ConfigConstants -> com.rongdai.a.a:
    java.lang.String PAGER -> a
    java.lang.String RECOMMENDPAGER -> b
    java.lang.String OHTERPAGER -> c
    java.lang.String IWANTLOAN -> d
    java.lang.String PROJECTDETAILPAGER -> e
    java.lang.String PROJECTINFO -> f
    java.lang.String REPAYMODE -> g
    java.lang.String RELATEDDATAPAGER -> h
    java.lang.String TENDERCASE -> i
    java.lang.String IMAGEVIEWPAGER -> j
com.rongdai.constants.IntentConstants -> com.rongdai.a.b:
    java.lang.String BMID -> a
    java.lang.String BORROWTYPE -> b
com.rongdai.domain.BindBanckCard -> com.rongdai.b.a:
    java.lang.String data -> a
com.rongdai.domain.ChinaUniteCarTrade -> com.rongdai.b.b:
    java.util.List zhongliangqimao -> a
com.rongdai.domain.ConfirmTenderBean -> com.rongdai.b.c:
    java.lang.String data -> a
com.rongdai.domain.DrectionRaiseBean -> com.rongdai.b.d:
    java.util.List dingxiangmuji -> a
com.rongdai.domain.ImageBean -> com.rongdai.b.e:
    com.rongdai.domain.ImageBean$ImageBeanData data -> a
com.rongdai.domain.ImageBean$ImageBeanData -> com.rongdai.b.f:
    java.util.List imgUrl -> a
com.rongdai.domain.InvestmentProjectListInfo -> com.rongdai.b.g:
    java.lang.String message -> a
    java.util.List data -> b
com.rongdai.domain.InvestmentProjectListInfo$loanProjectListData -> com.rongdai.b.h:
    java.lang.String borrowName -> a
    java.lang.String investmentDate -> b
    java.lang.String borrowYearRate -> c
    java.lang.String borrowLimit -> d
    java.lang.String borrowStatus -> e
    java.lang.String investmentAccount -> f
    java.lang.String hadrRturnedMoney -> g
    java.lang.String waitingRturnedMoney -> h
com.rongdai.domain.LoginInfo -> com.rongdai.b.i:
    java.lang.String message -> a
    java.lang.String rongdaiAccount -> b
    java.lang.String UsrCustId -> c
com.rongdai.domain.ManagerMoneyGoods -> com.rongdai.b.j:
    java.util.List licaichanping -> a
com.rongdai.domain.MessageData -> com.rongdai.b.k:
    java.lang.String code -> a
com.rongdai.domain.MinTime -> com.rongdai.b.l:
    java.lang.String minTime -> a
com.rongdai.domain.ModifyLoginPwdInfo -> com.rongdai.b.m:
    java.lang.String message -> a
com.rongdai.domain.MoneyRecordListInfo -> com.rongdai.b.n:
    java.lang.String message -> a
    java.util.List data -> b
com.rongdai.domain.MoneyRecordListInfo$MoneyRecordListData -> com.rongdai.b.o:
    java.lang.String accountRecordType -> a
    java.lang.String accountRecordDate -> b
    java.lang.String accountRecordMoney -> c
    java.lang.String accountRecordName -> d
com.rongdai.domain.MyAccountInfo -> com.rongdai.b.p:
    java.lang.String message -> a
    java.lang.String canUseBal -> b
    java.lang.String frzBal -> c
    java.lang.String investAmount -> d
    java.lang.String incomeAmount -> e
    java.lang.String totalMoney -> f
com.rongdai.domain.NoticConsultBean -> com.rongdai.b.q:
    java.util.List data -> a
com.rongdai.domain.NoticConsultBean$NoticConsultInfo -> com.rongdai.b.r:
    java.lang.String newsId -> a
    java.lang.String newsImg -> b
    java.lang.String newsKeyWords -> c
    java.lang.String newsTitle -> d
com.rongdai.domain.NoticeInfoBean -> com.rongdai.b.s:
    com.rongdai.domain.NoticeInfoBean$Data data -> a
    java.lang.String message -> b
    java.lang.String errorCode -> c
    java.lang.String toString() -> toString
com.rongdai.domain.NoticeInfoBean$Data -> com.rongdai.b.t:
    java.lang.String newsId -> a
    java.lang.String newsSendTime -> b
    java.lang.String newsImg -> c
    java.lang.String newsContent -> d
    java.lang.String counts -> e
    java.lang.String newsKeyWords -> f
    java.lang.String newsTitle -> g
    java.lang.String newsCome -> h
    java.util.List reply -> i
    java.lang.String toString() -> toString
com.rongdai.domain.NoticeInfoBean$Data$ReplyInfo -> com.rongdai.b.u:
    java.lang.String imgUrl -> a
    java.lang.String replyId -> b
    java.lang.String replyDate -> c
    java.lang.String replyContent -> d
    java.lang.String replyImgUrl -> e
    java.lang.String oneName -> f
    java.util.List replys -> g
    java.lang.String toString() -> toString
com.rongdai.domain.NoticeInfoBean$Data$ReplyInfo$Replys -> com.rongdai.b.v:
    java.lang.String replyId -> a
    java.lang.String replyContent -> b
    java.lang.String oneName -> c
    java.lang.String twoName -> d
    java.lang.String toString() -> toString
com.rongdai.domain.OtherProjectBean -> com.rongdai.b.w:
    java.lang.String message -> a
    java.util.List licaichanping -> b
    java.util.List zhongliangqimao -> c
    java.util.List dingxiangmuji -> d
    java.util.List yibangshangcheng -> e
com.rongdai.domain.ProjectInfoBean -> com.rongdai.b.x:
    com.rongdai.domain.ProjectInfoBean$projectInfoData data -> a
com.rongdai.domain.ProjectInfoBean$projectInfoData -> com.rongdai.b.y:
    java.lang.String age -> a
    java.lang.String alreayPaymentCount -> b
    java.lang.String birthAddress -> c
    java.lang.String bmDesc -> d
    java.lang.String borrowAccount -> e
    java.lang.String borrowEndTime -> f
    java.lang.String borrowHighLevel -> g
    java.lang.String borrowName -> h
    java.lang.String borrowPayDate -> i
    java.lang.String borrowProSituation -> j
    java.lang.String borrowType -> k
    java.lang.String borrowUse -> l
    java.lang.String borrowYearRate -> m
    java.lang.String commerialInsurance -> n
    java.lang.String creditCardAccountLevel -> o
    java.lang.String creditInformationReports -> p
    java.lang.String houseProperty -> q
    java.lang.String isMarry -> r
    java.lang.String knowledgeLevel -> s
    java.lang.String longTimeLiveAddress -> t
    java.lang.String profession -> u
    java.lang.String sex -> v
    java.lang.String socialSecurityTime -> w
    java.lang.String successLoanCount -> x
    java.lang.String title -> y
    java.lang.String waitingPayment -> z
    java.lang.String workTime -> A
    java.lang.String yearIncome -> B
com.rongdai.domain.RecentDealListInfo -> com.rongdai.b.z:
    java.lang.String message -> a
    java.util.List data -> b
com.rongdai.domain.RecentDealListInfo$RecentDealListData -> com.rongdai.b.aa:
    java.lang.String accountRecordType -> a
    java.lang.String accountRecordDate -> b
    java.lang.String accountRecordMoney -> c
    java.lang.String factorage -> d
    java.lang.String huanChongFactorage -> e
com.rongdai.domain.RecommendProjectBean -> com.rongdai.b.ab:
    java.util.List data -> a
com.rongdai.domain.RecommendProjectBean$RecommendProjectData -> com.rongdai.b.ac:
    java.lang.String borrowDate -> a
    java.lang.String borrowAccount -> b
    java.lang.String borrowEndTime -> c
    java.lang.String borrowHadRongZi -> d
    java.lang.String borrowId -> e
    java.lang.String borrowLimit -> f
    java.lang.String borrowName -> g
    java.lang.String borrowType -> h
    java.lang.String borrowYearRate -> i
com.rongdai.domain.RegistInfo -> com.rongdai.b.ad:
    java.lang.String message -> a
com.rongdai.domain.RegistOpen -> com.rongdai.b.ae:
    java.lang.String data -> a
com.rongdai.domain.RepaymentModeBean -> com.rongdai.b.af:
    com.rongdai.domain.RepaymentModeBean$RepaymentModeBeanData data -> a
com.rongdai.domain.RepaymentModeBean$RepaymentModeBeanData -> com.rongdai.b.ag:
    java.util.List data2 -> a
com.rongdai.domain.RepaymentModeBean$RepaymentModeBeanData$RepaymentModeBeanDataInfo -> com.rongdai.b.ah:
    java.lang.String borrowExpectDate -> a
    java.lang.String borrowPayType -> b
    java.lang.String borrowShouldCount -> c
com.rongdai.domain.SetNewPsw -> com.rongdai.b.ai:
    java.lang.String message -> a
com.rongdai.domain.TenderCaseBean -> com.rongdai.b.aj:
    com.rongdai.domain.TenderCaseBean$TenderCaseData data -> a
com.rongdai.domain.TenderCaseBean$TenderCaseData -> com.rongdai.b.ak:
    java.util.List data2 -> a
com.rongdai.domain.TenderCaseBean$TenderCaseData$TenderCaseDataInfo -> com.rongdai.b.al:
    java.lang.String investmentAccount -> a
    java.lang.String investmentDate -> b
    java.lang.String investmentMemName -> c
com.rongdai.domain.TopImage -> com.rongdai.b.am:
    java.util.List data -> a
com.rongdai.domain.TopImage$ImageLink -> com.rongdai.b.an:
    java.lang.String newsId -> a
    java.lang.String phUrl -> b
com.rongdai.domain.WriteLoanInfoBean -> com.rongdai.b.ao:
    java.lang.String message -> a
com.rongdai.domain.YiBangStore -> com.rongdai.b.ap:
    java.util.List yibangshangcheng -> a
com.rongdai.domain.investAndEarn -> com.rongdai.b.aq:
    java.lang.String message -> a
    com.rongdai.domain.investAndEarn$investAndEarnData data -> b
com.rongdai.domain.investAndEarn$investAndEarnData -> com.rongdai.b.ar:
    java.lang.String canUseBal -> a
    java.lang.String investmentCount -> b
    java.lang.String earn -> c
    java.lang.String waitInvestmentCount -> d
    java.lang.String waitEarn -> e
com.rongdai.domain.loanProjectList -> com.rongdai.b.as:
    java.util.List data -> a
com.rongdai.domain.loanProjectList$loanProjectListData -> com.rongdai.b.at:
    java.lang.String loanCollSpeed -> a
    java.lang.String loanCost -> b
    java.lang.String loanDate -> c
    java.lang.String loanName -> d
    java.lang.String loanTypeId -> e
    java.lang.String loantArea -> f
com.rongdai.domain.rechargeInfo -> com.rongdai.b.au:
    java.lang.String bankAccount -> a
    java.lang.String data -> b
com.rongdai.iwantloan.pager.WriteLoanInfo -> com.rongdai.iwantloan.pager.WriteLoanInfo:
    android.widget.EditText nameTextView -> a
    android.widget.EditText phoneTextView -> b
    android.widget.EditText emailTextView -> c
    android.widget.EditText hujiTextView -> d
    android.widget.EditText localTextView -> e
    android.widget.EditText companyTextView -> f
    android.widget.EditText moneyTextView -> g
    android.widget.EditText timeTextView -> h
    android.widget.EditText commentTextView -> i
    android.widget.Button commitTextView -> j
    android.widget.ImageView backImageButton -> k
    java.lang.String loanTypeId -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onClick(android.view.View) -> onClick
    void sendDataToNet() -> b
    void progcessData(java.lang.String) -> a
    boolean checkIsEmpty() -> c
com.rongdai.iwantloan.pager.WriteLoanInfo$1 -> com.rongdai.iwantloan.pager.a:
    com.rongdai.iwantloan.pager.WriteLoanInfo this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.ConfirmTender -> com.rongdai.managemoney.pager.ConfirmTender:
    android.widget.ImageView backImageButton -> a
    android.widget.TextView titleTextView -> b
    android.widget.TextView canUseMoney -> c
    android.widget.Button recharge -> d
    android.widget.EditText tenderMoney -> e
    android.widget.Button confirmTender -> f
    java.lang.String bmId -> g
    java.lang.String borrowType -> h
    com.rongdai.domain.ConfirmTenderBean confirmTenderBean -> i
    android.content.SharedPreferences sp -> j
    android.widget.TextView small_money -> k
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void getCanUseMoneyFromNet() -> b
    void onClick(android.view.View) -> onClick
    void confirmDataToNet() -> c
    void processData(java.lang.String) -> a
    android.widget.TextView access$0(com.rongdai.managemoney.pager.ConfirmTender) -> a
com.rongdai.managemoney.pager.ConfirmTender$1 -> com.rongdai.managemoney.pager.a:
    com.rongdai.managemoney.pager.ConfirmTender this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.ConfirmTender$1$1 -> com.rongdai.managemoney.pager.b:
    com.rongdai.managemoney.pager.ConfirmTender$1 this$1 -> a
com.rongdai.managemoney.pager.ConfirmTender$2 -> com.rongdai.managemoney.pager.c:
    com.rongdai.managemoney.pager.ConfirmTender this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.DirectionRaise -> com.rongdai.managemoney.pager.DirectionRaise:
    android.widget.ListView mListView -> a
    android.widget.ImageView backImageButton -> b
    android.widget.TextView titleTextView -> c
    android.widget.ImageView serviceImageButton -> d
    android.widget.FrameLayout fl -> e
    android.view.View loadingPager -> f
    android.view.View emptyPager -> g
    android.view.View errorPager -> h
    android.view.View listviewPager -> i
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> j
    int refreshState -> k
    int pagerNumber -> l
    android.widget.Button errorButton -> m
    java.lang.String areaType -> n
    com.rongdai.domain.ManagerMoneyGoods managerMoneyGoods -> o
    com.rongdai.domain.DrectionRaiseBean drectionRaiseBean -> p
    com.rongdai.domain.ChinaUniteCarTrade chinaUniteCarTrade -> q
    java.util.List tempBean -> r
    java.util.List recommendProjectData -> s
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void getDataFromNet() -> b
    void processInfo(java.lang.String) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    void onHeaderRefresh(com.rongdai.view.PullToRefreshView) -> b
    void onFooterRefresh(com.rongdai.view.PullToRefreshView) -> a
    java.util.List access$0(com.rongdai.managemoney.pager.DirectionRaise) -> a
    android.widget.FrameLayout access$1(com.rongdai.managemoney.pager.DirectionRaise) -> b
    android.view.View access$2(com.rongdai.managemoney.pager.DirectionRaise) -> c
com.rongdai.managemoney.pager.DirectionRaise$1 -> com.rongdai.managemoney.pager.d:
    com.rongdai.managemoney.pager.DirectionRaise this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.DirectionRaise$DirectionRaiseAdapter -> com.rongdai.managemoney.pager.e:
    android.widget.TextView companyTextView -> b
    android.widget.TextView consumeTextView -> c
    android.widget.TextView timingTextView -> d
    android.widget.TextView dingxiangTextView -> e
    android.widget.TextView titleTextView -> f
    android.widget.TextView moneyTextView -> g
    android.widget.TextView timeTextView -> h
    android.widget.TextView harvestTextView -> i
    com.rongdai.view.RoundProgressBar mRoundProgressBar -> j
    com.rongdai.managemoney.pager.DirectionRaise this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.rongdai.managemoney.pager.OtherProject -> com.rongdai.managemoney.pager.f:
    java.util.Timer timer -> d
    java.util.TimerTask task -> c
    boolean falg -> e
    boolean contentFalg -> f
    android.support.v4.view.ViewPager mViewPager -> g
    java.util.List imageViewList -> h
    android.view.View view -> i
    android.view.View loadingPage -> j
    android.view.View emptyPage -> k
    android.view.View errorPage -> l
    android.view.View listViewPage -> m
    android.widget.FrameLayout fl -> n
    android.widget.Button errorButton -> o
    int cacheflags -> p
    int pagerNumber -> q
    int HEADER -> r
    int refreshState -> s
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> t
    java.util.List listStr -> u
    com.rongdai.view.MyListView mListView -> v
    com.rongdai.domain.OtherProjectBean otherProjectBean -> w
    com.rongdai.domain.TopImage topImage -> x
    com.rongdai.managemoney.pager.OtherProject$OtherProjectAdapter adapter -> y
    int currentPage -> z
    com.nostra13.universalimageloader.core.ImageLoader mImageLoader -> A
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> B
    com.rongdai.managemoney.pager.OtherProject$MyPagerAdapter pagerAdapter -> C
    android.view.View initView(android.content.Context) -> a
    void initData() -> b
    void getImageDateFromNet() -> d
    void processImageData(java.lang.String) -> b
    void getDataFromNet(int,com.rongdai.view.PullToRefreshView) -> a
    void processData(java.lang.String) -> a
    void showList() -> e
    void showViewPager() -> f
    void onClick(android.view.View) -> onClick
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void showViewPageToTime() -> c
    java.util.List access$0(com.rongdai.managemoney.pager.OtherProject) -> a
    void access$1(com.rongdai.managemoney.pager.OtherProject,android.support.v4.view.ViewPager) -> a
    void access$2(com.rongdai.managemoney.pager.OtherProject) -> b
    com.rongdai.domain.OtherProjectBean access$3(com.rongdai.managemoney.pager.OtherProject) -> c
    com.rongdai.domain.TopImage access$4(com.rongdai.managemoney.pager.OtherProject) -> d
    com.nostra13.universalimageloader.core.ImageLoader access$5(com.rongdai.managemoney.pager.OtherProject) -> e
    com.nostra13.universalimageloader.core.DisplayImageOptions access$6(com.rongdai.managemoney.pager.OtherProject) -> f
    void access$7(com.rongdai.managemoney.pager.OtherProject,java.lang.String) -> a
    int access$8(com.rongdai.managemoney.pager.OtherProject) -> g
    android.widget.FrameLayout access$9(com.rongdai.managemoney.pager.OtherProject) -> h
    android.view.View access$10(com.rongdai.managemoney.pager.OtherProject) -> i
    android.support.v4.view.ViewPager access$11(com.rongdai.managemoney.pager.OtherProject) -> j
    com.rongdai.managemoney.pager.OtherProject$OtherProjectAdapter access$12(com.rongdai.managemoney.pager.OtherProject) -> k
com.rongdai.managemoney.pager.OtherProject$1 -> com.rongdai.managemoney.pager.g:
    com.rongdai.managemoney.pager.OtherProject this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.OtherProject$2 -> com.rongdai.managemoney.pager.h:
    com.rongdai.managemoney.pager.OtherProject this$0 -> a
    int val$refreshState -> b
    com.rongdai.view.PullToRefreshView val$mPullToRefreshView -> c
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.OtherProject$3 -> com.rongdai.managemoney.pager.i:
    com.rongdai.managemoney.pager.OtherProject this$0 -> a
    void run() -> run
    com.rongdai.managemoney.pager.OtherProject access$0(com.rongdai.managemoney.pager.OtherProject$3) -> a
com.rongdai.managemoney.pager.OtherProject$3$1 -> com.rongdai.managemoney.pager.j:
    com.rongdai.managemoney.pager.OtherProject$3 this$1 -> a
    void run() -> run
com.rongdai.managemoney.pager.OtherProject$MyPagerAdapter -> com.rongdai.managemoney.pager.k:
    com.rongdai.managemoney.pager.OtherProject this$0 -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    com.rongdai.managemoney.pager.OtherProject access$0(com.rongdai.managemoney.pager.OtherProject$MyPagerAdapter) -> a
com.rongdai.managemoney.pager.OtherProject$MyPagerAdapter$1 -> com.rongdai.managemoney.pager.l:
    com.rongdai.managemoney.pager.OtherProject$MyPagerAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.rongdai.managemoney.pager.OtherProject$OtherProjectAdapter -> com.rongdai.managemoney.pager.m:
    android.widget.TextView companyTextView -> b
    android.widget.TextView twoCompanyTextView -> c
    android.widget.TextView consumeTextView -> d
    android.widget.TextView twoConsumeTextView -> e
    android.widget.TextView timingTextView -> f
    android.widget.TextView twoTimingTextView -> g
    android.widget.TextView dingxiangTextView -> h
    android.widget.TextView twoDingxiangTextView -> i
    android.widget.TextView titleTextView -> j
    android.widget.TextView twoTitleTextView -> k
    android.widget.TextView moneyTextView -> l
    android.widget.TextView twoMoneyTextView -> m
    android.widget.TextView timeTextView -> n
    android.widget.TextView twoTimeTextView -> o
    android.widget.TextView harvestTextView -> p
    android.widget.TextView twoHarvestTextView -> q
    com.rongdai.view.RoundProgressBar mRoundProgressBar -> r
    com.rongdai.view.RoundProgressBar twoRoundProgressBar -> s
    android.widget.RelativeLayout mRelativeLayout -> t
    android.widget.TextView title -> u
    android.widget.LinearLayout oneLinearLayout -> v
    android.widget.LinearLayout twoLinearLayout -> w
    com.rongdai.managemoney.pager.OtherProject this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
com.rongdai.managemoney.pager.ProjectDetail -> com.rongdai.managemoney.pager.ProjectDetail:
    com.rongdai.managemoney.pager.ProjectInfo projectInfo -> b
    int time -> c
    java.util.Timer timer -> d
    boolean flag -> e
    android.widget.TextView companyTextView -> f
    android.widget.TextView consumeTextView -> g
    android.widget.TextView timingTextView -> h
    android.widget.TextView dingxiangTextView -> i
    android.widget.TextView titleTextView -> j
    android.widget.TextView moneyTextView -> k
    android.widget.TextView timeTextView -> l
    android.widget.TextView harvestTextView -> m
    com.rongdai.view.RoundProgressBar mRoundProgressBar -> n
    android.widget.RadioGroup mRadioGroup -> o
    android.widget.RadioButton infoRadioButton -> p
    android.widget.RadioButton modeRadioButton -> q
    android.widget.RadioButton dataRadioButton -> r
    android.widget.RadioButton caseRadioButton -> s
    android.widget.FrameLayout fl -> t
    android.widget.ImageView backImageButton -> u
    android.widget.TextView pagerTitle -> v
    android.widget.ImageView serviceImageButton -> w
    com.rongdai.managemoney.pager.RepaymentMode repaymentMode -> x
    com.rongdai.managemoney.pager.TenderCase tenderCase -> y
    com.rongdai.managemoney.pager.RelatedDataPager mRelatedDataPager -> z
    android.widget.TextView project_detail_info_residue_time -> A
    android.widget.Button project_detail_info_immediately -> B
    com.rongdai.domain.RecommendProjectBean$RecommendProjectData recommendProjectBean -> C
    int repaymentModeNumber -> D
    int tenderCaseNumber -> E
    int mRelatedDataPagerNumber -> F
    int flags -> G
    int refreshState -> H
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> I
    android.widget.LinearLayout mLinearLayout -> J
    int TIME -> K
    java.lang.Thread subThread -> L
    long td -> M
    java.lang.Long ltime -> N
    java.lang.Long stime -> O
    long subTime -> P
    android.os.Handler handlerTime -> Q
    android.os.Handler handler -> a
    java.lang.String endTime -> R
    java.lang.String startTime -> S
    int maxP -> T
    int currentP -> U
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> o
    void showProjectInfo() -> p
    void onClick(android.view.View) -> onClick
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void onDestroy() -> onDestroy
    void onHeaderRefresh(com.rongdai.view.PullToRefreshView) -> b
    void onFooterRefresh(com.rongdai.view.PullToRefreshView) -> a
    void getTime() -> a
    void changeButton() -> b
    java.lang.String formatData(java.lang.String) -> a
    long DataToTime(java.lang.String) -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.lang.String access$0() -> c
    void access$1(java.lang.String) -> c
    java.lang.String access$2() -> d
    void access$3(java.lang.String) -> d
    void access$4(java.lang.Long) -> a
    void access$5(java.lang.Long) -> b
    void access$6(long) -> a
    java.lang.Long access$7() -> e
    long access$8() -> f
    java.lang.Long access$9() -> g
    void access$10(long) -> b
    long access$11() -> h
    android.widget.TextView access$12() -> i
    android.widget.Button access$13() -> j
    void access$14(java.lang.Thread) -> a
    java.lang.Thread access$15() -> k
    boolean access$16() -> l
    int access$17() -> m
    android.os.Handler access$18() -> n
com.rongdai.managemoney.pager.ProjectDetail$1 -> com.rongdai.managemoney.pager.n:
    void handleMessage(android.os.Message) -> handleMessage
com.rongdai.managemoney.pager.ProjectDetail$2 -> com.rongdai.managemoney.pager.o:
    void handleMessage(android.os.Message) -> handleMessage
com.rongdai.managemoney.pager.ProjectDetail$3 -> com.rongdai.managemoney.pager.p:
    void run() -> run
com.rongdai.managemoney.pager.ProjectDetail$MyThread -> com.rongdai.managemoney.pager.q:
    void run() -> run
com.rongdai.managemoney.pager.ProjectInfo -> com.rongdai.managemoney.pager.r:
    android.view.View view -> c
    android.widget.TextView loanTextView -> d
    android.widget.TextView sexTextView -> e
    android.widget.TextView ageTextView -> f
    android.widget.TextView marriedTextView -> g
    android.widget.TextView cultureTextView -> h
    android.widget.TextView familyTextView -> i
    android.widget.TextView descriptionTextView -> j
    android.widget.TextView worktimeTextView -> k
    android.widget.TextView insuranceTextView -> l
    android.widget.TextView workTextView -> m
    android.widget.TextView timeTextView -> n
    android.widget.TextView job_titleTextView -> o
    android.widget.TextView houseTextView -> p
    android.widget.TextView localTextView -> q
    android.widget.TextView incomeTextView -> r
    android.widget.TextView recordTextView -> s
    android.widget.TextView blueCardTextView -> t
    android.widget.TextView reportTextView -> u
    android.widget.TextView successTextView -> v
    android.widget.TextView repaymentTextView -> w
    android.widget.TextView repaymentNumberTextView -> x
    android.widget.TextView noGetTextView -> y
    android.widget.TextView projectNameTextView -> z
    android.widget.TextView timeMoneyTextView -> A
    android.widget.TextView reputationTextView -> B
    android.widget.TextView getTimeTextView -> C
    android.widget.TextView lixiTextView -> D
    android.widget.TextView yongtuTextView -> E
    android.widget.TextView stopTimeTextView -> F
    android.widget.TextView companyCaseTextView -> G
    java.lang.String projectId -> H
    int pagerNumber -> I
    com.rongdai.domain.ProjectInfoBean$projectInfoData projectInfoData -> J
    com.rongdai.domain.ProjectInfoBean projectInfoBean -> K
    int HEADER -> L
    int refreshState -> M
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> N
    java.lang.String descriptionText -> O
    java.lang.String proSituation -> P
    android.view.View initView(android.content.Context) -> a
    void initData() -> b
    void getDataFromNet(int,com.rongdai.view.PullToRefreshView) -> a
    void processData(java.lang.String) -> a
    void showInfo() -> d
    java.lang.String getProjectId() -> c
    void setProjectId(java.lang.String) -> b
com.rongdai.managemoney.pager.ProjectInfo$1 -> com.rongdai.managemoney.pager.s:
    com.rongdai.managemoney.pager.ProjectInfo this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.RecommendProject -> com.rongdai.managemoney.pager.t:
    int item -> c
    int count -> d
    boolean falg -> e
    boolean contentFalg -> f
    long time -> g
    java.util.Timer timer -> h
    java.util.TimerTask task -> a
    java.util.Timer timerTwo -> i
    java.util.TimerTask taskTwo -> b
    android.view.View RootView -> j
    android.view.View loadingPage -> k
    android.view.View emptyPage -> l
    android.view.View errorPage -> m
    android.view.View listViewPage -> n
    android.widget.FrameLayout fl -> o
    android.widget.Button errorButton -> p
    android.content.Context mContext -> q
    com.rongdai.view.MyViewPager mViewPager -> r
    java.util.List imageViewList -> s
    int pagerNumber -> t
    int refreshState -> u
    int HEADER -> v
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> w
    int cacheflags -> x
    int currentPage -> y
    android.widget.TextView lastTimeTextView -> z
    android.widget.Button notifyButton -> A
    com.rongdai.view.MyListView mListView -> B
    java.util.List borrowData -> C
    java.util.List tempBorrowData -> D
    com.rongdai.domain.RecommendProjectBean recommendProjectBean -> E
    com.rongdai.domain.TopImage topImage -> F
    com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter adapter -> G
    android.os.Handler handlerTime -> H
    java.lang.Long min -> I
    java.lang.String minData -> J
    java.lang.String replaceStr -> K
    int TIME -> L
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> M
    com.nostra13.universalimageloader.core.ImageLoader mImageLoader -> N
    java.lang.String minStr -> O
    com.rongdai.managemoney.pager.RecommendProject$MyPagerAdapter pagerAdapter -> P
    void initView(android.content.Context) -> a
    void initData() -> a
    void getMinTimeFromNet() -> m
    void processMinTime(java.lang.String) -> a
    void getImageDateFromNet() -> n
    void processImageData(java.lang.String) -> b
    void getDataFromNet(int,com.rongdai.view.PullToRefreshView) -> a
    void processData(java.lang.String) -> c
    void isRepleceData(java.lang.String) -> d
    void showListView() -> o
    android.view.View getRootView() -> b
    void showTime() -> c
    void showViewPager() -> p
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void showViewPageToTime() -> d
    void onClick(android.view.View) -> onClick
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void requestDataToNet() -> e
    void getTime() -> f
    java.lang.Long access$0() -> g
    void access$1(long) -> a
    java.util.List access$2(com.rongdai.managemoney.pager.RecommendProject) -> a
    android.content.Context access$3(com.rongdai.managemoney.pager.RecommendProject) -> b
    void access$4(com.rongdai.managemoney.pager.RecommendProject,com.rongdai.view.MyViewPager) -> a
    void access$5(com.rongdai.managemoney.pager.RecommendProject) -> c
    void access$6(android.widget.TextView) -> a
    void access$7(com.rongdai.managemoney.pager.RecommendProject,android.widget.Button) -> a
    java.util.List access$8(com.rongdai.managemoney.pager.RecommendProject) -> d
    java.lang.String access$9() -> h
    android.widget.TextView access$10() -> i
    android.widget.Button access$11(com.rongdai.managemoney.pager.RecommendProject) -> e
    com.rongdai.domain.TopImage access$12(com.rongdai.managemoney.pager.RecommendProject) -> f
    com.nostra13.universalimageloader.core.ImageLoader access$13(com.rongdai.managemoney.pager.RecommendProject) -> g
    com.nostra13.universalimageloader.core.DisplayImageOptions access$14(com.rongdai.managemoney.pager.RecommendProject) -> h
    void access$15(com.rongdai.managemoney.pager.RecommendProject,com.nostra13.universalimageloader.core.ImageLoader) -> a
    void access$16(com.rongdai.managemoney.pager.RecommendProject,com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    void access$17(com.rongdai.managemoney.pager.RecommendProject,android.view.View) -> a
    void access$18(com.rongdai.managemoney.pager.RecommendProject,android.view.View) -> b
    void access$19(com.rongdai.managemoney.pager.RecommendProject,android.view.View) -> c
    void access$20(com.rongdai.managemoney.pager.RecommendProject,android.view.View) -> d
    void access$21(com.rongdai.managemoney.pager.RecommendProject,android.view.View) -> e
    android.view.View access$22(com.rongdai.managemoney.pager.RecommendProject) -> i
    android.view.View access$23(com.rongdai.managemoney.pager.RecommendProject) -> j
    android.view.View access$24(com.rongdai.managemoney.pager.RecommendProject) -> k
    android.view.View access$25(com.rongdai.managemoney.pager.RecommendProject) -> l
    void access$26(com.rongdai.managemoney.pager.RecommendProject,com.rongdai.view.MyListView) -> a
    void access$27(com.rongdai.managemoney.pager.RecommendProject,android.widget.Button) -> b
    android.view.View access$28(com.rongdai.managemoney.pager.RecommendProject) -> m
    void access$29(com.rongdai.managemoney.pager.RecommendProject,android.widget.FrameLayout) -> a
    android.widget.FrameLayout access$30(com.rongdai.managemoney.pager.RecommendProject) -> n
    long access$31() -> j
    com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter access$32(com.rongdai.managemoney.pager.RecommendProject) -> o
    com.rongdai.view.MyViewPager access$33(com.rongdai.managemoney.pager.RecommendProject) -> p
    int access$34() -> k
    android.os.Handler access$35() -> l
com.rongdai.managemoney.pager.RecommendProject$1 -> com.rongdai.managemoney.pager.u:
    void handleMessage(android.os.Message) -> handleMessage
com.rongdai.managemoney.pager.RecommendProject$2 -> com.rongdai.managemoney.pager.v:
    com.rongdai.managemoney.pager.RecommendProject this$0 -> a
    void run() -> run
com.rongdai.managemoney.pager.RecommendProject$3 -> com.rongdai.managemoney.pager.w:
    com.rongdai.managemoney.pager.RecommendProject this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.RecommendProject$4 -> com.rongdai.managemoney.pager.x:
    com.rongdai.managemoney.pager.RecommendProject this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.RecommendProject$5 -> com.rongdai.managemoney.pager.y:
    com.rongdai.managemoney.pager.RecommendProject this$0 -> a
    int val$refreshState -> b
    com.rongdai.view.PullToRefreshView val$mPullToRefreshView -> c
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.RecommendProject$6 -> com.rongdai.managemoney.pager.z:
    com.rongdai.managemoney.pager.RecommendProject this$0 -> a
    void run() -> run
    com.rongdai.managemoney.pager.RecommendProject access$0(com.rongdai.managemoney.pager.RecommendProject$6) -> a
com.rongdai.managemoney.pager.RecommendProject$6$1 -> com.rongdai.managemoney.pager.aa:
    com.rongdai.managemoney.pager.RecommendProject$6 this$1 -> a
    void run() -> run
com.rongdai.managemoney.pager.RecommendProject$7 -> com.rongdai.managemoney.pager.ab:
    com.rongdai.managemoney.pager.RecommendProject this$0 -> a
    void run() -> run
    com.rongdai.managemoney.pager.RecommendProject access$0(com.rongdai.managemoney.pager.RecommendProject$7) -> a
com.rongdai.managemoney.pager.RecommendProject$7$1 -> com.rongdai.managemoney.pager.ac:
    com.rongdai.managemoney.pager.RecommendProject$7 this$1 -> a
    void run() -> run
com.rongdai.managemoney.pager.RecommendProject$8 -> com.rongdai.managemoney.pager.ad:
    com.rongdai.managemoney.pager.RecommendProject this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.RecommendProject$9 -> com.rongdai.managemoney.pager.ae:
    void run() -> run
com.rongdai.managemoney.pager.RecommendProject$MyPagerAdapter -> com.rongdai.managemoney.pager.af:
    com.rongdai.managemoney.pager.RecommendProject this$0 -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    com.rongdai.managemoney.pager.RecommendProject access$0(com.rongdai.managemoney.pager.RecommendProject$MyPagerAdapter) -> a
com.rongdai.managemoney.pager.RecommendProject$MyPagerAdapter$1 -> com.rongdai.managemoney.pager.ag:
    com.rongdai.managemoney.pager.RecommendProject$MyPagerAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter -> com.rongdai.managemoney.pager.ah:
    android.widget.TextView companyTextView -> b
    android.widget.TextView consumeTextView -> c
    android.widget.TextView timingTextView -> d
    android.widget.TextView dingxiangTextView -> e
    android.widget.TextView titleTextView -> f
    android.widget.TextView moneyTextView -> g
    android.widget.TextView timeTextView -> h
    android.widget.TextView harvestTextView -> i
    com.rongdai.view.RoundProgressBar mRoundProgressBar -> j
    android.view.View view -> k
    com.rongdai.managemoney.pager.RecommendProject this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.rongdai.managemoney.pager.RecommendProject access$0(com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter) -> a
com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter$1 -> com.rongdai.managemoney.pager.ai:
    com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter$2 -> com.rongdai.managemoney.pager.aj:
    com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter$3 -> com.rongdai.managemoney.pager.ak:
    com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter$4 -> com.rongdai.managemoney.pager.al:
    com.rongdai.managemoney.pager.RecommendProject$RecommendBaseAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.rongdai.managemoney.pager.RelatedDataPager -> com.rongdai.managemoney.pager.am:
    android.view.View view -> c
    java.lang.String projectId -> d
    int pagerNumber -> e
    int HEADER -> f
    int refreshState -> g
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> h
    com.rongdai.view.MyGrideView mGridView -> i
    com.rongdai.domain.ImageBean mImageBean -> j
    com.nostra13.universalimageloader.core.ImageLoader mImageLoader -> k
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> l
    android.view.View initView(android.content.Context) -> a
    void initData() -> b
    void getDataFromNet(int,com.rongdai.view.PullToRefreshView) -> a
    void processData(java.lang.String) -> a
    void showGrideView() -> d
    java.lang.String getProjectId() -> c
    void setProjectId(java.lang.String) -> b
    com.rongdai.domain.ImageBean access$0(com.rongdai.managemoney.pager.RelatedDataPager) -> a
    com.nostra13.universalimageloader.core.ImageLoader access$1(com.rongdai.managemoney.pager.RelatedDataPager) -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions access$2(com.rongdai.managemoney.pager.RelatedDataPager) -> c
com.rongdai.managemoney.pager.RelatedDataPager$1 -> com.rongdai.managemoney.pager.an:
    com.rongdai.managemoney.pager.RelatedDataPager this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.RelatedDataPager$MyGrideAdapter -> com.rongdai.managemoney.pager.ao:
    android.widget.ImageView imageView -> b
    android.widget.TextView textView -> c
    com.rongdai.managemoney.pager.RelatedDataPager this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.rongdai.managemoney.pager.RepaymentMode -> com.rongdai.managemoney.pager.ap:
    android.view.View view -> c
    com.rongdai.view.MyListView mListView -> d
    java.lang.String projectId -> e
    com.rongdai.domain.RepaymentModeBean repaymentModeBean -> f
    java.util.List tempListInfo -> g
    int pagerNumber -> h
    int HEADER -> i
    int refreshState -> j
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> k
    com.rongdai.managemoney.pager.RepaymentMode$RepaymentModeAdapter adapter -> l
    android.view.View initView(android.content.Context) -> a
    void initData() -> b
    void getDataFromNet(int,com.rongdai.view.PullToRefreshView) -> a
    void processData(java.lang.String) -> a
    void showList() -> d
    java.lang.String getProjectId() -> c
    void setProjectId(java.lang.String) -> b
    java.util.List access$0(com.rongdai.managemoney.pager.RepaymentMode) -> a
com.rongdai.managemoney.pager.RepaymentMode$1 -> com.rongdai.managemoney.pager.aq:
    com.rongdai.managemoney.pager.RepaymentMode this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.RepaymentMode$RepaymentModeAdapter -> com.rongdai.managemoney.pager.ar:
    android.widget.TextView timeTextView -> b
    android.widget.TextView modeTextView -> c
    android.widget.TextView moneyTextView -> d
    com.rongdai.managemoney.pager.RepaymentMode this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.rongdai.managemoney.pager.TendWebPager -> com.rongdai.managemoney.pager.TendWebPager:
    android.webkit.WebView wv -> a
    java.lang.String data -> b
    android.widget.ImageView imageButton -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onClick(android.view.View) -> onClick
com.rongdai.managemoney.pager.TenderCase -> com.rongdai.managemoney.pager.as:
    android.view.View view -> c
    com.rongdai.view.MyListView mListView -> d
    android.widget.TextView titleTime -> e
    android.widget.TextView titleMode -> f
    android.widget.TextView moneyTime -> g
    java.lang.String projectId -> h
    com.rongdai.domain.TenderCaseBean tenderCaseBean -> i
    java.util.List listInfo -> j
    int pagerNumber -> k
    int HEADER -> l
    int refreshState -> m
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> n
    com.rongdai.managemoney.pager.TenderCase$RepaymentModeAdapter adapter -> o
    android.view.View initView(android.content.Context) -> a
    void initData() -> b
    void getDataFromNet(int,com.rongdai.view.PullToRefreshView) -> a
    void processData(java.lang.String) -> a
    void showListView() -> d
    java.lang.String getProjectId() -> c
    void setProjectId(java.lang.String) -> b
    java.util.List access$0(com.rongdai.managemoney.pager.TenderCase) -> a
com.rongdai.managemoney.pager.TenderCase$1 -> com.rongdai.managemoney.pager.at:
    com.rongdai.managemoney.pager.TenderCase this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.managemoney.pager.TenderCase$RepaymentModeAdapter -> com.rongdai.managemoney.pager.au:
    android.widget.TextView timeTextView -> b
    android.widget.TextView modeTextView -> c
    android.widget.TextView moneyTextView -> d
    java.lang.String userName -> e
    com.rongdai.managemoney.pager.TenderCase this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.rongdai.pager.IWantLoan -> com.rongdai.c.a:
    android.view.View view -> c
    android.content.Context mContext -> d
    android.view.View loadingPage -> e
    android.view.View emptyPage -> f
    android.view.View errorPage -> g
    android.view.View listViewPage -> h
    android.widget.FrameLayout fl -> i
    android.widget.Button errorButton -> j
    int refreshState -> k
    int pagerNumber -> l
    int cacheFlags -> m
    boolean falg -> n
    android.widget.ListView mListView -> o
    com.rongdai.domain.loanProjectList listInfo -> p
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> q
    java.util.List listData -> r
    java.util.List tempListData -> s
    com.rongdai.pager.IWantLoan$myAdapter adapter -> t
    android.view.View initView(android.content.Context) -> a
    void initData() -> b
    void getDataFromNet() -> c
    void processData(java.lang.String) -> a
    void isRepleceData(java.lang.String) -> b
    void showListView() -> d
    void onHeaderRefresh(com.rongdai.view.PullToRefreshView) -> b
    void onFooterRefresh(com.rongdai.view.PullToRefreshView) -> a
    void onClick(android.view.View) -> onClick
    java.util.List access$0(com.rongdai.pager.IWantLoan) -> a
    android.content.Context access$1(com.rongdai.pager.IWantLoan) -> b
    android.widget.FrameLayout access$2(com.rongdai.pager.IWantLoan) -> c
    android.view.View access$3(com.rongdai.pager.IWantLoan) -> d
com.rongdai.pager.IWantLoan$1 -> com.rongdai.c.b:
    com.rongdai.pager.IWantLoan this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.pager.IWantLoan$myAdapter -> com.rongdai.c.c:
    android.widget.Button mButton -> b
    android.widget.TextView loanTitleTextView -> c
    android.widget.TextView localTextView -> d
    android.widget.TextView timeTextView -> e
    android.widget.TextView speedTextView -> f
    android.widget.TextView costingTextView -> g
    com.rongdai.pager.IWantLoan this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.rongdai.pager.IWantLoan access$0(com.rongdai.pager.IWantLoan$myAdapter) -> a
com.rongdai.pager.IWantLoan$myAdapter$1 -> com.rongdai.c.d:
    com.rongdai.pager.IWantLoan$myAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.rongdai.pager.ManagerMenoyCenter -> com.rongdai.c.e:
    android.view.View view -> c
    java.util.List imageViewList -> d
    android.widget.RadioButton recommendRadioButton -> e
    android.widget.RadioButton otherRadioButton -> f
    android.widget.FrameLayout fl -> g
    android.widget.RadioGroup mRadioGroup -> h
    com.rongdai.managemoney.pager.RecommendProject recommendProject -> i
    com.rongdai.managemoney.pager.OtherProject otherProject -> j
    com.rongdai.view.PullToRefreshView mPullToRefreshView -> k
    int refreshState -> l
    int flags -> m
    android.view.WindowManager wm -> n
    int width -> o
    android.view.View initView(android.content.Context) -> a
    void initData() -> b
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void onHeaderRefresh(com.rongdai.view.PullToRefreshView) -> b
    void onFooterRefresh(com.rongdai.view.PullToRefreshView) -> a
com.rongdai.pager.NoticConsult -> com.rongdai.c.f:
    android.widget.RadioGroup rg_notice_consult -> c
    android.widget.RadioButton notic_webnotic -> d
    android.widget.RadioButton notic_consult -> e
    android.widget.ListView lv_notice_consult -> f
    com.rongdai.pager.NoticConsult$MyAdapter adapter -> g
    java.util.List noticConsultInfos -> h
    java.util.List noticConsultInfos2 -> i
    com.rongdai.view.PullToRefreshView refreshView -> j
    android.view.WindowManager wm -> k
    int width -> l
    int type -> m
    boolean fromRefresh -> n
    int pagerNumber -> o
    android.view.View view -> p
    android.os.Handler handler -> q
    android.view.View initView(android.content.Context) -> a
    void initData() -> b
    void onSubThread() -> d
    void refreshListener() -> c
    void getWebnoticConsult(int,int) -> a
    void getMoreWebnoticConsult(int,int) -> b
    void processData(java.lang.String) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onFooterRefresh(com.rongdai.view.PullToRefreshView) -> a
    void onHeaderRefresh(com.rongdai.view.PullToRefreshView) -> b
    java.util.List access$0(com.rongdai.pager.NoticConsult) -> a
    void access$1(com.rongdai.pager.NoticConsult,int) -> a
    int access$2(com.rongdai.pager.NoticConsult) -> b
    void access$3(com.rongdai.pager.NoticConsult,int,int) -> a
    com.rongdai.pager.NoticConsult$MyAdapter access$4(com.rongdai.pager.NoticConsult) -> c
    boolean access$5(com.rongdai.pager.NoticConsult) -> d
    com.rongdai.view.PullToRefreshView access$6(com.rongdai.pager.NoticConsult) -> e
    void access$7(com.rongdai.pager.NoticConsult,boolean) -> a
    void access$8(com.rongdai.pager.NoticConsult,java.util.List) -> a
    java.util.List access$9(com.rongdai.pager.NoticConsult) -> f
    void access$10(com.rongdai.pager.NoticConsult,java.util.List) -> b
com.rongdai.pager.NoticConsult$1 -> com.rongdai.c.g:
    com.rongdai.pager.NoticConsult this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.rongdai.pager.NoticConsult$2 -> com.rongdai.c.h:
    com.rongdai.pager.NoticConsult this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.rongdai.pager.NoticConsult$3 -> com.rongdai.c.i:
    com.rongdai.pager.NoticConsult this$0 -> a
    int val$type -> b
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    com.rongdai.pager.NoticConsult access$0(com.rongdai.pager.NoticConsult$3) -> a
com.rongdai.pager.NoticConsult$3$1 -> com.rongdai.c.j:
    com.rongdai.pager.NoticConsult$3 this$1 -> a
    int val$type -> b
    void update() -> a
com.rongdai.pager.NoticConsult$3$2 -> com.rongdai.c.k:
    com.rongdai.pager.NoticConsult$3 this$1 -> a
    void update() -> a
com.rongdai.pager.NoticConsult$4 -> com.rongdai.c.l:
    com.rongdai.pager.NoticConsult this$0 -> a
    int val$type -> b
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    com.rongdai.pager.NoticConsult access$0(com.rongdai.pager.NoticConsult$4) -> a
com.rongdai.pager.NoticConsult$4$1 -> com.rongdai.c.m:
    com.rongdai.pager.NoticConsult$4 this$1 -> a
    int val$type -> b
    void update() -> a
com.rongdai.pager.NoticConsult$4$2 -> com.rongdai.c.n:
    com.rongdai.pager.NoticConsult$4 this$1 -> a
    void update() -> a
com.rongdai.pager.NoticConsult$MyAdapter -> com.rongdai.c.o:
    com.rongdai.pager.NoticConsult this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.rongdai.pager.PersonCenter -> com.rongdai.c.p:
    android.widget.RelativeLayout goto_setting -> c
    android.widget.RelativeLayout goto_security_center -> d
    android.widget.RelativeLayout goto_MyUser_relativelayout -> e
    android.widget.RelativeLayout goto_MyRedEnvelope -> f
    android.widget.RelativeLayout goto_recentdeal -> g
    android.widget.RelativeLayout goto_MoneyRecord -> h
    android.widget.RelativeLayout goto_InvestmentProject -> i
    android.widget.LinearLayout check_login -> j
    android.widget.LinearLayout check_hf_login -> k
    android.widget.Button pay_button -> l
    android.widget.Button getmoney_button -> m
    android.widget.TextView queryBalance_textview -> n
    android.widget.TextView user_textview -> o
    android.widget.TextView earn_textview -> p
    android.widget.TextView investmentCount_textview -> q
    android.widget.TextView waitEarn_textview -> r
    android.widget.TextView waitInvestmentCount_textview -> s
    java.lang.String check_login_string -> t
    java.lang.String check_hf_login_string -> u
    android.view.View initView(android.content.Context) -> a
    void initData() -> b
    void onClick(android.view.View) -> onClick
    void showShare() -> c
    void queryBalanceDo() -> d
    android.widget.TextView access$0(com.rongdai.pager.PersonCenter) -> a
    android.widget.TextView access$1(com.rongdai.pager.PersonCenter) -> b
    android.widget.TextView access$2(com.rongdai.pager.PersonCenter) -> c
    android.widget.TextView access$3(com.rongdai.pager.PersonCenter) -> d
    android.widget.TextView access$4(com.rongdai.pager.PersonCenter) -> e
com.rongdai.pager.PersonCenter$1 -> com.rongdai.c.q:
    com.rongdai.pager.PersonCenter this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.rongdai.pager.PersonCenter$1$1 -> com.rongdai.c.r:
    com.rongdai.pager.PersonCenter$1 this$1 -> a
com.rongdai.utils.ConfigFileUtils -> com.rongdai.utils.a:
    android.content.SharedPreferences sp -> a
    java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String) -> a
    void setValue(java.lang.String,java.lang.String,java.lang.String) -> b
    void clearConfigFile(java.lang.String) -> a
com.rongdai.utils.CustomProgressDialog -> com.rongdai.utils.b:
    void onCreate(android.os.Bundle) -> onCreate
com.rongdai.utils.DoubleUtil -> com.rongdai.utils.c:
    java.lang.String getDecimal(double) -> a
com.rongdai.utils.ExitManager -> com.rongdai.utils.d:
    java.util.List activityList -> a
    com.rongdai.utils.ExitManager instance -> b
    com.rongdai.utils.ExitManager getInstance() -> a
    void addActivity(android.app.Activity) -> a
    void exit() -> b
com.rongdai.utils.GetNetTime -> com.rongdai.utils.e:
    java.lang.Long DataToTime(java.lang.String) -> a
    java.lang.String StrToData(java.lang.String) -> b
com.rongdai.utils.ImageLoadUtils -> com.rongdai.utils.f:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> a
    void loadimage(android.content.Context,java.lang.String,android.widget.ImageView) -> a
com.rongdai.utils.ImageOptionsUtils -> com.rongdai.utils.g:
    com.nostra13.universalimageloader.core.DisplayImageOptions getOptions() -> a
com.rongdai.utils.ListViewAdapter -> com.rongdai.utils.h:
    void setListViewHeightBasedOnChildren(android.widget.ListView) -> a
com.rongdai.utils.NetWorkAvaiable -> com.rongdai.utils.i:
    boolean isNetWorkAvaiable(android.content.Context) -> a
com.rongdai.utils.PersonInfoConstans -> com.rongdai.utils.j:
    java.lang.String PERSONINFO -> a
    java.lang.String HNADPASSWORD -> b
    java.lang.String FORGET_HNADPASSWORD -> c
    java.lang.String USER_NAME -> d
    java.lang.String PASSWORD -> e
    java.lang.String PHONE -> f
    java.lang.String IMAGEURI -> g
    java.lang.String RONGDAI_ACCOUNT -> h
    java.lang.String USRCUSTID -> i
    java.lang.String DATE -> j
com.rongdai.utils.ScreenUtils -> com.rongdai.utils.k:
    int[] getScreenDispaly(android.content.Context) -> a
com.rongdai.utils.SwitchPager -> com.rongdai.utils.l:
    android.view.View errorPager -> a
    android.view.View loadingPager -> b
    android.view.View emptyPager -> c
    android.view.View dataPager -> d
    android.app.Activity view -> e
    void loadErrorPager() -> b
    void loadSuccessPager() -> c
    void getView() -> d
    boolean notNull() -> e
    void update() -> a
    android.view.View access$0(com.rongdai.utils.SwitchPager) -> a
    android.view.View access$1(com.rongdai.utils.SwitchPager) -> b
com.rongdai.utils.SwitchPager$1 -> com.rongdai.utils.m:
    com.rongdai.utils.SwitchPager this$0 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.utils.TimeUtils -> com.rongdai.utils.n:
    java.lang.String getFomatTime(long) -> a
com.rongdai.utils.ToastUtils -> com.rongdai.utils.o:
    void show(android.app.Activity,java.lang.String) -> a
com.rongdai.utils.ToastUtils$1 -> com.rongdai.utils.p:
    android.app.Activity val$activity -> a
    java.lang.String val$text -> b
    void run() -> run
com.rongdai.utils.UTFDecoder -> com.rongdai.utils.q:
    java.lang.String UTFDecoder(java.lang.String) -> a
com.rongdai.utils.UserInfoUtils -> com.rongdai.utils.r:
    android.content.SharedPreferences sp -> a
    java.lang.String getUserName(android.content.Context) -> a
    java.lang.String getPassword(android.content.Context) -> b
    java.lang.String getRongdaiAccount(android.content.Context) -> c
    java.lang.String getUsrCustId(android.content.Context) -> d
com.rongdai.utils.XListView -> com.rongdai.utils.XListView:
    float mLastY -> a
    android.widget.Scroller mScroller -> b
    android.widget.AbsListView$OnScrollListener mScrollListener -> c
    com.rongdai.utils.XListView$IXListViewListener mListViewListener -> d
    com.rongdai.utils.XListViewHeader mHeaderView -> e
    android.widget.RelativeLayout mHeaderViewContent -> f
    android.widget.TextView mHeaderTimeView -> g
    int mHeaderViewHeight -> h
    boolean mEnablePullRefresh -> i
    boolean mPullRefreshing -> j
    com.rongdai.utils.XListViewFooter mFooterView -> k
    boolean mEnablePullLoad -> l
    boolean mPullLoading -> m
    boolean mIsFooterReady -> n
    int mTotalItemCount -> o
    int mScrollBack -> p
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> a
    void stopLoadMore() -> b
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void invokeOnScrolling() -> c
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> d
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> e
    void startLoadMore() -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setXListViewListener(com.rongdai.utils.XListView$IXListViewListener) -> setXListViewListener
    android.widget.RelativeLayout access$0(com.rongdai.utils.XListView) -> a
    void access$1(com.rongdai.utils.XListView,int) -> a
    void access$2(com.rongdai.utils.XListView) -> b
com.rongdai.utils.XListView$1 -> com.rongdai.utils.s:
    com.rongdai.utils.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.rongdai.utils.XListView$2 -> com.rongdai.utils.t:
    com.rongdai.utils.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.rongdai.utils.XListView$IXListViewListener -> com.rongdai.utils.u:
    void onRefresh() -> a
    void onLoadMore() -> b
com.rongdai.utils.XListView$OnXScrollListener -> com.rongdai.utils.v:
    void onXScrolling(android.view.View) -> a
com.rongdai.utils.XListViewFooter -> com.rongdai.utils.w:
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    void setState(int) -> setState
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
    void initView(android.content.Context) -> a
com.rongdai.utils.XListViewHeader -> com.rongdai.utils.x:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    int mState -> e
    android.view.animation.Animation mRotateUpAnim -> f
    android.view.animation.Animation mRotateDownAnim -> g
    int ROTATE_ANIM_DURATION -> h
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
com.rongdai.view.CircleHeadView -> com.rongdai.view.CircleHeadView:
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Bitmap getCroppedBitmap(android.graphics.Bitmap,int) -> a
com.rongdai.view.ContentView -> com.rongdai.view.a:
    int baseNum -> b
    int[] screenDispaly -> c
    int d -> d
    java.util.List list -> e
    android.content.Context context -> f
    com.rongdai.view.Drawl drawl -> g
    int distands -> a
    void addChild() -> a
    void setParentView(android.view.ViewGroup) -> setParentView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.rongdai.view.Drawl -> com.rongdai.view.b:
    android.content.Context context -> a
    int mov_x -> b
    int mov_y -> c
    android.graphics.Paint paint -> d
    android.graphics.Canvas canvas -> e
    android.graphics.Bitmap bitmap -> f
    java.util.List list -> g
    java.util.List lineList -> h
    com.rongdai.view.Point currentPoint -> i
    com.rongdai.view.Drawl$GestureCallBack callBack -> j
    java.lang.StringBuilder passWordSb -> k
    java.lang.String passWord -> l
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    com.rongdai.view.Point getPointAt(int,int) -> a
    void clearScreenAndDrawList() -> a
com.rongdai.view.Drawl$GestureCallBack -> com.rongdai.view.c:
    void checkedSuccess() -> a
    void checkedFail() -> b
    void setSuccess() -> c
    void setFail() -> d
com.rongdai.view.MyGrideView -> com.rongdai.view.MyGrideView:
    void onMeasure(int,int) -> onMeasure
com.rongdai.view.MyListView -> com.rongdai.view.MyListView:
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onMeasure(int,int) -> onMeasure
com.rongdai.view.MyViewPager -> com.rongdai.view.MyViewPager:
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
com.rongdai.view.NoScrollViewPager -> com.rongdai.view.NoScrollViewPager:
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.rongdai.view.Point -> com.rongdai.view.d:
    int leftX -> a
    int rightX -> b
    int topY -> c
    int bottomY -> d
    android.widget.ImageView image -> e
    int centerX -> f
    int centerY -> g
    boolean highLighted -> h
    int num -> i
    int getLeftX() -> a
    int getRightX() -> b
    int getTopY() -> c
    int getBottomY() -> d
    int getCenterX() -> e
    int getCenterY() -> f
    boolean isHighLighted() -> g
    void setHighLighted(boolean) -> a
    int getNum() -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.rongdai.view.PullToRefreshView -> com.rongdai.view.PullToRefreshView:
    boolean enablePullTorefresh -> a
    boolean enablePullLoadMoreDataStatus -> b
    int mLastMotionY -> c
    boolean mLock -> d
    android.view.View mHeaderView -> e
    android.view.View mFooterView -> f
    android.widget.AdapterView mAdapterView -> g
    android.widget.ScrollView mScrollView -> h
    int mHeaderViewHeight -> i
    int mFooterViewHeight -> j
    android.widget.ImageView mHeaderImageView -> k
    android.widget.ImageView mFooterImageView -> l
    android.widget.TextView mHeaderTextView -> m
    android.widget.TextView mFooterTextView -> n
    android.widget.TextView mHeaderUpdateTextView -> o
    android.widget.ProgressBar mHeaderProgressBar -> p
    android.widget.ProgressBar mFooterProgressBar -> q
    android.view.LayoutInflater mInflater -> r
    int mHeaderState -> s
    int mFooterState -> t
    int mPullState -> u
    android.view.animation.RotateAnimation mFlipAnimation -> v
    android.view.animation.RotateAnimation mReverseFlipAnimation -> w
    com.rongdai.view.PullToRefreshView$OnFooterRefreshListener mOnFooterRefreshListener -> x
    com.rongdai.view.PullToRefreshView$OnHeaderRefreshListener mOnHeaderRefreshListener -> y
    void init() -> d
    void addHeaderView() -> e
    void addFooterView() -> f
    void onFinishInflate() -> onFinishInflate
    void initContentAdapterView() -> g
    void measureView(android.view.View) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isRefreshViewScroll(int) -> a
    void headerPrepareToRefresh(int) -> b
    void footerPrepareToRefresh(int) -> c
    int changingHeaderViewTopMargin(int) -> d
    void headerRefreshing() -> a
    void footerRefreshing() -> h
    void setHeaderTopMargin(int) -> setHeaderTopMargin
    void onHeaderRefreshComplete() -> b
    void onHeaderRefreshComplete(java.lang.CharSequence) -> a
    void onFooterRefreshComplete() -> c
    void setLastUpdated(java.lang.CharSequence) -> setLastUpdated
    int getHeaderTopMargin() -> getHeaderTopMargin
    void setOnHeaderRefreshListener(com.rongdai.view.PullToRefreshView$OnHeaderRefreshListener) -> setOnHeaderRefreshListener
    void setOnFooterRefreshListener(com.rongdai.view.PullToRefreshView$OnFooterRefreshListener) -> setOnFooterRefreshListener
    void setEnablePullTorefresh(boolean) -> setEnablePullTorefresh
    void setEnablePullLoadMoreDataStatus(boolean) -> setEnablePullLoadMoreDataStatus
com.rongdai.view.PullToRefreshView$OnFooterRefreshListener -> com.rongdai.view.e:
    void onFooterRefresh(com.rongdai.view.PullToRefreshView) -> a
com.rongdai.view.PullToRefreshView$OnHeaderRefreshListener -> com.rongdai.view.f:
    void onHeaderRefresh(com.rongdai.view.PullToRefreshView) -> b
com.rongdai.view.RoundProgressBar -> com.rongdai.view.RoundProgressBar:
    android.graphics.Paint paint -> a
    int roundColor -> b
    int roundProgressColor -> c
    int textColor -> d
    float textSize -> e
    float roundWidth -> f
    int max -> g
    int progress -> h
    boolean textIsDisplayable -> i
    int style -> j
    void onDraw(android.graphics.Canvas) -> onDraw
    int getMax() -> getMax
    void setMax(int) -> setMax
    int getProgress() -> getProgress
    void setProgress(int) -> setProgress
    int getCricleColor() -> getCricleColor
    void setCricleColor(int) -> setCricleColor
    int getCricleProgressColor() -> getCricleProgressColor
    void setCricleProgressColor(int) -> setCricleProgressColor
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getRoundWidth() -> getRoundWidth
    void setRoundWidth(float) -> setRoundWidth
com.rongdai.wxapi.WXEntryActivity -> com.rongdai.wxapi.WXEntryActivity:
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
com.sea_monster.core.BuildConfig -> com.sea_monster.core.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.sea_monster.core.R -> com.sea_monster.core.R:
com.sea_monster.core.R$attr -> com.sea_monster.core.R$attr:
com.sea_monster.core.R$string -> com.sea_monster.core.R$string:
    int app_name -> app_name
com.sea_monster.core.common.BackgroundThread -> com.sea_monster.core.common.BackgroundThread:
    void run() -> run
    void runImpl() -> runImpl
    boolean isInterrupted() -> isInterrupted
com.sea_monster.core.common.Const -> com.sea_monster.core.common.Const:
com.sea_monster.core.common.Const$DEF -> com.sea_monster.core.common.Const$DEF:
    java.lang.String POST_FILE_NAME -> POST_FILE_NAME
    java.lang.String POST_NAME -> POST_NAME
    java.lang.String THREAD_POOL_NAME -> THREAD_POOL_NAME
com.sea_monster.core.common.Const$Parcel -> com.sea_monster.core.common.Const$Parcel:
    int EXIST_SEPARATOR -> EXIST_SEPARATOR
    int NON_SEPARATOR -> NON_SEPARATOR
com.sea_monster.core.common.Const$SYS -> com.sea_monster.core.common.Const$SYS:
    int WORK_QUEUE_MAX_COUNT -> WORK_QUEUE_MAX_COUNT
    int MAX_THREAD_WORKER_COUNT -> MAX_THREAD_WORKER_COUNT
    int DEF_THREAD_WORDER_COUNT -> DEF_THREAD_WORDER_COUNT
    int CREATE_THREAD_TIME_SPAN -> CREATE_THREAD_TIME_SPAN
    int HTTP_MAX_CONN_COUNT -> HTTP_MAX_CONN_COUNT
    int HTTP_MAX_ROUTE_COUNT -> HTTP_MAX_ROUTE_COUNT
    int HTTP_GPRS_TIMEOUT -> HTTP_GPRS_TIMEOUT
    int HTTP_GPRS_SOCKET_TIMEOUT -> HTTP_GPRS_SOCKET_TIMEOUT
    int HTTP_GPRS_RES_SOCKET_TIMEOUT -> HTTP_GPRS_RES_SOCKET_TIMEOUT
    int HTTP_GPRS_SPEED -> HTTP_GPRS_SPEED
    int HTTP_WIFI_SPEED -> HTTP_WIFI_SPEED
    int HTTP_WIFI_TIMEOUT -> HTTP_WIFI_TIMEOUT
    int HTTP_WIFI_SOCKET_TIMEOUT -> HTTP_WIFI_SOCKET_TIMEOUT
    int DEFAULT_IMAGE_SIZE -> DEFAULT_IMAGE_SIZE
com.sea_monster.core.common.DiscardOldestPolicy -> com.sea_monster.core.common.DiscardOldestPolicy:
    void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor) -> rejectedExecution
com.sea_monster.core.common.Observable -> com.sea_monster.core.common.Observable:
    long mStatus -> mStatus
    boolean mChanged -> mChanged
    byte STATIE_MASK -> STATIE_MASK
    byte STATIE_EMPTY -> STATIE_EMPTY
    java.util.List mEnters -> mEnters
    void addListener(byte,com.sea_monster.core.common.Observer) -> addListener
    void removeListener(byte,com.sea_monster.core.common.Observer) -> removeListener
    void addListener(com.sea_monster.core.common.Observer) -> addListener
    void removeListener(com.sea_monster.core.common.Observer) -> removeListener
    int entityIndex(com.sea_monster.core.common.Observer) -> entityIndex
    byte getCurrentStatue(int) -> getCurrentStatue
    byte getStatus(long,byte) -> getStatus
    long setStatus(long,byte,byte) -> setStatus
    boolean setCurrentStatus(byte,byte,java.lang.Object) -> setCurrentStatus
    void notifyObservers(byte,byte,java.lang.Object) -> notifyObservers
    void clearChanged() -> clearChanged
    boolean hasChanged() -> hasChanged
    void setChanged() -> setChanged
    void printDebugInfo(java.io.PrintStream) -> printDebugInfo
com.sea_monster.core.common.Observable$Entity -> com.sea_monster.core.common.Observable$Entity:
    long statusMask -> statusMask
    java.lang.ref.WeakReference mWeakObserver -> mWeakObserver
    com.sea_monster.core.common.Observable this$0 -> this$0
    java.lang.String toString() -> toString
com.sea_monster.core.common.Observer -> com.sea_monster.core.common.Observer:
    void onNotify(com.sea_monster.core.common.Observable,byte,byte,java.lang.Object) -> onNotify
com.sea_monster.core.common.PriorityRunnable -> com.sea_monster.core.common.PriorityRunnable:
    int NORMAL -> NORMAL
    int LOW -> LOW
    int HIGH -> HIGH
    int VERY_HIGH -> VERY_HIGH
    int priority -> priority
    int compareTo(com.sea_monster.core.common.PriorityRunnable) -> compareTo
    int getPriority() -> getPriority
    int compareTo(java.lang.Object) -> compareTo
com.sea_monster.core.common.PriorityThreadFactory -> com.sea_monster.core.common.PriorityThreadFactory:
    int mPriority -> mPriority
    java.util.concurrent.atomic.AtomicInteger mNumber -> mNumber
    java.lang.String mName -> mName
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
    int access$000(com.sea_monster.core.common.PriorityThreadFactory) -> access$000
com.sea_monster.core.common.PriorityThreadFactory$1 -> com.sea_monster.core.common.PriorityThreadFactory$1:
    com.sea_monster.core.common.PriorityThreadFactory this$0 -> this$0
    void run() -> run
com.sea_monster.core.common.RequestProcess -> com.sea_monster.core.common.RequestProcess:
    void onComplete(java.lang.Object) -> onComplete
    void onFailure(com.sea_monster.core.exception.BaseException) -> onFailure
com.sea_monster.core.exception.BaseException -> com.sea_monster.core.exception.BaseException:
    long serialVersionUID -> serialVersionUID
com.sea_monster.core.exception.DBException -> com.sea_monster.core.exception.DBException:
    long serialVersionUID -> serialVersionUID
    java.lang.String toString() -> toString
com.sea_monster.core.exception.HttpException -> com.sea_monster.core.exception.HttpException:
    long serialVersionUID -> serialVersionUID
    java.lang.String toString() -> toString
com.sea_monster.core.exception.InternalException -> com.sea_monster.core.exception.InternalException:
    int NETWORK_DISABLED -> NETWORK_DISABLED
    int DISCARD_TASK -> DISCARD_TASK
    int MODEL_INCOMPLETE -> MODEL_INCOMPLETE
    int ENTITY_BUILD_EXP -> ENTITY_BUILD_EXP
    int IMAGE_GET_FAIL -> IMAGE_GET_FAIL
    int UNLOGIN_EXP -> UNLOGIN_EXP
    int VALID_EXCEPTION_CODE -> VALID_EXCEPTION_CODE
    int DEF_NETWORK_CODE -> DEF_NETWORK_CODE
    int DEF_LOGIC_CODE -> DEF_LOGIC_CODE
    int DEF_OTHER_CODE -> DEF_OTHER_CODE
    int DEF_SERVICE_CODE -> DEF_SERVICE_CODE
    java.lang.String DEFAULT_NETWORK_EXP_MESSAGE -> DEFAULT_NETWORK_EXP_MESSAGE
    java.lang.String DEFAULT_LOGIC_EXP_MESSAGE -> DEFAULT_LOGIC_EXP_MESSAGE
    java.lang.String DEFAULT_OTHER_EXP_MESSAGE -> DEFAULT_OTHER_EXP_MESSAGE
    java.lang.String DEFAULT_SERVICE_EXP_MESSAGE -> DEFAULT_SERVICE_EXP_MESSAGE
    java.lang.String DEFAULT_EXP_MESSAGE -> DEFAULT_EXP_MESSAGE
    java.util.HashMap codeMapping -> codeMapping
    int code -> code
    long serialVersionUID -> serialVersionUID
    int getCode() -> getCode
    void setCode(int) -> setCode
    java.lang.String toString() -> toString
    int getGeneralCode() -> getGeneralCode
    boolean isSpecial() -> isSpecial
    java.lang.String getCustomErrorMessage(int,java.lang.String) -> getCustomErrorMessage
com.sea_monster.core.exception.PackException -> com.sea_monster.core.exception.PackException:
    long serialVersionUID -> serialVersionUID
    java.lang.String toString() -> toString
com.sea_monster.core.exception.ParseException -> com.sea_monster.core.exception.ParseException:
    long serialVersionUID -> serialVersionUID
    java.lang.String toString() -> toString
com.sea_monster.core.network.AbstractHttpRequest -> com.sea_monster.core.network.AbstractHttpRequest:
    int NORMAL -> NORMAL
    int LOW -> LOW
    int HIGH -> HIGH
    int callId -> callId
    int priority -> priority
    java.net.URI uri -> uri
    java.util.List params -> params
    java.io.InputStream resStream -> resStream
    boolean isMultiPart -> isMultiPart
    java.lang.String resName -> resName
    java.lang.String fileName -> fileName
    int method -> method
    com.sea_monster.core.network.parser.IEntityParser parser -> parser
    com.sea_monster.core.network.packer.AbsEntityPacker packer -> packer
    boolean supportGzip -> supportGzip
    java.util.Map attrs -> attrs
    com.sea_monster.core.network.StatusCallback statusCallback -> statusCallback
    int GET_METHOD -> GET_METHOD
    int POST_METHOD -> POST_METHOD
    int PUT_METHOD -> PUT_METHOD
    com.sea_monster.core.network.StatusCallback getStatusCallback() -> getStatusCallback
    void setStatusCallback(com.sea_monster.core.network.StatusCallback) -> setStatusCallback
    boolean isSupportGzip() -> isSupportGzip
    void setSupportGzip(boolean) -> setSupportGzip
    void cancelRequest(com.sea_monster.core.exception.BaseException) -> cancelRequest
    int getMethod() -> getMethod
    void setMethod(int) -> setMethod
    int getCallId() -> getCallId
    java.net.URI getUri() -> getUri
    void setUri(java.net.URI) -> setUri
    java.util.List getParamsMap() -> getParamsMap
    void setParamsMap(java.util.List) -> setParamsMap
    com.sea_monster.core.network.parser.IEntityParser getParser() -> getParser
    void setParser(com.sea_monster.core.network.parser.IEntityParser) -> setParser
    com.sea_monster.core.network.packer.AbsEntityPacker getPacker() -> getPacker
    void setPacker(com.sea_monster.core.network.packer.AbsEntityPacker) -> setPacker
    void setResStream(java.io.InputStream) -> setResStream
    void setResName(java.lang.String) -> setResName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getResStream() -> getResStream
    void putAttr(java.lang.String,java.lang.Object) -> putAttr
    boolean containsAttr(java.lang.String) -> containsAttr
    java.lang.Object getAttr(java.lang.String) -> getAttr
    java.lang.String toString() -> toString
    org.apache.http.client.methods.HttpUriRequest obtainRequest() -> obtainRequest
    int getPriority() -> getPriority
    void processReadyRequest(org.apache.http.HttpRequest) -> processReadyRequest
com.sea_monster.core.network.ApiCallback -> com.sea_monster.core.network.ApiCallback:
com.sea_monster.core.network.ApiReqeust -> com.sea_monster.core.network.ApiReqeust:
    java.net.URI uri -> uri
    java.util.List params -> params
    java.io.InputStream resStream -> resStream
    int method -> method
    java.lang.String resName -> resName
    java.lang.String fileName -> fileName
    int GET_METHOD -> GET_METHOD
    int POST_METHOD -> POST_METHOD
    int PUT_METHOD -> PUT_METHOD
    int getMethod() -> getMethod
    void setMethod(int) -> setMethod
    java.net.URI getUri() -> getUri
    void setUri(java.net.URI) -> setUri
    java.util.List getParams() -> getParams
    void setParams(java.util.List) -> setParams
    java.lang.String getResName() -> getResName
    void setResName(java.lang.String) -> setResName
    java.io.InputStream getResStream() -> getResStream
    void setResStream(java.io.InputStream) -> setResStream
    java.lang.String toString() -> toString
    com.sea_monster.core.network.AbstractHttpRequest obtainRequest(com.sea_monster.core.network.parser.IEntityParser,com.sea_monster.core.network.AuthType) -> obtainRequest
    com.sea_monster.core.network.AbstractHttpRequest obtainRequest(com.sea_monster.core.network.parser.IEntityParser,com.sea_monster.core.network.AuthType,boolean) -> obtainRequest
    com.sea_monster.core.network.AbstractHttpRequest obtainRequest(com.sea_monster.core.network.parser.IEntityParser,com.sea_monster.core.network.packer.AbsEntityPacker,com.sea_monster.core.network.AuthType) -> obtainRequest
    java.util.List access$000(com.sea_monster.core.network.ApiReqeust) -> access$000
com.sea_monster.core.network.ApiReqeust$1 -> com.sea_monster.core.network.ApiReqeust$1:
    com.sea_monster.core.network.AuthType val$consumer -> val$consumer
    com.sea_monster.core.network.ApiReqeust val$request -> val$request
    com.sea_monster.core.network.ApiReqeust this$0 -> this$0
    void processReadyRequest(org.apache.http.HttpRequest) -> processReadyRequest
    void onComplete(java.io.Serializable) -> onComplete
    void onFailure(com.sea_monster.core.exception.BaseException) -> onFailure
    void onComplete(java.lang.Object) -> onComplete
com.sea_monster.core.network.ApiReqeust$2 -> com.sea_monster.core.network.ApiReqeust$2:
    com.sea_monster.core.network.AuthType val$consumer -> val$consumer
    com.sea_monster.core.network.ApiReqeust val$request -> val$request
    com.sea_monster.core.network.ApiReqeust this$0 -> this$0
    void processReadyRequest(org.apache.http.HttpRequest) -> processReadyRequest
    void onComplete(java.io.Serializable) -> onComplete
    void onFailure(com.sea_monster.core.exception.BaseException) -> onFailure
    void onComplete(java.lang.Object) -> onComplete
com.sea_monster.core.network.AuthType -> com.sea_monster.core.network.AuthType:
    void signRequest(org.apache.http.HttpRequest,java.util.List) -> signRequest
com.sea_monster.core.network.BaseApi -> com.sea_monster.core.network.BaseApi:
    com.sea_monster.core.network.HttpHandler handler -> handler
    android.content.Context context -> context
    java.util.Map callMap -> callMap
    void recordRequest(java.lang.ref.WeakReference,com.sea_monster.core.network.AbstractHttpRequest) -> recordRequest
    void releaseRequest(java.lang.ref.WeakReference,com.sea_monster.core.network.AbstractHttpRequest) -> releaseRequest
    void cancelReqeust(com.sea_monster.core.network.AbstractHttpRequest) -> cancelReqeust
    void cancelReqeust(com.sea_monster.core.network.ApiCallback) -> cancelReqeust
com.sea_monster.core.network.BaseApi$DefaultApiReqeust -> com.sea_monster.core.network.BaseApi$DefaultApiReqeust:
    java.lang.ref.WeakReference weakCallback -> weakCallback
    com.sea_monster.core.network.BaseApi this$0 -> this$0
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.io.Serializable) -> onComplete
    void onFailure(com.sea_monster.core.network.AbstractHttpRequest,com.sea_monster.core.exception.BaseException) -> onFailure
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.lang.Object) -> onComplete
com.sea_monster.core.network.DefaultHttpHandler -> com.sea_monster.core.network.DefaultHttpHandler:
    org.apache.http.impl.client.DefaultHttpClient client -> client
    java.util.Map requestMap -> requestMap
    java.util.concurrent.ThreadPoolExecutor executor -> executor
    android.content.Context context -> context
    org.apache.http.params.HttpParams createHttpParams(int) -> createHttpParams
    org.apache.http.params.HttpParams createHttpParams(int,java.lang.String,int) -> createHttpParams
    int executeRequest(com.sea_monster.core.network.AbstractHttpRequest) -> executeRequest
    void cancelRequest(com.sea_monster.core.network.AbstractHttpRequest) -> cancelRequest
    void cancelRequest() -> cancelRequest
    java.lang.Object executeRequestSync(com.sea_monster.core.network.AbstractHttpRequest) -> executeRequestSync
com.sea_monster.core.network.DefaultHttpHandler$PriorityRequestRunnable -> com.sea_monster.core.network.DefaultHttpHandler$PriorityRequestRunnable:
    com.sea_monster.core.network.AbstractHttpRequest request -> request
    org.apache.http.client.methods.HttpUriRequest uriRequest -> uriRequest
    com.sea_monster.core.network.DefaultHttpHandler this$0 -> this$0
    void run() -> run
    com.sea_monster.core.network.AbstractHttpRequest getRequest() -> getRequest
    org.apache.http.client.methods.HttpUriRequest getUriRequest() -> getUriRequest
com.sea_monster.core.network.HttpHandler -> com.sea_monster.core.network.HttpHandler:
    int executeRequest(com.sea_monster.core.network.AbstractHttpRequest) -> executeRequest
    java.lang.Object executeRequestSync(com.sea_monster.core.network.AbstractHttpRequest) -> executeRequestSync
    void cancelRequest(com.sea_monster.core.network.AbstractHttpRequest) -> cancelRequest
    void cancelRequest() -> cancelRequest
com.sea_monster.core.network.HttpRequestProcess -> com.sea_monster.core.network.HttpRequestProcess:
    void processReadyRequest(org.apache.http.HttpRequest) -> processReadyRequest
com.sea_monster.core.network.MultipartUtils -> com.sea_monster.core.network.MultipartUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String getContentType(java.lang.String) -> getContentType
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    java.lang.String getFormDataContent(java.util.List,java.lang.String) -> getFormDataContent
    java.lang.String getFileSeparator(java.lang.String,java.lang.String,java.lang.String) -> getFileSeparator
    java.lang.String getEndSeparator(java.lang.String) -> getEndSeparator
    java.lang.String getFormDataContent(java.lang.String,java.util.List,java.lang.String) -> getFormDataContent
com.sea_monster.core.network.RequestCallback -> com.sea_monster.core.network.RequestCallback:
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.lang.Object) -> onComplete
    void onFailure(com.sea_monster.core.network.AbstractHttpRequest,com.sea_monster.core.exception.BaseException) -> onFailure
com.sea_monster.core.network.ResCallback -> com.sea_monster.core.network.ResCallback:
com.sea_monster.core.network.ResRequest -> com.sea_monster.core.network.ResRequest:
    java.net.URI uri -> uri
    com.sea_monster.core.resource.model.Resource res -> res
    com.sea_monster.core.resource.io.IFileSysHandler fileSysHandler -> fileSysHandler
    com.sea_monster.core.network.StoreStatusCallback storeStatusCallback -> storeStatusCallback
    java.net.URI getUri() -> getUri
    void setUri(java.net.URI) -> setUri
    com.sea_monster.core.network.StoreStatusCallback getStoreStatusCallback() -> getStoreStatusCallback
    com.sea_monster.core.network.AbstractHttpRequest obtainRequest() -> obtainRequest
com.sea_monster.core.network.ResRequest$1 -> com.sea_monster.core.network.ResRequest$1:
    com.sea_monster.core.network.ResRequest this$0 -> this$0
    void processReadyRequest(org.apache.http.HttpRequest) -> processReadyRequest
    void onFailure(com.sea_monster.core.exception.BaseException) -> onFailure
    void onComplete(java.io.File) -> onComplete
    void onComplete(java.lang.Object) -> onComplete
com.sea_monster.core.network.StatusCallback -> com.sea_monster.core.network.StatusCallback:
    void statusCallback(java.lang.Object) -> statusCallback
com.sea_monster.core.network.StoreStatusCallback -> com.sea_monster.core.network.StoreStatusCallback:
com.sea_monster.core.network.entity.GzipEntity -> com.sea_monster.core.network.entity.GzipEntity:
    org.apache.http.HttpEntity mEntity -> mEntity
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    boolean isChunked() -> isChunked
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
com.sea_monster.core.network.entity.MultipartEntity -> com.sea_monster.core.network.entity.MultipartEntity:
    java.lang.String mBoundary -> mBoundary
    byte[] content -> content
    byte[] fileSeparator -> fileSeparator
    byte[] endSeparator -> endSeparator
    byte[] mStream -> mStream
    java.io.InputStream inputStream -> inputStream
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
com.sea_monster.core.network.packer.AbsEntityPacker -> com.sea_monster.core.network.packer.AbsEntityPacker:
    java.lang.Object obj -> obj
    java.lang.Object getModel() -> getModel
    org.apache.http.HttpEntity pack() -> pack
com.sea_monster.core.network.parser.IEntityParser -> com.sea_monster.core.network.parser.IEntityParser:
    java.lang.Object parse(org.apache.http.HttpEntity) -> parse
    java.lang.Object parse(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parse
    java.lang.Object parseGzip(org.apache.http.HttpEntity) -> parseGzip
    java.lang.Object parseGzip(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parseGzip
com.sea_monster.core.network.parser.NonResultParser -> com.sea_monster.core.network.parser.NonResultParser:
    java.lang.Boolean parse(org.apache.http.HttpEntity) -> parse
    java.lang.Boolean parse(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parse
    java.lang.Boolean parseGzip(org.apache.http.HttpEntity) -> parseGzip
    java.lang.Boolean parseGzip(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parseGzip
    java.lang.Object parseGzip(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parseGzip
    java.lang.Object parseGzip(org.apache.http.HttpEntity) -> parseGzip
    java.lang.Object parse(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parse
    java.lang.Object parse(org.apache.http.HttpEntity) -> parse
com.sea_monster.core.network.parser.ResParser -> com.sea_monster.core.network.parser.ResParser:
    com.sea_monster.core.resource.model.Resource res -> res
    com.sea_monster.core.resource.io.IFileSysHandler fileHandler -> fileHandler
    java.io.File parse(org.apache.http.HttpEntity) -> parse
    java.io.File parseEntityStream(java.io.InputStream,long,com.sea_monster.core.network.StoreStatusCallback) -> parseEntityStream
    java.io.File parseEntityStream(java.io.InputStream) -> parseEntityStream
    java.io.File parse(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parse
    java.io.File parseGzip(org.apache.http.HttpEntity) -> parseGzip
    java.io.File parseGzip(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parseGzip
    java.lang.Object parseGzip(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parseGzip
    java.lang.Object parseGzip(org.apache.http.HttpEntity) -> parseGzip
    java.lang.Object parse(org.apache.http.HttpEntity,com.sea_monster.core.network.StatusCallback) -> parse
    java.lang.Object parse(org.apache.http.HttpEntity) -> parse
com.sea_monster.core.resource.ResourceManager -> com.sea_monster.core.resource.ResourceManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mContext -> mContext
    com.sea_monster.core.resource.io.ResourceRemoteWrapper mRemoteWrapper -> mRemoteWrapper
    com.sea_monster.core.resource.cache.ResourceCacheWrapper mCacheWrapper -> mCacheWrapper
    com.sea_monster.core.resource.ResourceManager sS -> sS
    void init(android.content.Context,com.sea_monster.core.resource.io.ResourceRemoteWrapper,com.sea_monster.core.resource.cache.ResourceCacheWrapper) -> init
    com.sea_monster.core.resource.ResourceManager getInstance() -> getInstance
    boolean containsInMemoryCache(com.sea_monster.core.resource.model.Resource) -> containsInMemoryCache
    boolean containsInCache(com.sea_monster.core.resource.model.Resource) -> containsInCache
    boolean containsInDisk(com.sea_monster.core.resource.model.Resource) -> containsInDisk
    void removeFromDisk(com.sea_monster.core.resource.model.Resource) -> removeFromDisk
    android.net.Uri getFileUri(com.sea_monster.core.resource.model.Resource) -> getFileUri
    java.io.File getFile(com.sea_monster.core.resource.model.Resource) -> getFile
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
    android.graphics.drawable.BitmapDrawable getDrawable(com.sea_monster.core.resource.model.Resource) -> getDrawable
    com.sea_monster.core.network.AbstractHttpRequest requestResource(com.sea_monster.core.resource.model.Resource) -> requestResource
    com.sea_monster.core.network.AbstractHttpRequest requestResource(com.sea_monster.core.resource.model.Resource,com.sea_monster.core.network.StoreStatusCallback) -> requestResource
    void cancelRequest(com.sea_monster.core.resource.model.Resource) -> cancelRequest
    android.graphics.drawable.BitmapDrawable getCompressBitmap(com.sea_monster.core.resource.model.CompressedResource) -> getCompressBitmap
    android.graphics.drawable.BitmapDrawable getCompressBitmap(com.sea_monster.core.resource.model.LocalMicroResource) -> getCompressBitmap
    void compressImageToFile(com.sea_monster.core.resource.model.CompressedResource,java.io.File) -> compressImageToFile
    void put(com.sea_monster.core.resource.model.Resource,android.graphics.Bitmap) -> put
    java.io.File getCacheFile(com.sea_monster.core.resource.model.Resource) -> getCacheFile
    void put(com.sea_monster.core.resource.model.Resource,java.io.InputStream) -> put
com.sea_monster.core.resource.cache.ResourceCacheWrapper -> com.sea_monster.core.resource.cache.ResourceCacheWrapper:
    uk.co.senab.bitmapcache.BitmapLruCache mCache -> mCache
    android.content.Context mContext -> mContext
    com.sea_monster.core.resource.io.IFileSysHandler mFileSysHandler -> mFileSysHandler
    com.sea_monster.core.resource.compress.IResourceCompressHandler mCompressHandler -> mCompressHandler
    java.util.Map mCompressMapping -> mCompressMapping
    android.graphics.BitmapFactory$Options obtainOptions() -> obtainOptions
    boolean contains(com.sea_monster.core.resource.model.Resource) -> contains
    boolean containsInDiskCache(com.sea_monster.core.resource.model.Resource) -> containsInDiskCache
    boolean containsInMemoryCache(com.sea_monster.core.resource.model.Resource) -> containsInMemoryCache
    uk.co.senab.bitmapcache.CacheableBitmapDrawable get(com.sea_monster.core.resource.model.Resource) -> get
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(com.sea_monster.core.resource.model.Resource,android.graphics.Bitmap) -> put
    void put(com.sea_monster.core.resource.model.Resource,java.io.InputStream) -> put
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getFromDiskCache(com.sea_monster.core.resource.model.Resource) -> getFromDiskCache
    java.io.File getFileFromDiskCache(com.sea_monster.core.resource.model.Resource) -> getFileFromDiskCache
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getFromMemoryCache(com.sea_monster.core.resource.model.Resource) -> getFromMemoryCache
    android.graphics.drawable.BitmapDrawable buildCompareBitmap(com.sea_monster.core.resource.model.CompressedResource) -> buildCompareBitmap
    android.graphics.drawable.BitmapDrawable buildCompareBitmap(com.sea_monster.core.resource.model.LocalMicroResource) -> buildCompareBitmap
    com.sea_monster.core.resource.model.CompressOptions getCompressOptions(com.sea_monster.core.resource.model.CompressedResource) -> getCompressOptions
    java.io.File getCompressFile(com.sea_monster.core.resource.model.CompressedResource,java.lang.String) -> getCompressFile
    java.util.Map access$000(com.sea_monster.core.resource.cache.ResourceCacheWrapper) -> access$000
com.sea_monster.core.resource.cache.ResourceCacheWrapper$1 -> com.sea_monster.core.resource.cache.ResourceCacheWrapper$1:
    com.sea_monster.core.resource.model.CompressedResource val$resource -> val$resource
    com.sea_monster.core.resource.cache.ResourceCacheWrapper this$0 -> this$0
    void onFailure(com.sea_monster.core.exception.BaseException) -> onFailure
    void onComplete(android.graphics.Bitmap) -> onComplete
    void onComplete(java.lang.Object) -> onComplete
com.sea_monster.core.resource.cache.ResourceCacheWrapper$2 -> com.sea_monster.core.resource.cache.ResourceCacheWrapper$2:
    com.sea_monster.core.resource.model.CompressedResource val$resource -> val$resource
    com.sea_monster.core.resource.cache.ResourceCacheWrapper this$0 -> this$0
    void onFailure(com.sea_monster.core.exception.BaseException) -> onFailure
    void onComplete(android.graphics.Bitmap) -> onComplete
    void onComplete(java.lang.Object) -> onComplete
com.sea_monster.core.resource.compress.AbstractCompressRequest -> com.sea_monster.core.resource.compress.AbstractCompressRequest:
    com.sea_monster.core.resource.model.Resource resource -> resource
    java.io.InputStream stream -> stream
    com.sea_monster.core.resource.model.CompressOptions options -> options
    com.sea_monster.core.resource.model.CompressOptions getOptions() -> getOptions
    java.io.InputStream getStream() -> getStream
    void setStream(java.io.InputStream) -> setStream
    void setOptions(com.sea_monster.core.resource.model.CompressOptions) -> setOptions
    com.sea_monster.core.resource.model.Resource getResource() -> getResource
    void setResource(com.sea_monster.core.resource.model.Resource) -> setResource
com.sea_monster.core.resource.compress.CompressRequestProcess -> com.sea_monster.core.resource.compress.CompressRequestProcess:
com.sea_monster.core.resource.compress.IResourceCompressHandler -> com.sea_monster.core.resource.compress.IResourceCompressHandler:
    android.graphics.Bitmap compressResourceWithCrop(com.sea_monster.core.resource.compress.AbstractCompressRequest) -> compressResourceWithCrop
    android.graphics.Bitmap compressResource(com.sea_monster.core.resource.compress.AbstractCompressRequest) -> compressResource
com.sea_monster.core.resource.compress.ResourceCompressHandler -> com.sea_monster.core.resource.compress.ResourceCompressHandler:
    android.content.Context context -> context
    com.sea_monster.core.resource.io.IFileSysHandler fileSysHandler -> fileSysHandler
    android.graphics.Bitmap compressResourceWithCrop(com.sea_monster.core.resource.compress.AbstractCompressRequest) -> compressResourceWithCrop
    android.graphics.Bitmap compressResource(com.sea_monster.core.resource.compress.AbstractCompressRequest) -> compressResource
com.sea_monster.core.resource.io.FileSysHandler -> com.sea_monster.core.resource.io.FileSysHandler:
    java.lang.String TAG -> TAG
    java.lang.String SETTING -> SETTING
    int MIN_FILE_SIZE_IN_BYTES -> MIN_FILE_SIZE_IN_BYTES
    java.io.File mStorageDirectory -> mStorageDirectory
    java.util.concurrent.ThreadPoolExecutor executor -> executor
    java.io.File baseDirectory -> baseDirectory
    boolean exists(android.net.Uri) -> exists
    java.io.File getFile(android.net.Uri) -> getFile
    java.io.File getTempFile(android.net.Uri) -> getTempFile
    java.lang.String getPath(android.net.Uri) -> getPath
    java.io.InputStream getInputStream(android.net.Uri) -> getInputStream
    java.io.File store(android.net.Uri,java.io.InputStream) -> store
    java.io.File store(android.net.Uri,java.io.InputStream,long,com.sea_monster.core.network.StoreStatusCallback) -> store
    void invalidate(android.net.Uri) -> invalidate
    void cleanup() -> cleanup
    void cleanupSimple() -> cleanupSimple
    void clear() -> clear
    void clear(byte) -> clear
    void delFile(java.io.File) -> delFile
    void delFile(android.net.Uri) -> delFile
    void delFileOfDir(java.io.File) -> delFileOfDir
    java.lang.String saveTo(java.io.File,java.lang.String) -> saveTo
    java.io.File getWorldWideFile() -> getWorldWideFile
    void create(android.net.Uri) -> create
com.sea_monster.core.resource.io.IFileSysHandler -> com.sea_monster.core.resource.io.IFileSysHandler:
    boolean exists(android.net.Uri) -> exists
    java.io.File getFile(android.net.Uri) -> getFile
    java.lang.String getPath(android.net.Uri) -> getPath
    java.io.InputStream getInputStream(android.net.Uri) -> getInputStream
    java.io.File store(android.net.Uri,java.io.InputStream) -> store
    java.io.File store(android.net.Uri,java.io.InputStream,long,com.sea_monster.core.network.StoreStatusCallback) -> store
    void invalidate(android.net.Uri) -> invalidate
    void cleanup() -> cleanup
    void clear() -> clear
    void clear(byte) -> clear
    void delFile(android.net.Uri) -> delFile
    java.lang.String saveTo(java.io.File,java.lang.String) -> saveTo
    java.io.File getWorldWideFile() -> getWorldWideFile
    void create(android.net.Uri) -> create
com.sea_monster.core.resource.io.ResourceRemoteWrapper -> com.sea_monster.core.resource.io.ResourceRemoteWrapper:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.sea_monster.core.resource.io.IFileSysHandler fileSysHandler -> fileSysHandler
    com.sea_monster.core.network.HttpHandler httpHandler -> httpHandler
    java.util.Map onRequestMapping -> onRequestMapping
    android.content.Context context -> context
    boolean exists(com.sea_monster.core.resource.model.Resource) -> exists
    android.net.Uri getFileUri(com.sea_monster.core.resource.model.Resource) -> getFileUri
    boolean exists(android.net.Uri) -> exists
    java.io.File getFile(android.net.Uri) -> getFile
    java.io.File getFile(com.sea_monster.core.resource.model.Resource) -> getFile
    java.io.InputStream getInputStream(com.sea_monster.core.resource.model.Resource) -> getInputStream
    java.io.InputStream getInputStream(android.net.Uri) -> getInputStream
    void put(com.sea_monster.core.resource.model.Resource,java.io.InputStream) -> put
    android.graphics.Bitmap getBitmap(com.sea_monster.core.resource.model.Resource) -> getBitmap
    com.sea_monster.core.network.AbstractHttpRequest request(com.sea_monster.core.resource.model.Resource) -> request
    com.sea_monster.core.network.AbstractHttpRequest request(com.sea_monster.core.resource.model.RequestResource) -> request
    com.sea_monster.core.network.AbstractHttpRequest request(com.sea_monster.core.resource.model.Resource,com.sea_monster.core.network.StoreStatusCallback) -> request
    void invalidate(java.net.URI) -> invalidate
    void shutdown() -> shutdown
    void cancel(com.sea_monster.core.resource.model.Resource) -> cancel
    void remove(android.net.Uri) -> remove
    void remove(com.sea_monster.core.resource.model.Resource) -> remove
    void access$000(com.sea_monster.core.resource.io.ResourceRemoteWrapper) -> access$000
    java.util.Map access$100(com.sea_monster.core.resource.io.ResourceRemoteWrapper) -> access$100
    com.sea_monster.core.resource.io.IFileSysHandler access$200(com.sea_monster.core.resource.io.ResourceRemoteWrapper) -> access$200
    void access$300(com.sea_monster.core.resource.io.ResourceRemoteWrapper) -> access$300
    void access$400(com.sea_monster.core.resource.io.ResourceRemoteWrapper) -> access$400
    void access$500(com.sea_monster.core.resource.io.ResourceRemoteWrapper) -> access$500
com.sea_monster.core.resource.io.ResourceRemoteWrapper$1 -> com.sea_monster.core.resource.io.ResourceRemoteWrapper$1:
    com.sea_monster.core.resource.model.Resource val$img -> val$img
    com.sea_monster.core.resource.io.ResourceRemoteWrapper this$0 -> this$0
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.io.File) -> onComplete
    void onFailure(com.sea_monster.core.network.AbstractHttpRequest,com.sea_monster.core.exception.BaseException) -> onFailure
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.lang.Object) -> onComplete
com.sea_monster.core.resource.io.ResourceRemoteWrapper$2 -> com.sea_monster.core.resource.io.ResourceRemoteWrapper$2:
    com.sea_monster.core.resource.model.Resource val$img -> val$img
    com.sea_monster.core.network.StoreStatusCallback val$callback -> val$callback
    com.sea_monster.core.resource.io.ResourceRemoteWrapper this$0 -> this$0
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.io.File) -> onComplete
    void onFailure(com.sea_monster.core.network.AbstractHttpRequest,com.sea_monster.core.exception.BaseException) -> onFailure
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.lang.Object) -> onComplete
com.sea_monster.core.resource.model.CompressOptions -> com.sea_monster.core.resource.model.CompressOptions:
    int thumbWidth -> thumbWidth
    int thumbHeight -> thumbHeight
    int srcWidth -> srcWidth
    int srcHeight -> srcHeight
    int orientation -> orientation
    boolean isCrop -> isCrop
    boolean isCrop() -> isCrop
    void setCrop(boolean) -> setCrop
    int getThumbWidth() -> getThumbWidth
    void setThumbWidth(int) -> setThumbWidth
    int getThumbHeight() -> getThumbHeight
    void setThumbHeight(int) -> setThumbHeight
    int getSrcWidth() -> getSrcWidth
    void setSrcWidth(int) -> setSrcWidth
    int getSrcHeight() -> getSrcHeight
    void setSrcHeight(int) -> setSrcHeight
    int getOrientation() -> getOrientation
    void setOrientation(int) -> setOrientation
    void compareOffset() -> compareOffset
com.sea_monster.core.resource.model.CompressedResource -> com.sea_monster.core.resource.model.CompressedResource:
    int height -> height
    int width -> width
    boolean isCrop -> isCrop
    com.sea_monster.core.resource.model.Resource mResource -> mResource
    android.net.Uri mCompressUri -> mCompressUri
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    void setHeight(int) -> setHeight
    android.net.Uri getUri() -> getUri
    com.sea_monster.core.resource.model.Resource getOriResource() -> getOriResource
    int hashCode() -> hashCode
    boolean isCrop() -> isCrop
    void setCrop(boolean) -> setCrop
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.sea_monster.core.resource.model.CompressedResource$1 -> com.sea_monster.core.resource.model.CompressedResource$1:
    com.sea_monster.core.resource.model.CompressedResource createFromParcel(android.os.Parcel) -> createFromParcel
    com.sea_monster.core.resource.model.CompressedResource[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sea_monster.core.resource.model.ImageInfo -> com.sea_monster.core.resource.model.ImageInfo:
    int width -> width
    int height -> height
    int orientation -> orientation
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    int getOrientation() -> getOrientation
    void setOrientation(int) -> setOrientation
com.sea_monster.core.resource.model.LocalMicroResource -> com.sea_monster.core.resource.model.LocalMicroResource:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.sea_monster.core.resource.model.LocalMicroResource$1 -> com.sea_monster.core.resource.model.LocalMicroResource$1:
    com.sea_monster.core.resource.model.LocalMicroResource createFromParcel(android.os.Parcel) -> createFromParcel
    com.sea_monster.core.resource.model.LocalMicroResource[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sea_monster.core.resource.model.LocalResource -> com.sea_monster.core.resource.model.LocalResource:
    long imageId -> imageId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    long getImageId() -> getImageId
    void setImageId(long) -> setImageId
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.sea_monster.core.resource.model.LocalResource$1 -> com.sea_monster.core.resource.model.LocalResource$1:
    com.sea_monster.core.resource.model.LocalResource createFromParcel(android.os.Parcel) -> createFromParcel
    com.sea_monster.core.resource.model.LocalResource[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sea_monster.core.resource.model.RequestResource -> com.sea_monster.core.resource.model.RequestResource:
    com.sea_monster.core.resource.model.StoreStatus mStoreStatus -> mStoreStatus
    java.lang.ref.WeakReference mListener -> mListener
    void registeredStatusChangeListener(com.sea_monster.core.network.StoreStatusCallback) -> registeredStatusChangeListener
    void unRegisteredStatusChangeListener() -> unRegisteredStatusChangeListener
    com.sea_monster.core.resource.model.StoreStatus getStoreStatus() -> getStoreStatus
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.io.File) -> onComplete
    void onFailure(com.sea_monster.core.network.AbstractHttpRequest,com.sea_monster.core.exception.BaseException) -> onFailure
    void statusCallback(com.sea_monster.core.resource.model.StoreStatus) -> statusCallback
    void statusCallback(java.lang.Object) -> statusCallback
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.lang.Object) -> onComplete
com.sea_monster.core.resource.model.Resource -> com.sea_monster.core.resource.model.Resource:
    android.net.Uri resUri -> resUri
    int mOrientaion -> mOrientaion
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.net.Uri getUri() -> getUri
    int hashCode() -> hashCode
    int describeContents() -> describeContents
    int getOrientaion() -> getOrientaion
    void setOrientaion(int) -> setOrientaion
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(com.sea_monster.core.resource.model.Resource) -> equals
com.sea_monster.core.resource.model.Resource$1 -> com.sea_monster.core.resource.model.Resource$1:
    com.sea_monster.core.resource.model.Resource createFromParcel(android.os.Parcel) -> createFromParcel
    com.sea_monster.core.resource.model.Resource[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sea_monster.core.resource.model.StoreStatus -> com.sea_monster.core.resource.model.StoreStatus:
    int totalSize -> totalSize
    int receivedSize -> receivedSize
    int getTotalSize() -> getTotalSize
    void setTotalSize(int) -> setTotalSize
    int getReceivedSize() -> getReceivedSize
    int getPercent() -> getPercent
    void setReceivedSize(int) -> setReceivedSize
    void addReceivedSize(int) -> addReceivedSize
    java.lang.String toString() -> toString
com.sea_monster.core.utils.Base64 -> com.sea_monster.core.utils.Base64:
    char[] _base64map -> _base64map
    byte[] _base64salt -> _base64salt
    char _padding -> _padding
    java.lang.String encode(byte[]) -> encode
    byte[] decode(java.lang.String) -> decode
    byte base64Salt(byte) -> base64Salt
com.sea_monster.core.utils.FileUtils -> com.sea_monster.core.utils.FileUtils:
    java.lang.String TAG -> TAG
    java.lang.String NOMEDIA -> NOMEDIA
    java.lang.String getExtendFileNameNoPoint(java.lang.String) -> getExtendFileNameNoPoint
    java.lang.String getFileNameWithoutExtName(java.lang.String) -> getFileNameWithoutExtName
    void createDirectory(java.io.File,boolean) -> createDirectory
    void Channel(java.io.File,java.io.File) -> Channel
com.sea_monster.core.utils.ImageUtils -> com.sea_monster.core.utils.ImageUtils:
    java.lang.String TAG -> TAG
    int DEFAULT_JPEG_QUALITY -> DEFAULT_JPEG_QUALITY
    int UNCONSTRAINED -> UNCONSTRAINED
    int getOrientation(java.lang.String) -> getOrientation
    int getOrientation(java.io.File) -> getOrientation
    void repairOrientation(java.io.File) -> repairOrientation
    void repairOrientation(java.lang.String) -> repairOrientation
    android.graphics.Bitmap rotateToPortrait(android.graphics.Bitmap,int) -> rotateToPortrait
    android.graphics.Matrix getRotateMatrix(android.graphics.Bitmap,int) -> getRotateMatrix
    int computeSampleSize(int,int,int,int) -> computeSampleSize
    int computeInitialSampleSize(int,int,int,int) -> computeInitialSampleSize
    int computeSampleSizeLarger(int,int,int) -> computeSampleSizeLarger
    int computeSampleSizeLarger(float) -> computeSampleSizeLarger
    int computeSampleSize(float) -> computeSampleSize
    android.graphics.Bitmap resizeBitmapByScale(android.graphics.Bitmap,float,boolean) -> resizeBitmapByScale
    android.graphics.Bitmap$Config getConfig(android.graphics.Bitmap) -> getConfig
    android.graphics.Bitmap resizeDownBySideLength(android.graphics.Bitmap,int,boolean) -> resizeDownBySideLength
    android.graphics.Bitmap resizeAndCropCenter(android.graphics.Bitmap,int,boolean) -> resizeAndCropCenter
    com.sea_monster.core.resource.model.ImageInfo getImageInfo(java.lang.String) -> getImageInfo
    com.sea_monster.core.resource.model.ImageInfo getImageInfo(java.io.File) -> getImageInfo
    void recycleSilently(android.graphics.Bitmap) -> recycleSilently
    android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,int,boolean) -> rotateBitmap
    android.graphics.Bitmap createVideoThumbnail(java.lang.String) -> createVideoThumbnail
    byte[] compressToBytes(android.graphics.Bitmap) -> compressToBytes
    byte[] compressToBytes(android.graphics.Bitmap,int) -> compressToBytes
    boolean isSupportedByRegionDecoder(java.lang.String) -> isSupportedByRegionDecoder
    boolean isRotationSupported(java.lang.String) -> isRotationSupported
com.sea_monster.core.utils.IoUtils -> com.sea_monster.core.utils.IoUtils:
    void closeStream(java.io.InputStream) -> closeStream
    void closeStream(java.io.OutputStream) -> closeStream
    long copy(java.io.File,java.io.OutputStream) -> copy
    long copy(java.io.InputStream,java.io.File) -> copy
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
com.sea_monster.core.utils.Md5 -> com.sea_monster.core.utils.Md5:
    char[] DIGITS -> DIGITS
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.sea_monster.core.utils.ParcelUtils -> com.sea_monster.core.utils.ParcelUtils:
    void writeToParcel(android.os.Parcel,java.lang.String) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.lang.Long) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.lang.Integer) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.lang.Float) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.lang.Double) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.util.Map) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.util.Date) -> writeToParcel
    java.lang.Float readFloatFromParcel(android.os.Parcel) -> readFloatFromParcel
    java.lang.Double readDoubleFromParcel(android.os.Parcel) -> readDoubleFromParcel
    java.util.Date readDateFromParcel(android.os.Parcel) -> readDateFromParcel
    java.lang.Integer readIntFromParcel(android.os.Parcel) -> readIntFromParcel
    java.lang.Long readLongFromParcel(android.os.Parcel) -> readLongFromParcel
    java.lang.String readFromParcel(android.os.Parcel) -> readFromParcel
    java.util.Map readMapFromParcel(android.os.Parcel) -> readMapFromParcel
    android.os.Parcelable readFromParcel(android.os.Parcel,java.lang.Class) -> readFromParcel
    void writeToParcel(android.os.Parcel,android.os.Parcelable) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.util.List) -> writeToParcel
    java.util.ArrayList readListFromParcel(android.os.Parcel,java.lang.Class) -> readListFromParcel
    void writeListToParcel(android.os.Parcel,java.util.List) -> writeListToParcel
    android.os.Parcelable bytesToParcelable(byte[],java.lang.Class) -> bytesToParcelable
    byte[] parcelableToByte(android.os.Parcelable) -> parcelableToByte
    java.util.List bytesToParcelableList(byte[],java.lang.Class) -> bytesToParcelableList
    byte[] parcelableListToByte(java.util.List) -> parcelableListToByte
com.sea_monster.core.utils.Utils -> com.sea_monster.core.utils.Utils:
    java.lang.String TAG -> TAG
    java.lang.String DEBUG_TAG -> DEBUG_TAG
    long POLY64REV -> POLY64REV
    long INITIALCRC -> INITIALCRC
    long[] sCrcTable -> sCrcTable
    boolean IS_DEBUG_BUILD -> IS_DEBUG_BUILD
    java.lang.String MASK_STRING -> MASK_STRING
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_8 -> UTF_8
    void assertTrue(boolean) -> assertTrue
    void fail(java.lang.String,java.lang.Object[]) -> fail
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    int nextPowerOf2(int) -> nextPowerOf2
    int prevPowerOf2(int) -> prevPowerOf2
    int clamp(int,int,int) -> clamp
    float clamp(float,float,float) -> clamp
    long clamp(long,long,long) -> clamp
    boolean isOpaque(int) -> isOpaque
    void swap(int[],int,int) -> swap
    long crc64Long(java.lang.String) -> crc64Long
    long crc64Long(byte[]) -> crc64Long
    byte[] getBytes(java.lang.String) -> getBytes
    byte[] intToBytes(int) -> intToBytes
    byte[] longToBytes(long) -> longToBytes
    int bytesToInt(byte[]) -> bytesToInt
    long bytesToLong(byte[]) -> bytesToLong
    java.lang.String bytesToString(byte[]) -> bytesToString
    byte[] stringToBytes(java.lang.String) -> stringToBytes
    void closeSilently(java.io.Closeable) -> closeSilently
    int compare(long,long) -> compare
    int ceilLog2(float) -> ceilLog2
    int floorLog2(float) -> floorLog2
    void closeSilently(android.os.ParcelFileDescriptor) -> closeSilently
    void closeSilently(android.database.Cursor) -> closeSilently
    float interpolateAngle(float,float,float) -> interpolateAngle
    float interpolateScale(float,float,float) -> interpolateScale
    java.lang.String ensureNotNull(java.lang.String) -> ensureNotNull
    float parseFloatSafely(java.lang.String,float) -> parseFloatSafely
    int parseIntSafely(java.lang.String,int) -> parseIntSafely
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    void waitWithoutInterrupt(java.lang.Object) -> waitWithoutInterrupt
    boolean handleInterrruptedException(java.lang.Throwable) -> handleInterrruptedException
    java.lang.String escapeXml(java.lang.String) -> escapeXml
    java.lang.String getUserAgent(android.content.Context) -> getUserAgent
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.String maskDebugInfo(java.lang.Object) -> maskDebugInfo
    void debug(java.lang.String,java.lang.Object[]) -> debug
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.sina.sso.RemoteSSO -> com.sina.sso.RemoteSSO:
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
com.sina.sso.RemoteSSO$Stub -> com.sina.sso.RemoteSSO$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getActivityName -> TRANSACTION_getActivityName
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$Proxy -> com.sina.sso.RemoteSSO$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
com.ultrapower.mcs.engine.AudioCodecInfo -> com.ultrapower.mcs.engine.AudioCodecInfo:
    com.ultrapower.mcs.engine.AudioCodecType codecType -> codecType
    java.lang.String name -> name
    int plType -> plType
com.ultrapower.mcs.engine.AudioCodecType -> com.ultrapower.mcs.engine.AudioCodecType:
    com.ultrapower.mcs.engine.AudioCodecType iSAC -> iSAC
    com.ultrapower.mcs.engine.AudioCodecType PCMU -> PCMU
    com.ultrapower.mcs.engine.AudioCodecType iLBC -> iLBC
    com.ultrapower.mcs.engine.AudioCodecType AMRWB -> AMRWB
    com.ultrapower.mcs.engine.AudioCodecType SILK -> SILK
    int value -> value
    com.ultrapower.mcs.engine.AudioCodecType[] $VALUES -> $VALUES
    com.ultrapower.mcs.engine.AudioCodecType[] values() -> values
    com.ultrapower.mcs.engine.AudioCodecType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.ultrapower.mcs.engine.ITransportCallback -> com.ultrapower.mcs.engine.ITransportCallback:
    void SendAudioRtp(byte[]) -> SendAudioRtp
    void SendAudioRtcp(byte[]) -> SendAudioRtcp
    void SendVideoRtp(byte[]) -> SendVideoRtp
    void SendVideoRtcp(byte[]) -> SendVideoRtcp
    void SendData(byte[]) -> SendData
com.ultrapower.mcs.engine.ITransportListener -> com.ultrapower.mcs.engine.ITransportListener:
    void OnTransportFailed() -> OnTransportFailed
com.ultrapower.mcs.engine.IVideoObserver -> com.ultrapower.mcs.engine.IVideoObserver:
    void OnVideoLevelChanged(com.ultrapower.mcs.engine.VideoCodecLevel) -> OnVideoLevelChanged
    void OnNetworkStateChanged(com.ultrapower.mcs.engine.NetworkState) -> OnNetworkStateChanged
com.ultrapower.mcs.engine.NetworkState -> com.ultrapower.mcs.engine.NetworkState:
    com.ultrapower.mcs.engine.NetworkState kNetworkStateLow -> kNetworkStateLow
    com.ultrapower.mcs.engine.NetworkState kNetworkStateNormal -> kNetworkStateNormal
    com.ultrapower.mcs.engine.NetworkState kNetworkStateGood -> kNetworkStateGood
    int value -> value
    com.ultrapower.mcs.engine.NetworkState[] $VALUES -> $VALUES
    com.ultrapower.mcs.engine.NetworkState[] values() -> values
    com.ultrapower.mcs.engine.NetworkState valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.ultrapower.mcs.engine.PhoneInfo -> com.ultrapower.mcs.engine.PhoneInfo:
    java.lang.String TAG -> TAG
    android.app.ActivityManager mActivityManager -> mActivityManager
    android.content.Context context -> context
    java.lang.String[] getTotalMemory() -> getTotalMemory
    java.lang.String[] getCpuInfo() -> getCpuInfo
    int getNumCores() -> getNumCores
    long getCpuFrequence() -> getCpuFrequence
    long getMinCpuFreq() -> getMinCpuFreq
    long getCurCpuFreq() -> getCurCpuFreq
    java.lang.String getCpuName() -> getCpuName
    int[] getCameraInfo() -> getCameraInfo
com.ultrapower.mcs.engine.PhoneInfo$1CpuFilter -> com.ultrapower.mcs.engine.PhoneInfo$1CpuFilter:
    com.ultrapower.mcs.engine.PhoneInfo this$0 -> this$0
    boolean accept(java.io.File) -> accept
com.ultrapower.mcs.engine.TransportType -> com.ultrapower.mcs.engine.TransportType:
    com.ultrapower.mcs.engine.TransportType kUdpGernal -> kUdpGernal
    com.ultrapower.mcs.engine.TransportType kUdpRelay -> kUdpRelay
    com.ultrapower.mcs.engine.TransportType kExternal -> kExternal
    com.ultrapower.mcs.engine.TransportType kExternalOriginal -> kExternalOriginal
    int value -> value
    com.ultrapower.mcs.engine.TransportType[] $VALUES -> $VALUES
    com.ultrapower.mcs.engine.TransportType[] values() -> values
    com.ultrapower.mcs.engine.TransportType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.ultrapower.mcs.engine.UMCS -> com.ultrapower.mcs.engine.UMCS:
    android.content.Context mContext -> mContext
    int PARTTIMERMS -> PARTTIMERMS
    int currentCameraIndex -> currentCameraIndex
    android.view.ViewGroup localContainer -> localContainer
    android.view.SurfaceView localSv -> localSv
    com.ultrapower.mcs.engine.IVideoObserver remoteVideoObserver -> remoteVideoObserver
    com.ultrapower.mcs.engine.IVideoObserver localVideoObserver -> localVideoObserver
    com.ultrapower.mcs.engine.ITransportListener transportListener -> transportListener
    com.ultrapower.mcs.engine.ITransportCallback transportCallback -> transportCallback
    int oldMode -> oldMode
    com.ultrapower.mcs.engine.TransportType transportType -> transportType
    boolean localOnTop -> localOnTop
    com.ultrapower.mcs.engine.VideoCodecLevel intToLevel(int) -> intToLevel
    com.ultrapower.mcs.engine.NetworkState intToNetworkState(int) -> intToNetworkState
    void OnLocalVideoLevelChanged(int) -> OnLocalVideoLevelChanged
    void OnLocalNetworkStateChanged(int) -> OnLocalNetworkStateChanged
    void OnRemoteVideoLevelChanged(int) -> OnRemoteVideoLevelChanged
    void OnRemoteNetworkStateChanged(int) -> OnRemoteNetworkStateChanged
    void OnDataNeedSend(boolean,boolean,byte[]) -> OnDataNeedSend
    int Init(com.ultrapower.mcs.engine.UmcsConfig) -> Init
    int Init(android.content.Context,int,int,java.lang.String) -> Init
    int SetTraceFilePath(java.lang.String,int) -> SetTraceFilePath
    int Terminate() -> Terminate
    int Fini() -> Fini
    int SetLoudSpeakerEnable(boolean) -> SetLoudSpeakerEnable
    int SetLoudSpeakerEnable(int) -> SetLoudSpeakerEnable
    int GetLoudSpeakerEnable() -> GetLoudSpeakerEnable
    com.ultrapower.mcs.engine.AudioCodecInfo[] GetAudioCodecs() -> GetAudioCodecs
    int GetCaptureDeviceNum() -> GetCaptureDeviceNum
    com.ultrapower.mcs.engine.VideoCodecInfo[] GetVideoCodecs() -> GetVideoCodecs
    int CreateLocalAudio(int) -> CreateLocalAudio
    int CreateLocalVideo(int) -> CreateLocalVideo
    int CreateLocalVideo(int,java.lang.Object) -> CreateLocalVideo
    int CreateRemoteAudio(int) -> CreateRemoteAudio
    int CreateRemoteVideo(int,android.view.ViewGroup,boolean) -> CreateRemoteVideo
    int CreateRemoteVideo(int,java.lang.Object) -> CreateRemoteVideo
    int DeleteLocalAudio(int) -> DeleteLocalAudio
    int DeleteLocalVideo(int) -> DeleteLocalVideo
    int DeleteRemoteAudio(int) -> DeleteRemoteAudio
    int DeleteRemoteVideo(int) -> DeleteRemoteVideo
    int StartSendLocalAudio(int) -> StartSendLocalAudio
    int StartSendLocalVideo(int) -> StartSendLocalVideo
    int StopSendLocalAudio(int) -> StopSendLocalAudio
    int StopSendLocalVideo(int) -> StopSendLocalVideo
    int StartRecvRemoteAudio(int) -> StartRecvRemoteAudio
    int StartRecvRemoteVideo(int) -> StartRecvRemoteVideo
    int StopRecvRemoteAudio(int) -> StopRecvRemoteAudio
    int StopRecvRemoteVideo(int) -> StopRecvRemoteVideo
    int StopCamera() -> StopCamera
    int StopCamera(int) -> StopCamera
    int StartCamera(int,android.view.ViewGroup,boolean) -> StartCamera
    int CurrentCameraIndex() -> CurrentCameraIndex
    int ChangeCamera(int) -> ChangeCamera
    int StartCamera(int) -> StartCamera
    int StartCamera(int,int,int) -> StartCamera
    int SetRotation(int,int) -> SetRotation
    void OnTransportFailed() -> OnTransportFailed
    int StartTransport(java.lang.String,int,java.lang.String,int,java.lang.Object,com.ultrapower.mcs.engine.ITransportListener) -> StartTransport
    int StartTransport(int,java.lang.String,int,java.lang.String,int,java.lang.Object) -> StartTransport
    int StopTransport() -> StopTransport
    int OnReceiveData(byte[]) -> OnReceiveData
    int OnReceiveAudioRtp(byte[]) -> OnReceiveAudioRtp
    int OnReceiveVideoRtp(byte[]) -> OnReceiveVideoRtp
    int OnReceiveAudioRtcp(byte[]) -> OnReceiveAudioRtcp
    int OnReceiveVideoRtcp(byte[]) -> OnReceiveVideoRtcp
    int OnReceiveOriginalData(boolean,boolean,byte[]) -> OnReceiveOriginalData
    int ChangeLocalRender(java.lang.Object) -> ChangeLocalRender
    int ChangeRemotelRender(java.lang.Object) -> ChangeRemotelRender
    int SetAudioSendCodec(com.ultrapower.mcs.engine.AudioCodecType) -> SetAudioSendCodec
    int SetSendAudioCodec(int) -> SetSendAudioCodec
    int SetVideoSendCodec(com.ultrapower.mcs.engine.VideoCodecType,com.ultrapower.mcs.engine.VideoCodecLevel) -> SetVideoSendCodec
    int SetLocalVideoSendCodec(int,int) -> SetLocalVideoSendCodec
    int SetLocalVideoObserver(int,com.ultrapower.mcs.engine.IVideoObserver) -> SetLocalVideoObserver
    int SetRemoteVideoObserver(int,com.ultrapower.mcs.engine.IVideoObserver) -> SetRemoteVideoObserver
    int SetLocalAudioMute(boolean) -> SetLocalAudioMute
    void clear() -> clear
    void SetRotation(int) -> SetRotation
    void OnOrientationChanged(int) -> OnOrientationChanged
com.ultrapower.mcs.engine.UmcsConfig -> com.ultrapower.mcs.engine.UmcsConfig:
    com.ultrapower.mcs.engine.TransportType transportType -> transportType
    com.ultrapower.mcs.engine.ITransportCallback transportCallback -> transportCallback
    int traceFilter -> traceFilter
    boolean isMultiMode -> isMultiMode
    com.ultrapower.mcs.engine.TransportType getTransportType() -> getTransportType
    void setTransportType(com.ultrapower.mcs.engine.TransportType) -> setTransportType
    com.ultrapower.mcs.engine.ITransportCallback getTransportCallback() -> getTransportCallback
    void setTransportCallback(com.ultrapower.mcs.engine.ITransportCallback) -> setTransportCallback
    int getTraceFilter() -> getTraceFilter
    void setTraceFilter(int) -> setTraceFilter
    boolean isMultiMode() -> isMultiMode
    void setMultiMode(boolean) -> setMultiMode
com.ultrapower.mcs.engine.VideoCodecInfo -> com.ultrapower.mcs.engine.VideoCodecInfo:
    com.ultrapower.mcs.engine.VideoCodecLevel maxCodecLevel -> maxCodecLevel
    com.ultrapower.mcs.engine.VideoCodecType codecType -> codecType
    int pyTpye -> pyTpye
    java.lang.String codecName -> codecName
com.ultrapower.mcs.engine.VideoCodecLevel -> com.ultrapower.mcs.engine.VideoCodecLevel:
    com.ultrapower.mcs.engine.VideoCodecLevel kCodecLevelLSD -> kCodecLevelLSD
    com.ultrapower.mcs.engine.VideoCodecLevel kCodecLevelSD -> kCodecLevelSD
    com.ultrapower.mcs.engine.VideoCodecLevel kCodecLevelHD -> kCodecLevelHD
    int value -> value
    com.ultrapower.mcs.engine.VideoCodecLevel[] $VALUES -> $VALUES
    com.ultrapower.mcs.engine.VideoCodecLevel[] values() -> values
    com.ultrapower.mcs.engine.VideoCodecLevel valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.ultrapower.mcs.engine.VideoCodecType -> com.ultrapower.mcs.engine.VideoCodecType:
    com.ultrapower.mcs.engine.VideoCodecType VP8 -> VP8
    com.ultrapower.mcs.engine.VideoCodecType H264 -> H264
    int value -> value
    com.ultrapower.mcs.engine.VideoCodecType[] $VALUES -> $VALUES
    com.ultrapower.mcs.engine.VideoCodecType[] values() -> values
    com.ultrapower.mcs.engine.VideoCodecType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.ultrapower.mcs.engine.internal.ReceiveAudioInfo -> com.ultrapower.mcs.engine.internal.ReceiveAudioInfo:
com.ultrapower.mcs.engine.internal.ReceiveVideoInfo -> com.ultrapower.mcs.engine.internal.ReceiveVideoInfo:
    int rtt -> rtt
    int ebw -> ebw
    int plr -> plr
    int receiveBitrate -> receiveBitrate
    int receiveFrameRate -> receiveFrameRate
    int rbr -> rbr
    int rpr -> rpr
    int cl -> cl
    int es -> es
    double gf -> gf
    double gt -> gt
    double go -> go
    java.lang.String toString() -> toString
com.ultrapower.mcs.engine.internal.SendAudioInfo -> com.ultrapower.mcs.engine.internal.SendAudioInfo:
    int plr -> plr
com.ultrapower.mcs.engine.internal.SendVideoInfo -> com.ultrapower.mcs.engine.internal.SendVideoInfo:
    int rtt -> rtt
    int ebw -> ebw
    int plr -> plr
    int sendBitrate -> sendBitrate
    int sendFrameRate -> sendFrameRate
    int cl -> cl
    int tbss -> tbss
    int vbss -> vbss
    int nbss -> nbss
    int rbs -> rbs
    int rps -> rps
    java.lang.String toString() -> toString
com.ultrapower.mcs.engine.internal.UMCSInternal -> com.ultrapower.mcs.engine.internal.UMCSInternal:
    int FX_AVLIB_VIDEO_PROTECTION_NONE -> FX_AVLIB_VIDEO_PROTECTION_NONE
    int FX_AVLIB_VIDEO_PROTECTION_NACK -> FX_AVLIB_VIDEO_PROTECTION_NACK
    int FX_AVLIB_VIDEO_PROTECTION_FCE -> FX_AVLIB_VIDEO_PROTECTION_FCE
    int FX_AVLIB_VIDEO_PROTECTION_NACK_FCE -> FX_AVLIB_VIDEO_PROTECTION_NACK_FCE
    int GetLocalVideoInfo(com.ultrapower.mcs.engine.internal.SendVideoInfo) -> GetLocalVideoInfo
    int GetRemoteVideoInfo(com.ultrapower.mcs.engine.internal.ReceiveVideoInfo) -> GetRemoteVideoInfo
    int GetLocalAudioInfo(com.ultrapower.mcs.engine.internal.SendAudioInfo) -> GetLocalAudioInfo
    int GetRemoteAudioInfo(com.ultrapower.mcs.engine.internal.ReceiveAudioInfo) -> GetRemoteAudioInfo
    int SetECEnable(int,int) -> SetECEnable
    int GetECEnable() -> GetECEnable
    int SetNSEnable(int,int) -> SetNSEnable
    int GetNSEnable() -> GetNSEnable
    int SetHighPassFilterEnable(int) -> SetHighPassFilterEnable
    int GetHighPassFilterEnable() -> GetHighPassFilterEnable
    int SetVideoProtectionMethod(int) -> SetVideoProtectionMethod
    int SetVADStatus(int,int,int,int) -> SetVADStatus
com.ultrapower.mcs.engine.video.CaptureCapabilityAndroid -> com.ultrapower.mcs.engine.video.CaptureCapabilityAndroid:
    int width -> width
    int height -> height
    int maxFPS -> maxFPS
com.ultrapower.mcs.engine.video.IOrientationChangedObserver -> com.ultrapower.mcs.engine.video.IOrientationChangedObserver:
    void OnOrientationChanged(int) -> OnOrientationChanged
com.ultrapower.mcs.engine.video.OrientationChangedNotify -> com.ultrapower.mcs.engine.video.OrientationChangedNotify:
    com.ultrapower.mcs.engine.video.OrientationChangedNotify _self -> _self
    android.view.OrientationEventListener _OrientationEventListener -> _OrientationEventListener
    int _lastOrientation -> _lastOrientation
    java.util.ArrayList _observers -> _observers
    com.ultrapower.mcs.engine.video.OrientationChangedNotify Instances() -> Instances
    void FireOrientationChanged(int) -> FireOrientationChanged
    void AddObserver(com.ultrapower.mcs.engine.video.IOrientationChangedObserver) -> AddObserver
    void RemoveObserver(com.ultrapower.mcs.engine.video.IOrientationChangedObserver) -> RemoveObserver
    void Start(android.content.Context) -> Start
    void Stop() -> Stop
com.ultrapower.mcs.engine.video.OrientationChangedNotify$1 -> com.ultrapower.mcs.engine.video.OrientationChangedNotify$1:
    com.ultrapower.mcs.engine.video.OrientationChangedNotify this$0 -> this$0
    void onOrientationChanged(int) -> onOrientationChanged
com.ultrapower.mcs.engine.video.ViEAndroidGLES20 -> com.ultrapower.mcs.engine.video.ViEAndroidGLES20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean surfaceCreated -> surfaceCreated
    boolean openGLCreated -> openGLCreated
    boolean nativeFunctionsRegisted -> nativeFunctionsRegisted
    java.util.concurrent.locks.ReentrantLock nativeFunctionLock -> nativeFunctionLock
    long nativeObject -> nativeObject
    int viewWidth -> viewWidth
    int viewHeight -> viewHeight
    boolean UseOpenGL2(java.lang.Object) -> UseOpenGL2
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
    boolean IsSupported(android.content.Context) -> IsSupported
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void RegisterNativeObject(long) -> RegisterNativeObject
    void DeRegisterNativeObject() -> DeRegisterNativeObject
    void ReDraw() -> ReDraw
    int CreateOpenGLNative(long,int,int) -> CreateOpenGLNative
    void DrawNative(long) -> DrawNative
    void access$100(java.lang.String,javax.microedition.khronos.egl.EGL10) -> access$100
com.ultrapower.mcs.engine.video.ViEAndroidGLES20$1 -> com.ultrapower.mcs.engine.video.ViEAndroidGLES20$1:
com.ultrapower.mcs.engine.video.ViEAndroidGLES20$ConfigChooser -> com.ultrapower.mcs.engine.video.ViEAndroidGLES20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.ultrapower.mcs.engine.video.ViEAndroidGLES20$ContextFactory -> com.ultrapower.mcs.engine.video.ViEAndroidGLES20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.ultrapower.mcs.engine.video.ViERenderer -> com.ultrapower.mcs.engine.video.ViERenderer:
    android.view.SurfaceHolder g_localRenderer -> g_localRenderer
    android.view.SurfaceView CreateRenderer(android.content.Context) -> CreateRenderer
    android.view.SurfaceView CreateRenderer(android.content.Context,boolean) -> CreateRenderer
    android.view.SurfaceView CreateLocalRenderer(android.content.Context) -> CreateLocalRenderer
    android.view.SurfaceHolder GetLocalRenderer() -> GetLocalRenderer
    void clearLocalRender() -> clearLocalRender
com.ultrapower.mcs.engine.video.ViESurfaceRenderer -> com.ultrapower.mcs.engine.video.ViESurfaceRenderer:
    java.lang.String TAG -> TAG
    android.graphics.Bitmap bitmap -> bitmap
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    android.view.SurfaceHolder surfaceHolder -> surfaceHolder
    android.graphics.Rect srcRect -> srcRect
    android.graphics.Rect dstRect -> dstRect
    float dstTopScale -> dstTopScale
    float dstBottomScale -> dstBottomScale
    float dstLeftScale -> dstLeftScale
    float dstRightScale -> dstRightScale
    android.graphics.Rect srcRectRoute -> srcRectRoute
    void changeDestRect(int,int) -> changeDestRect
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    android.graphics.Bitmap CreateBitmap(int,int) -> CreateBitmap
    java.nio.ByteBuffer CreateByteBuffer(int,int) -> CreateByteBuffer
    void SetCoordinates(float,float,float,float) -> SetCoordinates
    void saveBitmapToJPEG(int,int) -> saveBitmapToJPEG
    void DrawByteBuffer() -> DrawByteBuffer
    void DrawBitmap() -> DrawBitmap
com.ultrapower.mcs.engine.video.VideoCaptureAndroid -> com.ultrapower.mcs.engine.video.VideoCaptureAndroid:
    java.lang.String TAG -> TAG
    android.hardware.Camera camera -> camera
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice currentDevice -> currentDevice
    java.util.concurrent.locks.ReentrantLock previewBufferLock -> previewBufferLock
    java.util.concurrent.locks.ReentrantLock captureLock -> captureLock
    int PIXEL_FORMAT -> PIXEL_FORMAT
    android.graphics.PixelFormat pixelFormat -> pixelFormat
    boolean isCaptureStarted -> isCaptureStarted
    boolean isCaptureRunning -> isCaptureRunning
    boolean isSurfaceReady -> isSurfaceReady
    android.view.SurfaceHolder surfaceHolder -> surfaceHolder
    int numCaptureBuffers -> numCaptureBuffers
    int expectedFrameSize -> expectedFrameSize
    int orientation -> orientation
    int id -> id
    long context -> context
    android.view.SurfaceHolder localPreview -> localPreview
    boolean ownsBuffers -> ownsBuffers
    int mCaptureWidth -> mCaptureWidth
    int mCaptureHeight -> mCaptureHeight
    int mCaptureFPS -> mCaptureFPS
    int FX_MAX_FRAME_RATE_SUPPORT -> FX_MAX_FRAME_RATE_SUPPORT
    int BEST_CAMERA_SIZE_WIDTH -> BEST_CAMERA_SIZE_WIDTH
    int BEST_CAMERA_SIZE_HEIGHT -> BEST_CAMERA_SIZE_HEIGHT
    byte[] rotatedData -> rotatedData
    void DeleteVideoCaptureAndroid(com.ultrapower.mcs.engine.video.VideoCaptureAndroid) -> DeleteVideoCaptureAndroid
    int tryStartCapture(int,int,int) -> tryStartCapture
    int StartCapture(int,int,int) -> StartCapture
    int StopCapture() -> StopCapture
    void ProvideCameraFrame(byte[],int,long) -> ProvideCameraFrame
    void saveJPEG(byte[]) -> saveJPEG
    void RouteData(byte[],int) -> RouteData
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
    void SetPreviewRotation(int) -> SetPreviewRotation
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void OnOrientationChanged(int) -> OnOrientationChanged
com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid -> com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid:
    android.content.Context context -> context
    java.lang.String TAG -> TAG
    int PIXEL_FORMAT -> PIXEL_FORMAT
    java.lang.String currentDeviceUniqueId -> currentDeviceUniqueId
    int id -> id
    java.util.List deviceList -> deviceList
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid CreateVideoCaptureDeviceInfoAndroid(int,android.content.Context) -> CreateVideoCaptureDeviceInfoAndroid
    int Init() -> Init
    void AddDeviceInfo(com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice,android.hardware.Camera$Parameters) -> AddDeviceInfo
    void VerifyCapabilities() -> VerifyCapabilities
    void AddDeviceSpecificCapability(com.ultrapower.mcs.engine.video.CaptureCapabilityAndroid) -> AddDeviceSpecificCapability
    int NumberOfDevices() -> NumberOfDevices
    java.lang.String GetDeviceUniqueName(int) -> GetDeviceUniqueName
    com.ultrapower.mcs.engine.video.CaptureCapabilityAndroid[] GetCapabilityArray(java.lang.String) -> GetCapabilityArray
    int GetOrientation(java.lang.String) -> GetOrientation
    com.ultrapower.mcs.engine.video.VideoCaptureAndroid AllocateCamera(int,long,java.lang.String) -> AllocateCamera
    android.hardware.Camera$Parameters SearchOldFrontFacingCameras(com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice) -> SearchOldFrontFacingCameras
    android.hardware.Camera AllocateEVOFrontFacingCamera() -> AllocateEVOFrontFacingCamera
    android.hardware.Camera AllocateGalaxySFrontCamera() -> AllocateGalaxySFrontCamera
    int FindSupportSize(android.hardware.Camera$Parameters,com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$CameraSupportVideoSize) -> FindSupportSize
    java.util.ArrayList GetCameraSupportVideoSize() -> GetCameraSupportVideoSize
    java.lang.String CameraVideoSizeToStr(int,int) -> CameraVideoSizeToStr
com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$1 -> com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$1:
    int[] $SwitchMap$com$ultrapower$mcs$engine$video$VideoCaptureDeviceInfoAndroid$FrontFacingCameraType -> $SwitchMap$com$ultrapower$mcs$engine$video$VideoCaptureDeviceInfoAndroid$FrontFacingCameraType
com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice -> com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice:
    java.lang.String deviceUniqueName -> deviceUniqueName
    com.ultrapower.mcs.engine.video.CaptureCapabilityAndroid[] captureCapabilies -> captureCapabilies
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType frontCameraType -> frontCameraType
    int orientation -> orientation
    int index -> index
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid this$0 -> this$0
com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$CameraSupportVideoSize -> com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$CameraSupportVideoSize:
    int index -> index
    int min_width -> min_width
    int min_height -> min_height
    int width -> width
    int height -> height
    int max_width -> max_width
    int max_height -> max_height
com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType -> com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType:
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType None -> None
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType GalaxyS -> GalaxyS
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType HTCEvo -> HTCEvo
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType Android23 -> Android23
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType[] $VALUES -> $VALUES
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType[] values() -> values
    com.ultrapower.mcs.engine.video.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType valueOf(java.lang.String) -> valueOf
com.ultrapower.mcs.engine.voice.WebRTCAudioDevice -> com.ultrapower.mcs.engine.voice.WebRTCAudioDevice:
    android.media.AudioTrack _audioTrack -> _audioTrack
    android.media.AudioRecord _audioRecord -> _audioRecord
    android.content.Context _context -> _context
    android.media.AudioManager _audioManager -> _audioManager
    java.nio.ByteBuffer _playBuffer -> _playBuffer
    java.nio.ByteBuffer _recBuffer -> _recBuffer
    byte[] _tempBufPlay -> _tempBufPlay
    byte[] _tempBufRec -> _tempBufRec
    java.util.concurrent.locks.ReentrantLock _playLock -> _playLock
    java.util.concurrent.locks.ReentrantLock _recLock -> _recLock
    boolean _doPlayInit -> _doPlayInit
    boolean _doRecInit -> _doRecInit
    boolean _isRecording -> _isRecording
    boolean _isPlaying -> _isPlaying
    int _bufferedRecSamples -> _bufferedRecSamples
    int _bufferedPlaySamples -> _bufferedPlaySamples
    int _playPosition -> _playPosition
    boolean _hasRequestFocus -> _hasRequestFocus
    java.lang.String logTag -> logTag
    int InitRecording(int,int) -> InitRecording
    int StartRecording() -> StartRecording
    int InitPlayback(int) -> InitPlayback
    int StartPlayback() -> StartPlayback
    int StopRecording() -> StopRecording
    int StopPlayback() -> StopPlayback
    int PlayAudio(int) -> PlayAudio
    int RecordAudio(int) -> RecordAudio
    int SetPlayoutSpeaker(boolean) -> SetPlayoutSpeaker
    int SetPlayoutVolume(int) -> SetPlayoutVolume
    int GetPlayoutVolume() -> GetPlayoutVolume
    void SetAudioMode(boolean) -> SetAudioMode
    void DoLog(java.lang.String) -> DoLog
    void DoLogErr(java.lang.String) -> DoLogErr
    void onAudioFocusChange(int) -> onAudioFocusChange
de.greenrobot.event.AsyncPoster -> de.greenrobot.event.AsyncPoster:
    de.greenrobot.event.PendingPostQueue queue -> queue
    de.greenrobot.event.EventBus eventBus -> eventBus
    void enqueue(de.greenrobot.event.Subscription,java.lang.Object) -> enqueue
    void run() -> run
de.greenrobot.event.BackgroundPoster -> de.greenrobot.event.BackgroundPoster:
    de.greenrobot.event.PendingPostQueue queue -> queue
    de.greenrobot.event.EventBus eventBus -> eventBus
    boolean executorRunning -> executorRunning
    void enqueue(de.greenrobot.event.Subscription,java.lang.Object) -> enqueue
    void run() -> run
de.greenrobot.event.EventBus -> de.greenrobot.event.EventBus:
    java.lang.String TAG -> TAG
    de.greenrobot.event.EventBus defaultInstance -> defaultInstance
    de.greenrobot.event.EventBusBuilder DEFAULT_BUILDER -> DEFAULT_BUILDER
    java.util.Map eventTypesCache -> eventTypesCache
    java.util.Map subscriptionsByEventType -> subscriptionsByEventType
    java.util.Map typesBySubscriber -> typesBySubscriber
    java.util.Map stickyEvents -> stickyEvents
    java.lang.ThreadLocal currentPostingThreadState -> currentPostingThreadState
    de.greenrobot.event.HandlerPoster mainThreadPoster -> mainThreadPoster
    de.greenrobot.event.BackgroundPoster backgroundPoster -> backgroundPoster
    de.greenrobot.event.AsyncPoster asyncPoster -> asyncPoster
    de.greenrobot.event.SubscriberMethodFinder subscriberMethodFinder -> subscriberMethodFinder
    java.util.concurrent.ExecutorService executorService -> executorService
    boolean throwSubscriberException -> throwSubscriberException
    boolean logSubscriberExceptions -> logSubscriberExceptions
    boolean logNoSubscriberMessages -> logNoSubscriberMessages
    boolean sendSubscriberExceptionEvent -> sendSubscriberExceptionEvent
    boolean sendNoSubscriberEvent -> sendNoSubscriberEvent
    boolean eventInheritance -> eventInheritance
    de.greenrobot.event.EventBus getDefault() -> getDefault
    de.greenrobot.event.EventBusBuilder builder() -> builder
    void clearCaches() -> clearCaches
    void register(java.lang.Object) -> register
    void register(java.lang.Object,int) -> register
    void registerSticky(java.lang.Object) -> registerSticky
    void registerSticky(java.lang.Object,int) -> registerSticky
    void register(java.lang.Object,boolean,int) -> register
    void subscribe(java.lang.Object,de.greenrobot.event.SubscriberMethod,boolean,int) -> subscribe
    boolean isRegistered(java.lang.Object) -> isRegistered
    void unubscribeByEventType(java.lang.Object,java.lang.Class) -> unubscribeByEventType
    void unregister(java.lang.Object) -> unregister
    void post(java.lang.Object) -> post
    void cancelEventDelivery(java.lang.Object) -> cancelEventDelivery
    void postSticky(java.lang.Object) -> postSticky
    java.lang.Object getStickyEvent(java.lang.Class) -> getStickyEvent
    java.lang.Object removeStickyEvent(java.lang.Class) -> removeStickyEvent
    boolean removeStickyEvent(java.lang.Object) -> removeStickyEvent
    void removeAllStickyEvents() -> removeAllStickyEvents
    boolean hasSubscriberForEvent(java.lang.Class) -> hasSubscriberForEvent
    void postSingleEvent(java.lang.Object,de.greenrobot.event.EventBus$PostingThreadState) -> postSingleEvent
    boolean postSingleEventForEventType(java.lang.Object,de.greenrobot.event.EventBus$PostingThreadState,java.lang.Class) -> postSingleEventForEventType
    void postToSubscription(de.greenrobot.event.Subscription,java.lang.Object,boolean) -> postToSubscription
    java.util.List lookupAllEventTypes(java.lang.Class) -> lookupAllEventTypes
    void addInterfaces(java.util.List,java.lang.Class[]) -> addInterfaces
    void invokeSubscriber(de.greenrobot.event.PendingPost) -> invokeSubscriber
    void invokeSubscriber(de.greenrobot.event.Subscription,java.lang.Object) -> invokeSubscriber
    void handleSubscriberException(de.greenrobot.event.Subscription,java.lang.Object,java.lang.Throwable) -> handleSubscriberException
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
de.greenrobot.event.EventBus$1 -> de.greenrobot.event.EventBus$1:
    de.greenrobot.event.EventBus this$0 -> this$0
    de.greenrobot.event.EventBus$PostingThreadState initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
de.greenrobot.event.EventBus$2 -> de.greenrobot.event.EventBus$2:
    int[] $SwitchMap$de$greenrobot$event$ThreadMode -> $SwitchMap$de$greenrobot$event$ThreadMode
de.greenrobot.event.EventBus$PostCallback -> de.greenrobot.event.EventBus$PostCallback:
    void onPostCompleted(java.util.List) -> onPostCompleted
de.greenrobot.event.EventBus$PostingThreadState -> de.greenrobot.event.EventBus$PostingThreadState:
    java.util.List eventQueue -> eventQueue
    boolean isPosting -> isPosting
    boolean isMainThread -> isMainThread
    de.greenrobot.event.Subscription subscription -> subscription
    java.lang.Object event -> event
    boolean canceled -> canceled
de.greenrobot.event.EventBusBuilder -> de.greenrobot.event.EventBusBuilder:
    java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE -> DEFAULT_EXECUTOR_SERVICE
    boolean logSubscriberExceptions -> logSubscriberExceptions
    boolean logNoSubscriberMessages -> logNoSubscriberMessages
    boolean sendSubscriberExceptionEvent -> sendSubscriberExceptionEvent
    boolean sendNoSubscriberEvent -> sendNoSubscriberEvent
    boolean throwSubscriberException -> throwSubscriberException
    boolean eventInheritance -> eventInheritance
    java.util.concurrent.ExecutorService executorService -> executorService
    java.util.List skipMethodVerificationForClasses -> skipMethodVerificationForClasses
    de.greenrobot.event.EventBusBuilder logSubscriberExceptions(boolean) -> logSubscriberExceptions
    de.greenrobot.event.EventBusBuilder logNoSubscriberMessages(boolean) -> logNoSubscriberMessages
    de.greenrobot.event.EventBusBuilder sendSubscriberExceptionEvent(boolean) -> sendSubscriberExceptionEvent
    de.greenrobot.event.EventBusBuilder sendNoSubscriberEvent(boolean) -> sendNoSubscriberEvent
    de.greenrobot.event.EventBusBuilder throwSubscriberException(boolean) -> throwSubscriberException
    de.greenrobot.event.EventBusBuilder eventInheritance(boolean) -> eventInheritance
    de.greenrobot.event.EventBusBuilder executorService(java.util.concurrent.ExecutorService) -> executorService
    de.greenrobot.event.EventBusBuilder skipMethodVerificationFor(java.lang.Class) -> skipMethodVerificationFor
    de.greenrobot.event.EventBus installDefaultEventBus() -> installDefaultEventBus
    de.greenrobot.event.EventBus build() -> build
de.greenrobot.event.EventBusException -> de.greenrobot.event.EventBusException:
    long serialVersionUID -> serialVersionUID
de.greenrobot.event.HandlerPoster -> de.greenrobot.event.HandlerPoster:
    de.greenrobot.event.PendingPostQueue queue -> queue
    int maxMillisInsideHandleMessage -> maxMillisInsideHandleMessage
    de.greenrobot.event.EventBus eventBus -> eventBus
    boolean handlerActive -> handlerActive
    void enqueue(de.greenrobot.event.Subscription,java.lang.Object) -> enqueue
    void handleMessage(android.os.Message) -> handleMessage
de.greenrobot.event.NoSubscriberEvent -> de.greenrobot.event.NoSubscriberEvent:
    de.greenrobot.event.EventBus eventBus -> eventBus
    java.lang.Object originalEvent -> originalEvent
de.greenrobot.event.PendingPost -> de.greenrobot.event.PendingPost:
    java.util.List pendingPostPool -> pendingPostPool
    java.lang.Object event -> event
    de.greenrobot.event.Subscription subscription -> subscription
    de.greenrobot.event.PendingPost next -> next
    de.greenrobot.event.PendingPost obtainPendingPost(de.greenrobot.event.Subscription,java.lang.Object) -> obtainPendingPost
    void releasePendingPost(de.greenrobot.event.PendingPost) -> releasePendingPost
de.greenrobot.event.PendingPostQueue -> de.greenrobot.event.PendingPostQueue:
    de.greenrobot.event.PendingPost head -> head
    de.greenrobot.event.PendingPost tail -> tail
    void enqueue(de.greenrobot.event.PendingPost) -> enqueue
    de.greenrobot.event.PendingPost poll() -> poll
    de.greenrobot.event.PendingPost poll(int) -> poll
de.greenrobot.event.SubscriberExceptionEvent -> de.greenrobot.event.SubscriberExceptionEvent:
    de.greenrobot.event.EventBus eventBus -> eventBus
    java.lang.Throwable throwable -> throwable
    java.lang.Object causingEvent -> causingEvent
    java.lang.Object causingSubscriber -> causingSubscriber
de.greenrobot.event.SubscriberMethod -> de.greenrobot.event.SubscriberMethod:
    java.lang.reflect.Method method -> method
    de.greenrobot.event.ThreadMode threadMode -> threadMode
    java.lang.Class eventType -> eventType
    java.lang.String methodString -> methodString
    boolean equals(java.lang.Object) -> equals
    void checkMethodString() -> checkMethodString
    int hashCode() -> hashCode
de.greenrobot.event.SubscriberMethodFinder -> de.greenrobot.event.SubscriberMethodFinder:
    java.lang.String ON_EVENT_METHOD_NAME -> ON_EVENT_METHOD_NAME
    int BRIDGE -> BRIDGE
    int SYNTHETIC -> SYNTHETIC
    int MODIFIERS_IGNORE -> MODIFIERS_IGNORE
    java.util.Map methodCache -> methodCache
    java.util.Map skipMethodVerificationForClasses -> skipMethodVerificationForClasses
    java.util.List findSubscriberMethods(java.lang.Class) -> findSubscriberMethods
    void clearCaches() -> clearCaches
de.greenrobot.event.Subscription -> de.greenrobot.event.Subscription:
    java.lang.Object subscriber -> subscriber
    de.greenrobot.event.SubscriberMethod subscriberMethod -> subscriberMethod
    int priority -> priority
    boolean active -> active
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
de.greenrobot.event.ThreadMode -> de.greenrobot.event.ThreadMode:
    de.greenrobot.event.ThreadMode PostThread -> PostThread
    de.greenrobot.event.ThreadMode MainThread -> MainThread
    de.greenrobot.event.ThreadMode BackgroundThread -> BackgroundThread
    de.greenrobot.event.ThreadMode Async -> Async
    de.greenrobot.event.ThreadMode[] $VALUES -> $VALUES
    de.greenrobot.event.ThreadMode[] values() -> values
    de.greenrobot.event.ThreadMode valueOf(java.lang.String) -> valueOf
de.greenrobot.event.util.AsyncExecutor -> de.greenrobot.event.util.AsyncExecutor:
    java.util.concurrent.Executor threadPool -> threadPool
    java.lang.reflect.Constructor failureEventConstructor -> failureEventConstructor
    de.greenrobot.event.EventBus eventBus -> eventBus
    java.lang.Object scope -> scope
    de.greenrobot.event.util.AsyncExecutor$Builder builder() -> builder
    de.greenrobot.event.util.AsyncExecutor create() -> create
    void execute(de.greenrobot.event.util.AsyncExecutor$RunnableEx) -> execute
    java.lang.reflect.Constructor access$200(de.greenrobot.event.util.AsyncExecutor) -> access$200
    java.lang.Object access$300(de.greenrobot.event.util.AsyncExecutor) -> access$300
    de.greenrobot.event.EventBus access$400(de.greenrobot.event.util.AsyncExecutor) -> access$400
de.greenrobot.event.util.AsyncExecutor$1 -> de.greenrobot.event.util.AsyncExecutor$1:
    de.greenrobot.event.util.AsyncExecutor$RunnableEx val$runnable -> val$runnable
    de.greenrobot.event.util.AsyncExecutor this$0 -> this$0
    void run() -> run
de.greenrobot.event.util.AsyncExecutor$Builder -> de.greenrobot.event.util.AsyncExecutor$Builder:
    java.util.concurrent.Executor threadPool -> threadPool
    java.lang.Class failureEventType -> failureEventType
    de.greenrobot.event.EventBus eventBus -> eventBus
    de.greenrobot.event.util.AsyncExecutor$Builder threadPool(java.util.concurrent.Executor) -> threadPool
    de.greenrobot.event.util.AsyncExecutor$Builder failureEventType(java.lang.Class) -> failureEventType
    de.greenrobot.event.util.AsyncExecutor$Builder eventBus(de.greenrobot.event.EventBus) -> eventBus
    de.greenrobot.event.util.AsyncExecutor build() -> build
    de.greenrobot.event.util.AsyncExecutor buildForActivityScope(android.app.Activity) -> buildForActivityScope
    de.greenrobot.event.util.AsyncExecutor buildForScope(java.lang.Object) -> buildForScope
de.greenrobot.event.util.AsyncExecutor$RunnableEx -> de.greenrobot.event.util.AsyncExecutor$RunnableEx:
    void run() -> run
de.greenrobot.event.util.ErrorDialogConfig -> de.greenrobot.event.util.ErrorDialogConfig:
    android.content.res.Resources resources -> resources
    int defaultTitleId -> defaultTitleId
    int defaultErrorMsgId -> defaultErrorMsgId
    de.greenrobot.event.util.ExceptionToResourceMapping mapping -> mapping
    de.greenrobot.event.EventBus eventBus -> eventBus
    boolean logExceptions -> logExceptions
    java.lang.String tagForLoggingExceptions -> tagForLoggingExceptions
    int defaultDialogIconId -> defaultDialogIconId
    java.lang.Class defaultEventTypeOnDialogClosed -> defaultEventTypeOnDialogClosed
    de.greenrobot.event.util.ErrorDialogConfig addMapping(java.lang.Class,int) -> addMapping
    int getMessageIdForThrowable(java.lang.Throwable) -> getMessageIdForThrowable
    void setDefaultDialogIconId(int) -> setDefaultDialogIconId
    void setDefaultEventTypeOnDialogClosed(java.lang.Class) -> setDefaultEventTypeOnDialogClosed
    void disableExceptionLogging() -> disableExceptionLogging
    void setTagForLoggingExceptions(java.lang.String) -> setTagForLoggingExceptions
    void setEventBus(de.greenrobot.event.EventBus) -> setEventBus
    de.greenrobot.event.EventBus getEventBus() -> getEventBus
de.greenrobot.event.util.ErrorDialogFragmentFactory -> de.greenrobot.event.util.ErrorDialogFragmentFactory:
    de.greenrobot.event.util.ErrorDialogConfig config -> config
    java.lang.Object prepareErrorFragment(de.greenrobot.event.util.ThrowableFailureEvent,boolean,android.os.Bundle) -> prepareErrorFragment
    java.lang.Object createErrorFragment(de.greenrobot.event.util.ThrowableFailureEvent,android.os.Bundle) -> createErrorFragment
    java.lang.String getTitleFor(de.greenrobot.event.util.ThrowableFailureEvent,android.os.Bundle) -> getTitleFor
    java.lang.String getMessageFor(de.greenrobot.event.util.ThrowableFailureEvent,android.os.Bundle) -> getMessageFor
de.greenrobot.event.util.ErrorDialogFragmentFactory$Honeycomb -> de.greenrobot.event.util.ErrorDialogFragmentFactory$Honeycomb:
    android.app.Fragment createErrorFragment(de.greenrobot.event.util.ThrowableFailureEvent,android.os.Bundle) -> createErrorFragment
    java.lang.Object createErrorFragment(de.greenrobot.event.util.ThrowableFailureEvent,android.os.Bundle) -> createErrorFragment
de.greenrobot.event.util.ErrorDialogFragmentFactory$Support -> de.greenrobot.event.util.ErrorDialogFragmentFactory$Support:
    android.support.v4.app.Fragment createErrorFragment(de.greenrobot.event.util.ThrowableFailureEvent,android.os.Bundle) -> createErrorFragment
    java.lang.Object createErrorFragment(de.greenrobot.event.util.ThrowableFailureEvent,android.os.Bundle) -> createErrorFragment
de.greenrobot.event.util.ErrorDialogFragments -> de.greenrobot.event.util.ErrorDialogFragments:
    int ERROR_DIALOG_ICON -> ERROR_DIALOG_ICON
    java.lang.Class EVENT_TYPE_ON_CLICK -> EVENT_TYPE_ON_CLICK
    android.app.Dialog createDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener) -> createDialog
    void handleOnClick(android.content.DialogInterface,int,android.app.Activity,android.os.Bundle) -> handleOnClick
de.greenrobot.event.util.ErrorDialogFragments$Honeycomb -> de.greenrobot.event.util.ErrorDialogFragments$Honeycomb:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onClick(android.content.DialogInterface,int) -> onClick
de.greenrobot.event.util.ErrorDialogFragments$Support -> de.greenrobot.event.util.ErrorDialogFragments$Support:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onClick(android.content.DialogInterface,int) -> onClick
de.greenrobot.event.util.ErrorDialogManager -> de.greenrobot.event.util.ErrorDialogManager:
    de.greenrobot.event.util.ErrorDialogFragmentFactory factory -> factory
    java.lang.String TAG_ERROR_DIALOG -> TAG_ERROR_DIALOG
    java.lang.String TAG_ERROR_DIALOG_MANAGER -> TAG_ERROR_DIALOG_MANAGER
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_MESSAGE -> KEY_MESSAGE
    java.lang.String KEY_FINISH_AFTER_DIALOG -> KEY_FINISH_AFTER_DIALOG
    java.lang.String KEY_ICON_ID -> KEY_ICON_ID
    java.lang.String KEY_EVENT_TYPE_ON_CLOSE -> KEY_EVENT_TYPE_ON_CLOSE
    void attachTo(android.app.Activity) -> attachTo
    void attachTo(android.app.Activity,boolean) -> attachTo
    void attachTo(android.app.Activity,boolean,android.os.Bundle) -> attachTo
    void attachTo(android.app.Activity,java.lang.Object,boolean,android.os.Bundle) -> attachTo
    boolean isSupportActivity(android.app.Activity) -> isSupportActivity
    void checkLogException(de.greenrobot.event.util.ThrowableFailureEvent) -> checkLogException
    boolean isInExecutionScope(java.lang.Object,de.greenrobot.event.util.ThrowableFailureEvent) -> isInExecutionScope
    boolean access$000(java.lang.Object,de.greenrobot.event.util.ThrowableFailureEvent) -> access$000
de.greenrobot.event.util.ErrorDialogManager$HoneycombManagerFragment -> de.greenrobot.event.util.ErrorDialogManager$HoneycombManagerFragment:
    boolean finishAfterDialog -> finishAfterDialog
    android.os.Bundle argumentsForErrorDialog -> argumentsForErrorDialog
    de.greenrobot.event.EventBus eventBus -> eventBus
    java.lang.Object executionScope -> executionScope
    void onResume() -> onResume
    void onPause() -> onPause
    void onEventMainThread(de.greenrobot.event.util.ThrowableFailureEvent) -> onEventMainThread
    void attachTo(android.app.Activity,java.lang.Object,boolean,android.os.Bundle) -> attachTo
de.greenrobot.event.util.ErrorDialogManager$SupportManagerFragment -> de.greenrobot.event.util.ErrorDialogManager$SupportManagerFragment:
    boolean finishAfterDialog -> finishAfterDialog
    android.os.Bundle argumentsForErrorDialog -> argumentsForErrorDialog
    de.greenrobot.event.EventBus eventBus -> eventBus
    boolean skipRegisterOnNextResume -> skipRegisterOnNextResume
    java.lang.Object executionScope -> executionScope
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onEventMainThread(de.greenrobot.event.util.ThrowableFailureEvent) -> onEventMainThread
    void attachTo(android.app.Activity,java.lang.Object,boolean,android.os.Bundle) -> attachTo
de.greenrobot.event.util.ExceptionToResourceMapping -> de.greenrobot.event.util.ExceptionToResourceMapping:
    java.util.Map throwableToMsgIdMap -> throwableToMsgIdMap
    java.lang.Integer mapThrowable(java.lang.Throwable) -> mapThrowable
    java.lang.Integer mapThrowableFlat(java.lang.Throwable) -> mapThrowableFlat
    de.greenrobot.event.util.ExceptionToResourceMapping addMapping(java.lang.Class,int) -> addMapping
de.greenrobot.event.util.HasExecutionScope -> de.greenrobot.event.util.HasExecutionScope:
    java.lang.Object getExecutionScope() -> getExecutionScope
    void setExecutionScope(java.lang.Object) -> setExecutionScope
de.greenrobot.event.util.ThrowableFailureEvent -> de.greenrobot.event.util.ThrowableFailureEvent:
    java.lang.Throwable throwable -> throwable
    boolean suppressErrorUi -> suppressErrorUi
    java.lang.Object executionContext -> executionContext
    java.lang.Throwable getThrowable() -> getThrowable
    boolean isSuppressErrorUi() -> isSuppressErrorUi
    java.lang.Object getExecutionScope() -> getExecutionScope
    void setExecutionScope(java.lang.Object) -> setExecutionScope
io.rong.imkit.BuildConfig -> io.rong.imkit.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
io.rong.imkit.CrashHandler -> io.rong.imkit.CrashHandler:
    java.lang.String fTag -> fTag
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> mDefaultHandler
    java.lang.String fCrashReporterExtension -> fCrashReporterExtension
    void init() -> init
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> handleException
    void saveCrashInfoToFile(java.lang.Throwable) -> saveCrashInfoToFile
    boolean isSdCardReady() -> isSdCardReady
    java.lang.String getRoot() -> getRoot
io.rong.imkit.CrashHandler$1 -> io.rong.imkit.CrashHandler$1:
    io.rong.imkit.CrashHandler this$0 -> this$0
    void run() -> run
io.rong.imkit.RCloudContext -> io.rong.imkit.RCloudContext:
    java.lang.String CLIENT_CONNECTED_TO_SDK -> CLIENT_CONNECTED_TO_SDK
    java.lang.String CLIENT_DISCONNECT_TO_SDK -> CLIENT_DISCONNECT_TO_SDK
    java.lang.String CLICK_REPEAT -> CLICK_REPEAT
    io.rong.imkit.version.Version objVer -> objVer
    io.rong.imkit.RCloudContext sS -> sS
    android.content.ComponentName mComponentName -> mComponentName
    android.content.SharedPreferences mPreferences -> mPreferences
    java.lang.String mAppResourceDir -> mAppResourceDir
    io.rong.imlib.RongIMClient mRongIMClient -> mRongIMClient
    com.sea_monster.core.resource.io.FileSysHandler mFileSysHandler -> mFileSysHandler
    java.lang.String appKey -> appKey
    java.util.concurrent.ThreadPoolExecutor mExecutor -> mExecutor
    int mNotificationNewMessageCount -> mNotificationNewMessageCount
    java.util.ArrayList mNotificationUserIdList -> mNotificationUserIdList
    java.util.List mConnectStatusListeners -> mConnectStatusListeners
    io.rong.imkit.RCloudContext$ConnectionStatusListener mConnStatusListener -> mConnStatusListener
    java.lang.String mCurrentTargetId -> mCurrentTargetId
    android.os.Handler mHandler -> mHandler
    int mConnectStatus -> mConnectStatus
    de.greenrobot.event.EventBus mEventBus -> mEventBus
    java.lang.String mCurrentUserId -> mCurrentUserId
    java.util.ArrayList mMessageTypeList -> mMessageTypeList
    io.rong.imkit.RongIM$ConversationBehaviorListener mConversationBehaviorListener -> mConversationBehaviorListener
    io.rong.imkit.RongIM$GetFriendsProvider mGetFriendsProvider -> mGetFriendsProvider
    io.rong.imkit.RongIM$GetUserInfoProvider mGetUserInfoProvider -> mGetUserInfoProvider
    io.rong.imkit.RongIM$OnReceiveMessageListener mOnReceiveMessageListener -> mOnReceiveMessageListener
    io.rong.imkit.RongIM$GetGroupInfoProvider mGetGroupInfoProvider -> mGetGroupInfoProvider
    io.rong.imkit.RongIM$LocationProvider mLocationProvider -> mLocationProvider
    java.lang.String getCurrentUserId() -> getCurrentUserId
    void setCurrentUserId(java.lang.String) -> setCurrentUserId
    void sendKickedBroadCast(android.content.Context) -> sendKickedBroadCast
    io.rong.imkit.RCloudContext getInstance() -> getInstance
    de.greenrobot.event.EventBus getEventBus() -> getEventBus
    void init(android.content.Context,java.lang.String) -> init
    void initService() -> initService
    int getCurrentConnStatus() -> getCurrentConnStatus
    void setConnectionStatusListener(io.rong.imkit.RCloudContext$ConnectionStatusListener) -> setConnectionStatusListener
    void regConnectionStatusListener(io.rong.imkit.RongIM$ConnectionStatusListener) -> regConnectionStatusListener
    void unRegConnectionStatusListener(io.rong.imkit.RongIM$ConnectionStatusListener) -> unRegConnectionStatusListener
    void logout() -> logout
    void sendAction(android.content.Intent) -> sendAction
    boolean isRCloudServiceRuning(java.lang.String) -> isRCloudServiceRuning
    android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    void executorBackgroup(java.lang.Runnable) -> executorBackgroup
    java.lang.String getAppResourceDir() -> getAppResourceDir
    io.rong.imlib.RongIMClient getRongIMClient() -> getRongIMClient
    io.rong.imkit.RongIM$ConversationBehaviorListener getConversationBehaviorListener() -> getConversationBehaviorListener
    void setConversationBehaviorListener(io.rong.imkit.RongIM$ConversationBehaviorListener) -> setConversationBehaviorListener
    io.rong.imkit.RongIM$GetFriendsProvider getGetFriendsProvider() -> getGetFriendsProvider
    void setGetFriendsProvider(io.rong.imkit.RongIM$GetFriendsProvider) -> setGetFriendsProvider
    io.rong.imkit.RongIM$LocationProvider getLocationProvider() -> getLocationProvider
    void setLocationProvider(io.rong.imkit.RongIM$LocationProvider) -> setLocationProvider
    io.rong.imkit.RongIM$GetUserInfoProvider getGetUserInfoProvider() -> getGetUserInfoProvider
    void setGetUserInfoProvider(io.rong.imkit.RongIM$GetUserInfoProvider) -> setGetUserInfoProvider
    void setReceiveMessageListener(io.rong.imkit.RongIM$OnReceiveMessageListener) -> setReceiveMessageListener
    io.rong.imkit.RongIM$OnReceiveMessageListener getOnReceiveMessageListener() -> getOnReceiveMessageListener
    io.rong.imkit.RongIM$GetGroupInfoProvider getGetGroupInfoProvider() -> getGetGroupInfoProvider
    void setGetGroupInfoProvider(io.rong.imkit.RongIM$GetGroupInfoProvider) -> setGetGroupInfoProvider
    void setRongIMClient(io.rong.imlib.RongIMClient) -> setRongIMClient
    java.io.File getResourceDir(android.content.Context) -> getResourceDir
    java.lang.String getAppKey() -> getAppKey
    int getNotificationNewMessageCount() -> getNotificationNewMessageCount
    void setNotificationNewMessageCount(int) -> setNotificationNewMessageCount
    java.util.ArrayList getNotificationUserIdList() -> getNotificationUserIdList
    void clearNotificationUserIdList() -> clearNotificationUserIdList
    java.lang.String getCurrentTargetId() -> getCurrentTargetId
    void setCurrentTargetId(java.lang.String) -> setCurrentTargetId
    boolean isExitMessageType(java.lang.String) -> isExitMessageType
    void setMessageType(java.lang.String) -> setMessageType
    void setMessageType(java.lang.Class) -> setMessageType
    int access$000(io.rong.imkit.RCloudContext) -> access$000
    int access$002(io.rong.imkit.RCloudContext,int) -> access$002
    java.util.List access$100(io.rong.imkit.RCloudContext) -> access$100
    io.rong.imkit.RCloudContext$ConnectionStatusListener access$200(io.rong.imkit.RCloudContext) -> access$200
    void access$300(io.rong.imkit.RCloudContext,android.content.Context) -> access$300
    android.os.Handler access$400(io.rong.imkit.RCloudContext) -> access$400
io.rong.imkit.RCloudContext$1 -> io.rong.imkit.RCloudContext$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    io.rong.imkit.RCloudContext this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.rong.imkit.RCloudContext$2 -> io.rong.imkit.RCloudContext$2:
    android.content.Context val$mContext -> val$mContext
    io.rong.imkit.RCloudContext this$0 -> this$0
    void onChanged(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onChanged
io.rong.imkit.RCloudContext$2$1 -> io.rong.imkit.RCloudContext$2$1:
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus val$status -> val$status
    io.rong.imkit.RCloudContext$2 this$1 -> this$1
    void run() -> run
io.rong.imkit.RCloudContext$3 -> io.rong.imkit.RCloudContext$3:
    java.lang.Runnable val$runnable -> val$runnable
    io.rong.imkit.RCloudContext this$0 -> this$0
    void run() -> run
io.rong.imkit.RCloudContext$ConnectionStatusListener -> io.rong.imkit.RCloudContext$ConnectionStatusListener:
    void onChanged(int) -> onChanged
io.rong.imkit.Res -> io.rong.imkit.Res:
    java.lang.String LOG_TAG -> LOG_TAG
    io.rong.imkit.Res instance -> instance
    java.lang.String packageName -> packageName
    java.lang.Class R_id -> R_id
    java.lang.Class R_drawable -> R_drawable
    java.lang.Class R_layout -> R_layout
    java.lang.Class R_anim -> R_anim
    java.lang.Class R_style -> R_style
    java.lang.Class R_string -> R_string
    java.lang.Class R_array -> R_array
    java.lang.Class R_color -> R_color
    java.lang.Class R_dimen -> R_dimen
    java.lang.Class R_integer -> R_integer
    java.lang.Class R_bool -> R_bool
    java.lang.Class R_styleable -> R_styleable
    java.lang.Class R_attr -> R_attr
    java.lang.String theme -> theme
    io.rong.imkit.Res getInstance(android.content.Context) -> getInstance
    void setPackageName(java.lang.String) -> setPackageName
    int anim(java.lang.String) -> anim
    int id(java.lang.String) -> id
    int drawable(java.lang.String) -> drawable
    int layout(java.lang.String) -> layout
    int style(java.lang.String) -> style
    int string(java.lang.String) -> string
    int array(java.lang.String) -> array
    int color(java.lang.String) -> color
    int dimen(java.lang.String) -> dimen
    int integer(java.lang.String) -> integer
    int bool(java.lang.String) -> bool
    int styleable(java.lang.String) -> styleable
    int attr(java.lang.String) -> attr
    int[] styleables(java.lang.String) -> styleables
    int getRes(java.lang.Class,java.lang.String) -> getRes
    void setTheme(java.lang.String) -> setTheme
    int[] getResArr(java.lang.Class,java.lang.String) -> getResArr
io.rong.imkit.RongActivity -> io.rong.imkit.RongActivity:
    io.rong.imkit.view.ActionBar mActionBar -> mActionBar
    io.rong.imkit.view.LoadingDialog mDialog -> mDialog
    android.os.Handler mHandler -> mHandler
    void onCreate(android.os.Bundle) -> onCreate
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onNewIntent(android.content.Intent) -> onNewIntent
    void enterFragment(android.content.Intent) -> enterFragment
    void reconnect(java.lang.String) -> reconnect
    io.rong.imkit.view.ActionBar getBar() -> getBar
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    io.rong.imkit.view.LoadingDialog access$000(io.rong.imkit.RongActivity) -> access$000
    void access$100(io.rong.imkit.RongActivity,android.content.Intent) -> access$100
    android.os.Handler access$200(io.rong.imkit.RongActivity) -> access$200
io.rong.imkit.RongActivity$1 -> io.rong.imkit.RongActivity$1:
    io.rong.imkit.RongActivity this$0 -> this$0
    void run() -> run
io.rong.imkit.RongActivity$2 -> io.rong.imkit.RongActivity$2:
    io.rong.imkit.RongActivity this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode) -> onError
io.rong.imkit.RongActivity$2$1 -> io.rong.imkit.RongActivity$2$1:
    io.rong.imkit.RongActivity$2 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongActivity$2$2 -> io.rong.imkit.RongActivity$2$2:
    io.rong.imkit.RongActivity$2 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongActivity$3 -> io.rong.imkit.RongActivity$3:
    io.rong.imkit.RongActivity this$0 -> this$0
    void run() -> run
io.rong.imkit.RongIM -> io.rong.imkit.RongIM:
    java.lang.String TAG -> TAG
    io.rong.imkit.RongIM rongIM -> rongIM
    android.content.Context mContext -> mContext
    io.rong.imlib.RongIMClient mRrongIMClient -> mRrongIMClient
    io.rong.imkit.RongIM$ConnectionStatusListener mConnectionStatusListener -> mConnectionStatusListener
    java.lang.String mCurrentProcessName -> mCurrentProcessName
    java.lang.String mMainProcessName -> mMainProcessName
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus mCurrentStatus -> mCurrentStatus
    android.content.SharedPreferences mPreferences -> mPreferences
    android.os.Handler mHandler -> mHandler
    void saveToken(java.lang.String) -> saveToken
    java.lang.String getLastToken() -> getLastToken
    void saveAppKey(java.lang.String) -> saveAppKey
    java.lang.String getAppKey() -> getAppKey
    void init(android.content.Context,java.lang.String,int) -> init
    io.rong.imkit.RongIM connect(java.lang.String,io.rong.imlib.RongIMClient$ConnectCallback) -> connect
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus getCurrentConnectionStatus() -> getCurrentConnectionStatus
    void disconnect(boolean) -> disconnect
    void disconnect() -> disconnect
    io.rong.imkit.RongIM getInstance() -> getInstance
    void startConversationList(android.content.Context) -> startConversationList
    void setConversationBehaviorListener(io.rong.imkit.RongIM$ConversationBehaviorListener) -> setConversationBehaviorListener
    void registerMessageType(java.lang.Class) -> registerMessageType
    void createDiscussionChat(android.content.Context,java.util.List,java.lang.String) -> createDiscussionChat
    void startConversation(android.content.Context,io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.lang.String) -> startConversation
    void startPrivateChat(android.content.Context,java.lang.String,java.lang.String) -> startPrivateChat
    void startChatroom(android.content.Context,java.lang.String,java.lang.String) -> startChatroom
    void startDiscussionChat(android.content.Context,java.lang.String,java.lang.String) -> startDiscussionChat
    void startGroupChat(android.content.Context,java.lang.String,java.lang.String) -> startGroupChat
    void startConversationSetting(android.content.Context,io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> startConversationSetting
    void startCustomerServiceChat(android.content.Context,java.lang.String,java.lang.String) -> startCustomerServiceChat
    io.rong.imlib.RongIMClient$Message sendMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$MessageContent,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    io.rong.imlib.RongIMClient$Message sendTextMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendTextMessage
    io.rong.imlib.RongIMClient$Message sendImageMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendImageMessage
    io.rong.imlib.RongIMClient$Message sendVoiceMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.lang.String,int,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendVoiceMessage
    io.rong.imlib.RongIMClient$Message sendRichContentMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendRichContentMessage
    io.rong.imlib.RongIMClient$Message sendLocationMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,double,double,java.lang.String,android.net.Uri,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendLocationMessage
    java.util.List getConversationList() -> getConversationList
    int getTotalUnreadCount() -> getTotalUnreadCount
    int getUnreadCount(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> getUnreadCount
    void refreshUserInfo(io.rong.imlib.RongIMClient$UserInfo) -> refreshUserInfo
    void syncGroup(java.util.List,io.rong.imkit.RongIM$OperationCallback) -> syncGroup
    void joinGroup(java.lang.String,java.lang.String,io.rong.imkit.RongIM$OperationCallback) -> joinGroup
    void quitGroup(java.lang.String,io.rong.imkit.RongIM$OperationCallback) -> quitGroup
    void joinChatRoom(java.lang.String,int,io.rong.imkit.RongIM$OperationCallback) -> joinChatRoom
    void quitChatRoom(java.lang.String,io.rong.imkit.RongIM$OperationCallback) -> quitChatRoom
    void setGetUserInfoProvider(io.rong.imkit.RongIM$GetUserInfoProvider,boolean) -> setGetUserInfoProvider
    void setGetFriendsProvider(io.rong.imkit.RongIM$GetFriendsProvider) -> setGetFriendsProvider
    void setGetGroupInfoProvider(io.rong.imkit.RongIM$GetGroupInfoProvider) -> setGetGroupInfoProvider
    void setLocationProvider(io.rong.imkit.RongIM$LocationProvider) -> setLocationProvider
    void setReceiveMessageListener(io.rong.imkit.RongIM$OnReceiveMessageListener) -> setReceiveMessageListener
    void setConnectionStatusListener(io.rong.imkit.RongIM$ConnectionStatusListener) -> setConnectionStatusListener
    boolean removeConversation(android.content.Context,io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> removeConversation
    boolean clearMessages(android.content.Context,io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> clearMessages
    void setConversationNotificationStatus(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ConversationNotificationStatus,io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback) -> setConversationNotificationStatus
    void getConversationNotificationStatus(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback) -> getConversationNotificationStatus
    boolean clearConversations(io.rong.imlib.RongIMClient$ConversationType[]) -> clearConversations
    void addToBlacklist(java.lang.String,io.rong.imkit.RongIM$OperationCallback) -> addToBlacklist
    void removeFromBlacklist(java.lang.String,io.rong.imkit.RongIM$OperationCallback) -> removeFromBlacklist
    void getBlacklistStatus(java.lang.String,io.rong.imkit.RongIM$GetUserBlacklistCallback) -> getBlacklistStatus
    void getBlacklist(io.rong.imkit.RongIM$GetBlacklistCallback) -> getBlacklist
    void startDiscussionMemberSelect(android.content.Context,java.lang.String,java.util.List) -> startDiscussionMemberSelect
    void startFriendSelect(android.content.Context) -> startFriendSelect
    void addMemberToDiscussion(java.lang.String,java.util.List,io.rong.imkit.RongIM$OperationCallback) -> addMemberToDiscussion
    void removeMemberFromDiscussion(java.lang.String,java.lang.String,io.rong.imkit.RongIM$OperationCallback) -> removeMemberFromDiscussion
    java.util.List getHistoryMessages(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,int,int) -> getHistoryMessages
    java.util.List getHistoryMessages(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.lang.String,int,int) -> getHistoryMessages
    io.rong.imlib.RongIMClient getRongIMClient() -> getRongIMClient
    boolean setConversationToTop(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,boolean) -> setConversationToTop
    android.os.Handler access$000() -> access$000
    android.content.Context access$100() -> access$100
io.rong.imkit.RongIM$1 -> io.rong.imkit.RongIM$1:
    io.rong.imlib.RongIMClient$ConnectCallback val$callback -> val$callback
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$1$1 -> io.rong.imkit.RongIM$1$1:
    java.lang.String val$userId -> val$userId
    io.rong.imkit.RongIM$1 this$0 -> this$0
    void run() -> run
io.rong.imkit.RongIM$1$2 -> io.rong.imkit.RongIM$1$2:
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$1 this$0 -> this$0
    void run() -> run
io.rong.imkit.RongIM$10 -> io.rong.imkit.RongIM$10:
    io.rong.imkit.RongIM$GetUserBlacklistCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$BlacklistStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$10$1 -> io.rong.imkit.RongIM$10$1:
    io.rong.imlib.RongIMClient$BlacklistStatus val$blacklistStatus -> val$blacklistStatus
    io.rong.imkit.RongIM$10 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$10$2 -> io.rong.imkit.RongIM$10$2:
    io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$10 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$11 -> io.rong.imkit.RongIM$11:
    io.rong.imkit.RongIM$GetBlacklistCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess(java.lang.String[]) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$11$1 -> io.rong.imkit.RongIM$11$1:
    java.lang.String[] val$userIds -> val$userIds
    io.rong.imkit.RongIM$11 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$11$2 -> io.rong.imkit.RongIM$11$2:
    io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$11 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$2 -> io.rong.imkit.RongIM$2:
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess(int) -> onSuccess
    void onError(int,io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode) -> onError
    void onProgress(int,int) -> onProgress
io.rong.imkit.RongIM$3 -> io.rong.imkit.RongIM$3:
    io.rong.imkit.RongIM$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$3$1 -> io.rong.imkit.RongIM$3$1:
    io.rong.imkit.RongIM$3 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$3$2 -> io.rong.imkit.RongIM$3$2:
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$3 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$4 -> io.rong.imkit.RongIM$4:
    io.rong.imkit.RongIM$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$4$1 -> io.rong.imkit.RongIM$4$1:
    io.rong.imkit.RongIM$4 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$4$2 -> io.rong.imkit.RongIM$4$2:
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$4 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$5 -> io.rong.imkit.RongIM$5:
    io.rong.imkit.RongIM$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$5$1 -> io.rong.imkit.RongIM$5$1:
    io.rong.imkit.RongIM$5 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$5$2 -> io.rong.imkit.RongIM$5$2:
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$5 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$6 -> io.rong.imkit.RongIM$6:
    io.rong.imkit.RongIM$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$6$1 -> io.rong.imkit.RongIM$6$1:
    io.rong.imkit.RongIM$6 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$6$2 -> io.rong.imkit.RongIM$6$2:
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$6 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$7 -> io.rong.imkit.RongIM$7:
    io.rong.imkit.RongIM$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$7$1 -> io.rong.imkit.RongIM$7$1:
    io.rong.imkit.RongIM$7 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$7$2 -> io.rong.imkit.RongIM$7$2:
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$7 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$8 -> io.rong.imkit.RongIM$8:
    io.rong.imkit.RongIM$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$8$1 -> io.rong.imkit.RongIM$8$1:
    io.rong.imkit.RongIM$8 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$8$2 -> io.rong.imkit.RongIM$8$2:
    io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$8 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$9 -> io.rong.imkit.RongIM$9:
    io.rong.imkit.RongIM$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIM this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$9$1 -> io.rong.imkit.RongIM$9$1:
    io.rong.imkit.RongIM$9 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$9$2 -> io.rong.imkit.RongIM$9$2:
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.RongIM$9 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongIM$ConnectionStatusListener -> io.rong.imkit.RongIM$ConnectionStatusListener:
    void onChanged(io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus) -> onChanged
io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus -> io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus:
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus DISCONNECTED -> DISCONNECTED
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus CONNECTED -> CONNECTED
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus CONNECTING -> CONNECTING
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus UNKNOWN -> UNKNOWN
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus NETWORK_UNAVAILABLE -> NETWORK_UNAVAILABLE
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus KICKED_OFFLINE_BY_OTHER_CLIENT -> KICKED_OFFLINE_BY_OTHER_CLIENT
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus LOGIN_ON_WEB -> LOGIN_ON_WEB
    int code -> code
    java.lang.String msg -> msg
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus[] $VALUES -> $VALUES
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus[] values() -> values
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imkit.RongIM$ConnectionStatusListener$ConnectionStatus setValue(int) -> setValue
io.rong.imkit.RongIM$ConversationBehaviorListener -> io.rong.imkit.RongIM$ConversationBehaviorListener:
    boolean onClickUserPortrait(android.content.Context,io.rong.imlib.RongIMClient$ConversationType,io.rong.imlib.RongIMClient$UserInfo) -> onClickUserPortrait
    boolean onClickMessage(android.content.Context,io.rong.imlib.RongIMClient$Message) -> onClickMessage
io.rong.imkit.RongIM$GetBlacklistCallback -> io.rong.imkit.RongIM$GetBlacklistCallback:
    void onSuccess(java.lang.String[]) -> onSuccess
    void onError(io.rong.imkit.RongIM$GetBlacklistCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$GetBlacklistCallback$ErrorCode -> io.rong.imkit.RongIM$GetBlacklistCallback$ErrorCode:
    io.rong.imkit.RongIM$GetBlacklistCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imkit.RongIM$GetBlacklistCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imkit.RongIM$GetBlacklistCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imkit.RongIM$GetBlacklistCallback$ErrorCode[] values() -> values
    io.rong.imkit.RongIM$GetBlacklistCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imkit.RongIM$GetBlacklistCallback$ErrorCode setValue(int) -> setValue
io.rong.imkit.RongIM$GetFriendsProvider -> io.rong.imkit.RongIM$GetFriendsProvider:
    java.util.List getFriends() -> getFriends
io.rong.imkit.RongIM$GetGroupInfoProvider -> io.rong.imkit.RongIM$GetGroupInfoProvider:
    io.rong.imlib.RongIMClient$Group getGroupInfo(java.lang.String) -> getGroupInfo
io.rong.imkit.RongIM$GetUserBlacklistCallback -> io.rong.imkit.RongIM$GetUserBlacklistCallback:
    void onSuccess(io.rong.imlib.RongIMClient$BlacklistStatus) -> onSuccess
    void onError(io.rong.imkit.RongIM$GetUserBlacklistCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$GetUserBlacklistCallback$ErrorCode -> io.rong.imkit.RongIM$GetUserBlacklistCallback$ErrorCode:
    io.rong.imkit.RongIM$GetUserBlacklistCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imkit.RongIM$GetUserBlacklistCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imkit.RongIM$GetUserBlacklistCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imkit.RongIM$GetUserBlacklistCallback$ErrorCode[] values() -> values
    io.rong.imkit.RongIM$GetUserBlacklistCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imkit.RongIM$GetUserBlacklistCallback$ErrorCode setValue(int) -> setValue
io.rong.imkit.RongIM$GetUserInfoProvider -> io.rong.imkit.RongIM$GetUserInfoProvider:
    io.rong.imlib.RongIMClient$UserInfo getUserInfo(java.lang.String) -> getUserInfo
io.rong.imkit.RongIM$LocationProvider -> io.rong.imkit.RongIM$LocationProvider:
    void onStartLocation(android.content.Context,io.rong.imkit.RongIM$LocationProvider$LocationCallback) -> onStartLocation
io.rong.imkit.RongIM$LocationProvider$LocationCallback -> io.rong.imkit.RongIM$LocationProvider$LocationCallback:
    void onSuccess(io.rong.message.LocationMessage) -> onSuccess
    void onFailure(java.lang.String) -> onFailure
io.rong.imkit.RongIM$OnReceiveMessageListener -> io.rong.imkit.RongIM$OnReceiveMessageListener:
    void onReceived(io.rong.imlib.RongIMClient$Message,int) -> onReceived
io.rong.imkit.RongIM$OperationCallback -> io.rong.imkit.RongIM$OperationCallback:
    void onSuccess() -> onSuccess
    void onError(io.rong.imkit.RongIM$OperationCallback$ErrorCode) -> onError
io.rong.imkit.RongIM$OperationCallback$ErrorCode -> io.rong.imkit.RongIM$OperationCallback$ErrorCode:
    io.rong.imkit.RongIM$OperationCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imkit.RongIM$OperationCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imkit.RongIM$OperationCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imkit.RongIM$OperationCallback$ErrorCode[] values() -> values
    io.rong.imkit.RongIM$OperationCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imkit.RongIM$OperationCallback$ErrorCode setValue(int) -> setValue
io.rong.imkit.RongSecActivity -> io.rong.imkit.RongSecActivity:
io.rong.imkit.RongSingleActivity -> io.rong.imkit.RongSingleActivity:
    void onCreate(android.os.Bundle) -> onCreate
io.rong.imkit.activity.BaseActivity -> io.rong.imkit.activity.BaseActivity:
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View getViewById(int) -> getViewById
    android.view.View getViewById(java.lang.String) -> getViewById
    int setContentViewResId() -> setContentViewResId
    void initView() -> initView
    void initData() -> initData
    io.rong.imkit.model.UIUserInfo getUserInfo(java.lang.String) -> getUserInfo
io.rong.imkit.adapter.BaseAdapter -> io.rong.imkit.adapter.BaseAdapter:
    java.util.List dataSet -> dataSet
    android.os.Handler handler -> handler
    android.content.Context mContext -> mContext
    android.widget.ListView mListView -> mListView
    android.content.Context getContext() -> getContext
    void addData(java.lang.Object) -> addData
    void addData(java.util.Collection) -> addData
    void addData(int,java.util.Collection) -> addData
    void removeData(java.util.Collection) -> removeData
    void removeAll() -> removeAll
    void remove(java.lang.Object) -> remove
    void remove(int) -> remove
    java.util.List subData(int,int) -> subData
    int getCount() -> getCount
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    void setItem(int,java.lang.Object) -> setItem
    void addItem(int,java.lang.Object) -> addItem
    void addItems(int,java.util.Collection) -> addItems
    io.rong.imkit.model.UIUserInfo getUserInfo(java.lang.String) -> getUserInfo
    void setListView(android.widget.ListView) -> setListView
    void notifyDataSetChanged(int) -> notifyDataSetChanged
    io.rong.imlib.RongIMClient$UserInfo getCurrentUserInfo() -> getCurrentUserInfo
io.rong.imkit.adapter.BaseUIAdapter -> io.rong.imkit.adapter.BaseUIAdapter:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getView(int,android.view.View,android.view.ViewGroup,io.rong.imkit.adapter.BaseUIAdapter$ViewHolder) -> getView
    int setItemLayoutRes() -> setItemLayoutRes
io.rong.imkit.adapter.BaseUIAdapter$ViewHolder -> io.rong.imkit.adapter.BaseUIAdapter$ViewHolder:
    android.util.SparseArray views -> views
    io.rong.imkit.adapter.BaseUIAdapter this$0 -> this$0
    android.view.View obtainView(android.view.View,int) -> obtainView
    android.view.View obtainView(android.view.View,java.lang.String) -> obtainView
io.rong.imkit.adapter.BaseViewProvider -> io.rong.imkit.adapter.BaseViewProvider:
    io.rong.imkit.common.MessageContext mContext -> mContext
    android.view.View mConvertView -> mConvertView
    io.rong.imkit.adapter.BaseViewProvider$OnGetDataListener mOnGetDataListener -> mOnGetDataListener
    io.rong.imkit.adapter.BaseViewProvider$OnMessageItemClickListener mOnMessageItemClickListener -> mOnMessageItemClickListener
    android.view.View getItemView(android.view.View,android.view.LayoutInflater,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
    android.view.View getConvertView() -> getConvertView
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getItemView(android.view.View,io.rong.imkit.adapter.BaseViewProvider$ViewHolder,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
    void setOnMessageItemClickListener(io.rong.imkit.adapter.BaseViewProvider$OnMessageItemClickListener) -> setOnMessageItemClickListener
    io.rong.imlib.RongIMClient$UserInfo onPortaitClick(io.rong.imlib.RongIMClient$Message,io.rong.imkit.model.UIUserInfo) -> onPortaitClick
    io.rong.imlib.RongIMClient$UserInfo onPortaitClick(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$UserInfo) -> onPortaitClick
    io.rong.imlib.RongIMClient$UserInfo onPortaitClick(io.rong.imlib.RongIMClient$Message,java.lang.String) -> onPortaitClick
    boolean onMessageClick(io.rong.imlib.RongIMClient$Message) -> onMessageClick
    void setOnGetDataListener(io.rong.imkit.adapter.BaseViewProvider$OnGetDataListener) -> setOnGetDataListener
io.rong.imkit.adapter.BaseViewProvider$OnGetDataListener -> io.rong.imkit.adapter.BaseViewProvider$OnGetDataListener:
    void getDiscussionInfo(int,java.lang.String) -> getDiscussionInfo
    void getUserInfo(int,java.lang.String,long) -> getUserInfo
io.rong.imkit.adapter.BaseViewProvider$OnMessageItemClickListener -> io.rong.imkit.adapter.BaseViewProvider$OnMessageItemClickListener:
    void onMessageClick(io.rong.imkit.model.UIMessage,android.view.View) -> onMessageClick
    void onMessageLongClick(io.rong.imkit.model.UIMessage) -> onMessageLongClick
    void onMessageDoubleClick(io.rong.imkit.model.UIMessage) -> onMessageDoubleClick
    void onResendMessage(io.rong.imkit.model.UIMessage,int) -> onResendMessage
io.rong.imkit.adapter.BaseViewProvider$ViewHolder -> io.rong.imkit.adapter.BaseViewProvider$ViewHolder:
    android.util.SparseArray views -> views
    io.rong.imkit.adapter.BaseViewProvider this$0 -> this$0
    android.view.View obtainView(android.view.View,int) -> obtainView
    android.view.View obtainView(android.view.View,java.lang.String) -> obtainView
io.rong.imkit.adapter.ConversationGroupListAdapter -> io.rong.imkit.adapter.ConversationGroupListAdapter:
    io.rong.imkit.adapter.ConversationGroupListAdapter$OnGetDataListener mOnGetDataListener -> mOnGetDataListener
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setOnGetDataListener(io.rong.imkit.adapter.ConversationGroupListAdapter$OnGetDataListener) -> setOnGetDataListener
io.rong.imkit.adapter.ConversationGroupListAdapter$OnGetDataListener -> io.rong.imkit.adapter.ConversationGroupListAdapter$OnGetDataListener:
    void getDiscussionInfo(int,java.lang.String) -> getDiscussionInfo
    void getUserInfo(int,java.lang.String) -> getUserInfo
    void getGroupInfo(java.lang.String) -> getGroupInfo
io.rong.imkit.adapter.ConversationGroupListAdapter$ViewHodler -> io.rong.imkit.adapter.ConversationGroupListAdapter$ViewHodler:
    android.view.View layout -> layout
    io.rong.imkit.view.AsyncImageView icon -> icon
    android.widget.TextView message -> message
    android.widget.TextView username -> username
    android.widget.TextView time -> time
    android.widget.TextView content -> content
    io.rong.imkit.adapter.ConversationGroupListAdapter this$0 -> this$0
io.rong.imkit.adapter.ConversationListAdapter -> io.rong.imkit.adapter.ConversationListAdapter:
    io.rong.imkit.adapter.ConversationListAdapter$OnGetDataListener mOnGetDataListener -> mOnGetDataListener
    boolean mIsGroup -> mIsGroup
    boolean isIsGroup() -> isIsGroup
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setContent(int,boolean,io.rong.imkit.adapter.ConversationListAdapter$ViewHodler,io.rong.imkit.model.UIConversation) -> setContent
    android.text.SpannableStringBuilder getContent(int,io.rong.imkit.model.UIConversation,boolean,boolean) -> getContent
    void setOnGetDataListener(io.rong.imkit.adapter.ConversationListAdapter$OnGetDataListener) -> setOnGetDataListener
io.rong.imkit.adapter.ConversationListAdapter$OnGetDataListener -> io.rong.imkit.adapter.ConversationListAdapter$OnGetDataListener:
    void getDiscussionInfo(int,java.lang.String) -> getDiscussionInfo
    void getUserInfo(int,java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$ConversationType) -> getUserInfo
    void getGroupInfo(java.lang.String) -> getGroupInfo
io.rong.imkit.adapter.ConversationListAdapter$ViewHodler -> io.rong.imkit.adapter.ConversationListAdapter$ViewHodler:
    android.view.View layout -> layout
    io.rong.imkit.view.AsyncImageView icon -> icon
    android.widget.TextView message -> message
    android.widget.TextView username -> username
    android.widget.TextView time -> time
    android.widget.TextView content -> content
    android.widget.ImageView imageView -> imageView
    io.rong.imkit.adapter.ConversationListAdapter this$0 -> this$0
io.rong.imkit.adapter.ConversationMemberGridViewAdapter -> io.rong.imkit.adapter.ConversationMemberGridViewAdapter:
    boolean isAdd -> isAdd
    boolean isSub -> isSub
    boolean isDeleteState -> isDeleteState
    io.rong.imkit.adapter.ConversationMemberGridViewAdapter$OnGridViewImageLisenter mGridViewImageLisenter -> mGridViewImageLisenter
    io.rong.imkit.adapter.ConversationListAdapter$OnGetDataListener mOnGetDataListener -> mOnGetDataListener
    void setOnGetDataListener(io.rong.imkit.adapter.ConversationListAdapter$OnGetDataListener) -> setOnGetDataListener
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int setItemLayoutRes() -> setItemLayoutRes
    void addAddButtonItem() -> addAddButtonItem
    void addSubButtonItem() -> addSubButtonItem
    void deleteToggle(boolean) -> deleteToggle
    void setGridViewImageLisenter(io.rong.imkit.adapter.ConversationMemberGridViewAdapter$OnGridViewImageLisenter) -> setGridViewImageLisenter
    boolean isDeleteState() -> isDeleteState
    boolean isAdd() -> isAdd
    void setAdd(boolean) -> setAdd
    boolean isSub() -> isSub
    void setSub(boolean) -> setSub
    io.rong.imkit.adapter.ConversationMemberGridViewAdapter$OnGridViewImageLisenter access$000(io.rong.imkit.adapter.ConversationMemberGridViewAdapter) -> access$000
io.rong.imkit.adapter.ConversationMemberGridViewAdapter$1 -> io.rong.imkit.adapter.ConversationMemberGridViewAdapter$1:
    java.lang.String val$userId -> val$userId
    int val$aPosition -> val$aPosition
    io.rong.imkit.adapter.ConversationMemberGridViewAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ConversationMemberGridViewAdapter$OnGridViewImageLisenter -> io.rong.imkit.adapter.ConversationMemberGridViewAdapter$OnGridViewImageLisenter:
    void onGridViewImageClick(android.view.View,int) -> onGridViewImageClick
io.rong.imkit.adapter.ConversationMemberGridViewAdapter$ViewHolder -> io.rong.imkit.adapter.ConversationMemberGridViewAdapter$ViewHolder:
    io.rong.imkit.view.AsyncImageView portaintImageView -> portaintImageView
    android.widget.ImageView deleteImageView -> deleteImageView
    android.widget.TextView nameTextView -> nameTextView
    android.widget.RelativeLayout relativeLayout -> relativeLayout
    io.rong.imkit.adapter.ConversationMemberGridViewAdapter this$0 -> this$0
io.rong.imkit.adapter.FriendListAdapter -> io.rong.imkit.adapter.FriendListAdapter:
    android.view.LayoutInflater mInflater -> mInflater
    io.rong.imkit.adapter.FriendListAdapter$FriendFilter mFilter -> mFilter
    java.util.ArrayList mViewList -> mViewList
    void setAdapterData(java.util.List) -> setAdapterData
    android.view.View newView(android.content.Context,int,java.util.List,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,java.util.List,int) -> bindView
    android.view.View newHeaderView(android.content.Context,int,java.util.List,android.view.ViewGroup) -> newHeaderView
    void bindHeaderView(android.view.View,int,java.util.List) -> bindHeaderView
    android.widget.SectionIndexer updateIndexer(io.rong.imkit.view.CompositeAdapter$Partition[]) -> updateIndexer
    void configurePinnedHeader(android.view.View,int,int) -> configurePinnedHeader
    void newSetTag(android.view.View,io.rong.imkit.adapter.FriendListAdapter$ViewHolder,int,java.util.List) -> newSetTag
    void destroy() -> destroy
    android.widget.Filter getFilter() -> getFilter
    void onItemClick(java.lang.String,android.widget.CheckBox) -> onItemClick
io.rong.imkit.adapter.FriendListAdapter$FriendFilter -> io.rong.imkit.adapter.FriendListAdapter$FriendFilter:
    io.rong.imkit.adapter.FriendListAdapter this$0 -> this$0
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
io.rong.imkit.adapter.FriendListAdapter$OnFilterFinished -> io.rong.imkit.adapter.FriendListAdapter$OnFilterFinished:
    void onFilterFinished() -> onFilterFinished
io.rong.imkit.adapter.FriendListAdapter$PinnedHeaderCache -> io.rong.imkit.adapter.FriendListAdapter$PinnedHeaderCache:
    android.widget.TextView titleView -> titleView
    android.content.res.ColorStateList textColor -> textColor
    android.graphics.drawable.Drawable background -> background
    io.rong.imkit.adapter.FriendListAdapter this$0 -> this$0
io.rong.imkit.adapter.FriendListAdapter$ViewHolder -> io.rong.imkit.adapter.FriendListAdapter$ViewHolder:
    android.widget.TextView name -> name
    io.rong.imkit.view.AsyncImageView photo -> photo
    java.lang.String userId -> userId
    io.rong.imkit.model.Friend friend -> friend
    android.widget.CheckBox choice -> choice
io.rong.imkit.adapter.FriendMultiChoiceAdapter -> io.rong.imkit.adapter.FriendMultiChoiceAdapter:
    java.util.List mChoiceFriendIds -> mChoiceFriendIds
    io.rong.imkit.adapter.FriendMultiChoiceAdapter$MutilChoiceCallback mCallback -> mCallback
    java.util.ArrayList mFriends -> mFriends
    void bindView(android.view.View,int,java.util.List,int) -> bindView
    void newSetTag(android.view.View,io.rong.imkit.adapter.FriendListAdapter$ViewHolder,int,java.util.List) -> newSetTag
    void onItemClick(java.lang.String,android.widget.CheckBox) -> onItemClick
    java.util.List getChoiceList() -> getChoiceList
    java.util.ArrayList getChoiceUserInfos() -> getChoiceUserInfos
    void setCallback(io.rong.imkit.adapter.FriendMultiChoiceAdapter$MutilChoiceCallback) -> setCallback
io.rong.imkit.adapter.FriendMultiChoiceAdapter$MutilChoiceCallback -> io.rong.imkit.adapter.FriendMultiChoiceAdapter$MutilChoiceCallback:
    void callback(int) -> callback
io.rong.imkit.adapter.IBeanItemView -> io.rong.imkit.adapter.IBeanItemView:
    io.rong.imkit.adapter.IViewProvider getItemViewProvider(io.rong.imkit.common.MessageContext) -> getItemViewProvider
io.rong.imkit.adapter.IViewProvider -> io.rong.imkit.adapter.IViewProvider:
    android.view.View getItemView(android.view.View,android.view.LayoutInflater,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
    android.view.View getConvertView() -> getConvertView
io.rong.imkit.adapter.ImageItemViewProvider -> io.rong.imkit.adapter.ImageItemViewProvider:
    io.rong.imkit.model.UIUserInfo mUserInfo -> mUserInfo
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getItemView(android.view.View,io.rong.imkit.adapter.BaseViewProvider$ViewHolder,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
io.rong.imkit.adapter.ImageItemViewProvider$1 -> io.rong.imkit.adapter.ImageItemViewProvider$1:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageItemViewProvider$2 -> io.rong.imkit.adapter.ImageItemViewProvider$2:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageItemViewProvider$3 -> io.rong.imkit.adapter.ImageItemViewProvider$3:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageItemViewProvider$4 -> io.rong.imkit.adapter.ImageItemViewProvider$4:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.ImageItemViewProvider$5 -> io.rong.imkit.adapter.ImageItemViewProvider$5:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageItemViewProvider$6 -> io.rong.imkit.adapter.ImageItemViewProvider$6:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.ImageItemViewProvider$7 -> io.rong.imkit.adapter.ImageItemViewProvider$7:
    io.rong.imkit.model.UIMessage val$message -> val$message
    int val$position -> val$position
    io.rong.imkit.adapter.ImageItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageItemViewProvider$8 -> io.rong.imkit.adapter.ImageItemViewProvider$8:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.ImageTextItemViewProvider -> io.rong.imkit.adapter.ImageTextItemViewProvider:
    io.rong.imkit.model.UIUserInfo mUserInfo -> mUserInfo
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getItemView(android.view.View,io.rong.imkit.adapter.BaseViewProvider$ViewHolder,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
io.rong.imkit.adapter.ImageTextItemViewProvider$1 -> io.rong.imkit.adapter.ImageTextItemViewProvider$1:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageTextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageTextItemViewProvider$2 -> io.rong.imkit.adapter.ImageTextItemViewProvider$2:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageTextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageTextItemViewProvider$3 -> io.rong.imkit.adapter.ImageTextItemViewProvider$3:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageTextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageTextItemViewProvider$4 -> io.rong.imkit.adapter.ImageTextItemViewProvider$4:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageTextItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.ImageTextItemViewProvider$5 -> io.rong.imkit.adapter.ImageTextItemViewProvider$5:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageTextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageTextItemViewProvider$6 -> io.rong.imkit.adapter.ImageTextItemViewProvider$6:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageTextItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.ImageTextItemViewProvider$7 -> io.rong.imkit.adapter.ImageTextItemViewProvider$7:
    io.rong.imkit.model.UIMessage val$message -> val$message
    int val$position -> val$position
    io.rong.imkit.adapter.ImageTextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.ImageTextItemViewProvider$8 -> io.rong.imkit.adapter.ImageTextItemViewProvider$8:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.ImageTextItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.InfoNotificationViewProvider -> io.rong.imkit.adapter.InfoNotificationViewProvider:
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getItemView(android.view.View,io.rong.imkit.adapter.BaseViewProvider$ViewHolder,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
io.rong.imkit.adapter.LocationItemViewProvider -> io.rong.imkit.adapter.LocationItemViewProvider:
    io.rong.imkit.model.UIUserInfo mUserInfo -> mUserInfo
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getItemView(android.view.View,io.rong.imkit.adapter.BaseViewProvider$ViewHolder,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
io.rong.imkit.adapter.LocationItemViewProvider$1 -> io.rong.imkit.adapter.LocationItemViewProvider$1:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.LocationItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.LocationItemViewProvider$2 -> io.rong.imkit.adapter.LocationItemViewProvider$2:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.LocationItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.LocationItemViewProvider$3 -> io.rong.imkit.adapter.LocationItemViewProvider$3:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.LocationItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.LocationItemViewProvider$4 -> io.rong.imkit.adapter.LocationItemViewProvider$4:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.LocationItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.LocationItemViewProvider$5 -> io.rong.imkit.adapter.LocationItemViewProvider$5:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.LocationItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.LocationItemViewProvider$6 -> io.rong.imkit.adapter.LocationItemViewProvider$6:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.LocationItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.LocationItemViewProvider$7 -> io.rong.imkit.adapter.LocationItemViewProvider$7:
    io.rong.imkit.model.UIMessage val$message -> val$message
    int val$position -> val$position
    io.rong.imkit.adapter.LocationItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.LocationItemViewProvider$8 -> io.rong.imkit.adapter.LocationItemViewProvider$8:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.LocationItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.MitulItemViewListAdapter -> io.rong.imkit.adapter.MitulItemViewListAdapter:
    android.view.LayoutInflater mInflater -> mInflater
    java.util.HashMap mViewProviderMap -> mViewProviderMap
    io.rong.imkit.adapter.BaseViewProvider$OnMessageItemClickListener mOnMessageItemClickListener -> mOnMessageItemClickListener
    io.rong.imkit.adapter.BaseViewProvider$OnGetDataListener mOnGetDataListener -> mOnGetDataListener
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setOnMessageItemClickListener(io.rong.imkit.adapter.BaseViewProvider$OnMessageItemClickListener) -> setOnMessageItemClickListener
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void setOnGetDataListener(io.rong.imkit.adapter.BaseViewProvider$OnGetDataListener) -> setOnGetDataListener
io.rong.imkit.adapter.NotificationViewProvider -> io.rong.imkit.adapter.NotificationViewProvider:
    io.rong.imkit.model.UIUserInfo mUserInfo -> mUserInfo
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getItemView(android.view.View,io.rong.imkit.adapter.BaseViewProvider$ViewHolder,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
io.rong.imkit.adapter.TextItemViewProvider -> io.rong.imkit.adapter.TextItemViewProvider:
    io.rong.imkit.model.UIUserInfo mUserInfo -> mUserInfo
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getItemView(android.view.View,io.rong.imkit.adapter.BaseViewProvider$ViewHolder,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
io.rong.imkit.adapter.TextItemViewProvider$1 -> io.rong.imkit.adapter.TextItemViewProvider$1:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.TextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.TextItemViewProvider$2 -> io.rong.imkit.adapter.TextItemViewProvider$2:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.TextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.TextItemViewProvider$3 -> io.rong.imkit.adapter.TextItemViewProvider$3:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.TextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.TextItemViewProvider$4 -> io.rong.imkit.adapter.TextItemViewProvider$4:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.TextItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.TextItemViewProvider$5 -> io.rong.imkit.adapter.TextItemViewProvider$5:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.TextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.TextItemViewProvider$6 -> io.rong.imkit.adapter.TextItemViewProvider$6:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.TextItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.TextItemViewProvider$7 -> io.rong.imkit.adapter.TextItemViewProvider$7:
    io.rong.imkit.model.UIMessage val$message -> val$message
    int val$position -> val$position
    io.rong.imkit.adapter.TextItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.UnknownMessageItemProvider -> io.rong.imkit.adapter.UnknownMessageItemProvider:
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getItemView(android.view.View,io.rong.imkit.adapter.BaseViewProvider$ViewHolder,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
io.rong.imkit.adapter.VoiceItemViewProvider -> io.rong.imkit.adapter.VoiceItemViewProvider:
    io.rong.imkit.model.UIUserInfo mUserInfo -> mUserInfo
    int setItemLayoutRes() -> setItemLayoutRes
    android.view.View getItemView(android.view.View,io.rong.imkit.adapter.BaseViewProvider$ViewHolder,io.rong.imkit.model.RCloudType,int,java.util.List) -> getItemView
    java.lang.String getDimenStr(long) -> getDimenStr
io.rong.imkit.adapter.VoiceItemViewProvider$1 -> io.rong.imkit.adapter.VoiceItemViewProvider$1:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.VoiceItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.VoiceItemViewProvider$2 -> io.rong.imkit.adapter.VoiceItemViewProvider$2:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.VoiceItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.VoiceItemViewProvider$3 -> io.rong.imkit.adapter.VoiceItemViewProvider$3:
    android.widget.ImageView val$messageRightContent -> val$messageRightContent
    io.rong.imkit.adapter.VoiceItemViewProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.adapter.VoiceItemViewProvider$4 -> io.rong.imkit.adapter.VoiceItemViewProvider$4:
    android.widget.ImageView val$messageLeftContent -> val$messageLeftContent
    io.rong.imkit.adapter.VoiceItemViewProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.adapter.VoiceItemViewProvider$5 -> io.rong.imkit.adapter.VoiceItemViewProvider$5:
    io.rong.imkit.model.UIMessage val$message -> val$message
    android.widget.ImageView val$messageRightContent -> val$messageRightContent
    io.rong.imkit.adapter.VoiceItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.VoiceItemViewProvider$6 -> io.rong.imkit.adapter.VoiceItemViewProvider$6:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.VoiceItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.VoiceItemViewProvider$7 -> io.rong.imkit.adapter.VoiceItemViewProvider$7:
    io.rong.imkit.model.UIMessage val$message -> val$message
    android.widget.ImageView val$messageLeftContent -> val$messageLeftContent
    io.rong.imkit.adapter.VoiceItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.adapter.VoiceItemViewProvider$8 -> io.rong.imkit.adapter.VoiceItemViewProvider$8:
    io.rong.imkit.model.UIMessage val$message -> val$message
    io.rong.imkit.adapter.VoiceItemViewProvider this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.adapter.VoiceItemViewProvider$9 -> io.rong.imkit.adapter.VoiceItemViewProvider$9:
    io.rong.imkit.model.UIMessage val$message -> val$message
    int val$position -> val$position
    io.rong.imkit.adapter.VoiceItemViewProvider this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.broadcast.SendMessageBroadcast -> io.rong.imkit.broadcast.SendMessageBroadcast:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.imkit.broadcast.SendMessageBroadcast$1 -> io.rong.imkit.broadcast.SendMessageBroadcast$1:
    java.lang.String val$objectName -> val$objectName
    io.rong.imkit.broadcast.SendMessageBroadcast this$0 -> this$0
    void onSuccess(int) -> onSuccess
    void onError(int,io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode) -> onError
    void onProgress(int,int) -> onProgress
io.rong.imkit.common.IVoiceHandler -> io.rong.imkit.common.IVoiceHandler:
    void setPlayListener(io.rong.imkit.common.IVoiceHandler$OnPlayListener) -> setPlayListener
    void setRecListener(io.rong.imkit.common.IVoiceHandler$OnRecListener) -> setRecListener
    void play(android.net.Uri[]) -> play
    void stop() -> stop
    android.net.Uri getCurrentPlayUri() -> getCurrentPlayUri
    void startRec() -> startRec
    android.net.Uri stopRec(boolean) -> stopRec
    int getCurrentDb() -> getCurrentDb
io.rong.imkit.common.IVoiceHandler$OnPlayListener -> io.rong.imkit.common.IVoiceHandler$OnPlayListener:
    void onPlay() -> onPlay
    void onCover(boolean) -> onCover
    void onStop() -> onStop
io.rong.imkit.common.IVoiceHandler$OnRecListener -> io.rong.imkit.common.IVoiceHandler$OnRecListener:
    void onRec() -> onRec
    void onCover(boolean) -> onCover
    void onCompleted(android.net.Uri) -> onCompleted
io.rong.imkit.common.IVoiceHandler$VoiceException -> io.rong.imkit.common.IVoiceHandler$VoiceException:
io.rong.imkit.common.IVoiceHandler$VoiceHandler -> io.rong.imkit.common.IVoiceHandler$VoiceHandler:
    android.media.AudioManager mAudioManager -> mAudioManager
    android.hardware.SensorManager mSensorManager -> mSensorManager
    android.os.PowerManager mPowerManager -> mPowerManager
    android.media.MediaPlayer mMediaPlayer -> mMediaPlayer
    android.media.MediaRecorder mMediaRecorder -> mMediaRecorder
    android.hardware.Sensor mSensor -> mSensor
    android.content.Context mContext -> mContext
    android.os.PowerManager$WakeLock mLock -> mLock
    java.io.File recRoot -> recRoot
    android.net.Uri mCurrentRecUri -> mCurrentRecUri
    java.util.List mUriCollections -> mUriCollections
    io.rong.imkit.common.IVoiceHandler$OnPlayListener mPlayListener -> mPlayListener
    io.rong.imkit.common.IVoiceHandler$OnRecListener mRecListener -> mRecListener
    int PLAY_VOICE_COLLECTIONS -> PLAY_VOICE_COLLECTIONS
    float mLastEventValue -> mLastEventValue
    void setPlayListener(io.rong.imkit.common.IVoiceHandler$OnPlayListener) -> setPlayListener
    void setRecListener(io.rong.imkit.common.IVoiceHandler$OnRecListener) -> setRecListener
    void play(android.net.Uri) -> play
    void play(android.net.Uri[]) -> play
    void stop() -> stop
    void completePlay() -> completePlay
    android.net.Uri getCurrentPlayUri() -> getCurrentPlayUri
    void startRec() -> startRec
    android.net.Uri stopRec(boolean) -> stopRec
    int getCurrentDb() -> getCurrentDb
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    android.os.PowerManager$WakeLock access$000(io.rong.imkit.common.IVoiceHandler$VoiceHandler) -> access$000
    io.rong.imkit.common.IVoiceHandler$OnPlayListener access$100(io.rong.imkit.common.IVoiceHandler$VoiceHandler) -> access$100
    android.hardware.Sensor access$200(io.rong.imkit.common.IVoiceHandler$VoiceHandler) -> access$200
    android.hardware.SensorManager access$300(io.rong.imkit.common.IVoiceHandler$VoiceHandler) -> access$300
    android.media.AudioManager access$400(io.rong.imkit.common.IVoiceHandler$VoiceHandler) -> access$400
io.rong.imkit.common.IVoiceHandler$VoiceHandler$1 -> io.rong.imkit.common.IVoiceHandler$VoiceHandler$1:
    io.rong.imkit.common.IVoiceHandler$VoiceHandler this$0 -> this$0
    void onPrepared(android.media.MediaPlayer) -> onPrepared
io.rong.imkit.common.MessageContext -> io.rong.imkit.common.MessageContext:
    io.rong.imkit.common.IVoiceHandler mVoiceHandler -> mVoiceHandler
    io.rong.imkit.common.IVoiceHandler getVoiceHandler() -> getVoiceHandler
io.rong.imkit.common.RongConst -> io.rong.imkit.common.RongConst:
    java.lang.String RES_DIC -> RES_DIC
io.rong.imkit.common.RongConst$API -> io.rong.imkit.common.RongConst$API:
    java.lang.String HOST -> HOST
io.rong.imkit.common.RongConst$BROADCAST -> io.rong.imkit.common.RongConst$BROADCAST:
    java.lang.String ACTION_BUNDLE_IO_RONG_IMKIT_CONVERSATION -> ACTION_BUNDLE_IO_RONG_IMKIT_CONVERSATION
    java.lang.String ACTION_BUNDLE_IO_RONG_IMKIT_CONVERSATION_SETTING -> ACTION_BUNDLE_IO_RONG_IMKIT_CONVERSATION_SETTING
    java.lang.String ACTION_REMOVE_CONVERSATION_FOR_DELETE_FRIEND -> ACTION_REMOVE_CONVERSATION_FOR_DELETE_FRIEND
    java.lang.String ACTION_CLEAR_MESSAGE_FOR_CONVERSION -> ACTION_CLEAR_MESSAGE_FOR_CONVERSION
    java.lang.String ACTION_RESET_DATA_FOR_CONVERSION_LIST -> ACTION_RESET_DATA_FOR_CONVERSION_LIST
    java.lang.String ACTION_RESET_DATA_FOR_CONVERSION -> ACTION_RESET_DATA_FOR_CONVERSION
    java.lang.String ACTION_RESET_DATA_FOR_CONVERSION_GROUP_LIST -> ACTION_RESET_DATA_FOR_CONVERSION_GROUP_LIST
    java.lang.String ACTION_P2P_MESSAGE_SEND -> ACTION_P2P_MESSAGE_SEND
    java.lang.String ACTION_P2P_MESSAGE_RECEIVE -> ACTION_P2P_MESSAGE_RECEIVE
    java.lang.String ACTION_GROUP_MESSAGE_RECEIVE -> ACTION_GROUP_MESSAGE_RECEIVE
    java.lang.String ACTION_DISCUSSION_MESSAGE_SEND -> ACTION_DISCUSSION_MESSAGE_SEND
    java.lang.String ACTION_CUSTOMER_SERVICE_MESSAGE_RECEIVE -> ACTION_CUSTOMER_SERVICE_MESSAGE_RECEIVE
    java.lang.String ACTION_SYSTEM_MESSAGE_RECEIVE -> ACTION_SYSTEM_MESSAGE_RECEIVE
    java.lang.String ACTION_DISCUSSION_MESSAGE_RECEVICE -> ACTION_DISCUSSION_MESSAGE_RECEVICE
    java.lang.String ACTION_DISCUSSION_CREATE -> ACTION_DISCUSSION_CREATE
    java.lang.String ACTION_DISCUSSION_INFO_GET -> ACTION_DISCUSSION_INFO_GET
    java.lang.String ACTION_DISCUSSION_QUIT -> ACTION_DISCUSSION_QUIT
    java.lang.String ACTION_DISCUSSION_INVITE_MEMBER -> ACTION_DISCUSSION_INVITE_MEMBER
    java.lang.String ACTION_DISCUSSION_UPDATE_NAME -> ACTION_DISCUSSION_UPDATE_NAME
    java.lang.String ACTION_MESSAGE_IMAGE_DOWNLOAD -> ACTION_MESSAGE_IMAGE_DOWNLOAD
    java.lang.String ACTION_CHATROOM_MESSAGE_RECEIVE -> ACTION_CHATROOM_MESSAGE_RECEIVE
    java.lang.String ACTION_SET_DISCUSSION_INVITE_STATUS -> ACTION_SET_DISCUSSION_INVITE_STATUS
    java.lang.String ACTION_SET_BLOCK_PUSH_STATUS -> ACTION_SET_BLOCK_PUSH_STATUS
    java.lang.String ACTION_GET_BLOCK_PUSH_STATUS -> ACTION_GET_BLOCK_PUSH_STATUS
io.rong.imkit.common.RongConst$CONNECT_STATUS -> io.rong.imkit.common.RongConst$CONNECT_STATUS:
    int UNKNOWN -> UNKNOWN
    int CONNECTED -> CONNECTED
    int DISCONNECTED -> DISCONNECTED
    int NETWORK_UNAVAILABLE -> NETWORK_UNAVAILABLE
    int KICKED_OFFLINE_BY_OTHER_CLIENT -> KICKED_OFFLINE_BY_OTHER_CLIENT
    int LOGIN_ON_WEB -> LOGIN_ON_WEB
io.rong.imkit.common.RongConst$EXTRA -> io.rong.imkit.common.RongConst$EXTRA:
    java.lang.String CONTENT -> CONTENT
    java.lang.String USERS -> USERS
    java.lang.String USER -> USER
    java.lang.String CONVERSATION -> CONVERSATION
    java.lang.String TARGET_ID -> TARGET_ID
    java.lang.String NOTICATION_DATA_FLAG -> NOTICATION_DATA_FLAG
    java.lang.String NOTICE_STATUS -> NOTICE_STATUS
io.rong.imkit.common.RongConst$Parcel -> io.rong.imkit.common.RongConst$Parcel:
    int EXIST_SEPARATOR -> EXIST_SEPARATOR
    int NON_SEPARATOR -> NON_SEPARATOR
    int FALG_ONE_SEPARATOR -> FALG_ONE_SEPARATOR
    int FALG_TOW_SEPARATOR -> FALG_TOW_SEPARATOR
    int FALG_THREE_SEPARATOR -> FALG_THREE_SEPARATOR
    int FALG_FOUR_SEPARATOR -> FALG_FOUR_SEPARATOR
    int FALG_FIFTH_SEPARATOR -> FALG_FIFTH_SEPARATOR
    int FALG_SIXTH_SEPARATOR -> FALG_SIXTH_SEPARATOR
    int FALG_SEVEN_SEPARATOR -> FALG_SEVEN_SEPARATOR
io.rong.imkit.common.RongConst$SYS -> io.rong.imkit.common.RongConst$SYS:
    int MAX_IMAGE_CACHESIZE -> MAX_IMAGE_CACHESIZE
    int DISCUSSION_PEOPLE_MAX_COUNT -> DISCUSSION_PEOPLE_MAX_COUNT
    boolean BLOCK_MESSAGE_NOTICE -> BLOCK_MESSAGE_NOTICE
io.rong.imkit.data.DBHelper -> io.rong.imkit.data.DBHelper:
    java.lang.String TAG -> TAG
    io.rong.imkit.data.DBHelper dbHelper -> dbHelper
    io.rong.imkit.data.DBHelper getInstance() -> getInstance
    java.util.ArrayList getConversationList() -> getConversationList
    java.util.ArrayList getConversationGroupList() -> getConversationGroupList
    java.util.ArrayList getMessageList(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,int,int) -> getMessageList
    java.util.ArrayList getLasetMessageList(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,int) -> getLasetMessageList
    void deleteMessage(java.util.ArrayList) -> deleteMessage
    void clearMessages(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> clearMessages
    void setTop(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,boolean) -> setTop
    void clearUnReadMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> clearUnReadMessage
    int getTotalUnreadCount() -> getTotalUnreadCount
    boolean setMessageExtra(int,java.lang.String) -> setMessageExtra
    boolean removeConversation(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> removeConversation
    io.rong.imkit.model.UIConversation getConversation(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> getConversation
io.rong.imkit.exception.BaseException -> io.rong.imkit.exception.BaseException:
    long serialVersionUID -> serialVersionUID
io.rong.imkit.exception.DBException -> io.rong.imkit.exception.DBException:
    long serialVersionUID -> serialVersionUID
    java.lang.String toString() -> toString
io.rong.imkit.exception.HttpException -> io.rong.imkit.exception.HttpException:
    long serialVersionUID -> serialVersionUID
    java.lang.String toString() -> toString
io.rong.imkit.exception.InternalException -> io.rong.imkit.exception.InternalException:
    java.util.HashMap codeMapping -> codeMapping
    int code -> code
    long serialVersionUID -> serialVersionUID
    int NETWORK_DISABLED -> NETWORK_DISABLED
    int DISCARD_TASK -> DISCARD_TASK
    int MODEL_INCOMPLETE -> MODEL_INCOMPLETE
    int ENTITY_BUILD_EXP -> ENTITY_BUILD_EXP
    int IMAGE_GET_FAIL -> IMAGE_GET_FAIL
    int UNLOGIN_EXP -> UNLOGIN_EXP
    int IO_EXP -> IO_EXP
    int DEF_NETWORK_CODE -> DEF_NETWORK_CODE
    int DEF_LOGIC_CODE -> DEF_LOGIC_CODE
    int DEF_OTHER_CODE -> DEF_OTHER_CODE
    int DEF_SERVICE_CODE -> DEF_SERVICE_CODE
    java.lang.String DEFAULT_NETWORK_EXP_MESSAGE -> DEFAULT_NETWORK_EXP_MESSAGE
    java.lang.String DEFAULT_LOGIC_EXP_MESSAGE -> DEFAULT_LOGIC_EXP_MESSAGE
    java.lang.String DEFAULT_OTHER_EXP_MESSAGE -> DEFAULT_OTHER_EXP_MESSAGE
    java.lang.String DEFAULT_SERVICE_EXP_MESSAGE -> DEFAULT_SERVICE_EXP_MESSAGE
    java.lang.String DEFAULT_EXP_MESSAGE -> DEFAULT_EXP_MESSAGE
    int getCode() -> getCode
    void setCode(int) -> setCode
    java.lang.String toString() -> toString
    int getGeneralCode() -> getGeneralCode
    boolean isSpecial() -> isSpecial
    java.lang.String getCustomErrorMessage(int,java.lang.String) -> getCustomErrorMessage
io.rong.imkit.exception.PackException -> io.rong.imkit.exception.PackException:
    long serialVersionUID -> serialVersionUID
    java.lang.String toString() -> toString
io.rong.imkit.exception.ParseException -> io.rong.imkit.exception.ParseException:
    long serialVersionUID -> serialVersionUID
    java.lang.String toString() -> toString
io.rong.imkit.fragment.ActionBaseFrament -> io.rong.imkit.fragment.ActionBaseFrament:
    android.content.BroadcastReceiver mBroadcastReceiver -> mBroadcastReceiver
    android.content.IntentFilter mIntentFilter -> mIntentFilter
    java.util.Map mActionCallbackMap -> mActionCallbackMap
    boolean isRegister -> isRegister
    java.util.ArrayList customActions -> customActions
    java.util.ArrayList bundleActions -> bundleActions
    java.util.concurrent.ConcurrentHashMap mCacheTargetIds -> mCacheTargetIds
    int playCount -> playCount
    int HANDLE_GET_USER_INFO_WHAT -> HANDLE_GET_USER_INFO_WHAT
    int HANDLE_GET_GROUP_INFO_WHAT -> HANDLE_GET_GROUP_INFO_WHAT
    android.os.Handler mHandler -> mHandler
    java.lang.Integer integer -> integer
    android.os.Handler mWorkHandler -> mWorkHandler
    android.os.Looper mLooper -> mLooper
    void onCreate(android.os.Bundle) -> onCreate
    void rongHandleMessage(android.os.Message) -> rongHandleMessage
    android.os.Handler getHandler() -> getHandler
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onPause() -> onPause
    void sendAction(android.content.Intent,io.rong.imkit.fragment.ActionBaseFrament$ActionCallback) -> sendAction
    void receviceData(android.content.Intent) -> receviceData
    void recevicePageIntnet(android.content.Intent) -> recevicePageIntnet
    void onDestroy() -> onDestroy
    void registerActions(java.util.List) -> registerActions
    void registerBunlderActions(java.util.List) -> registerBunlderActions
    void setCurrentCoversationTargetId(java.lang.String) -> setCurrentCoversationTargetId
    void getUserInfo(java.lang.String,io.rong.imkit.fragment.ActionBaseFrament$GetUserInfoCallback) -> getUserInfo
    void getUserInfo(boolean,java.lang.String,io.rong.imkit.fragment.ActionBaseFrament$GetUserInfoCallback) -> getUserInfo
    void getDiscussionInfo(java.lang.String,io.rong.imkit.fragment.ActionBaseFrament$GetDiscussionInfoCallback) -> getDiscussionInfo
    void clearListCache() -> clearListCache
    io.rong.imlib.RongIMClient$UserInfo getCurrentUserInfo() -> getCurrentUserInfo
    java.util.ArrayList access$100(io.rong.imkit.fragment.ActionBaseFrament) -> access$100
    java.util.ArrayList access$200(io.rong.imkit.fragment.ActionBaseFrament) -> access$200
    java.util.Map access$300(io.rong.imkit.fragment.ActionBaseFrament) -> access$300
    java.util.concurrent.ConcurrentHashMap access$400(io.rong.imkit.fragment.ActionBaseFrament) -> access$400
io.rong.imkit.fragment.ActionBaseFrament$1 -> io.rong.imkit.fragment.ActionBaseFrament$1:
    io.rong.imkit.fragment.ActionBaseFrament this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.fragment.ActionBaseFrament$2 -> io.rong.imkit.fragment.ActionBaseFrament$2:
    java.lang.String val$userId -> val$userId
    io.rong.imkit.fragment.ActionBaseFrament$GetUserInfoCallback val$getUserInfoCallback -> val$getUserInfoCallback
    io.rong.imkit.fragment.ActionBaseFrament this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode) -> onError
io.rong.imkit.fragment.ActionBaseFrament$3 -> io.rong.imkit.fragment.ActionBaseFrament$3:
    java.lang.String val$userId -> val$userId
    io.rong.imkit.fragment.ActionBaseFrament$GetUserInfoCallback val$getUserInfoCallback -> val$getUserInfoCallback
    io.rong.imkit.fragment.ActionBaseFrament this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode) -> onError
io.rong.imkit.fragment.ActionBaseFrament$4 -> io.rong.imkit.fragment.ActionBaseFrament$4:
    io.rong.imkit.fragment.ActionBaseFrament$GetDiscussionInfoCallback val$discussionInfoCallback -> val$discussionInfoCallback
    java.lang.String val$key -> val$key
    io.rong.imkit.fragment.ActionBaseFrament this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ActionBaseFrament$ActionCallback -> io.rong.imkit.fragment.ActionBaseFrament$ActionCallback:
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ActionBaseFrament$BaseReceiver -> io.rong.imkit.fragment.ActionBaseFrament$BaseReceiver:
    io.rong.imkit.fragment.ActionBaseFrament this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.imkit.fragment.ActionBaseFrament$BaseReceiver$1 -> io.rong.imkit.fragment.ActionBaseFrament$BaseReceiver$1:
    android.content.Intent val$intent -> val$intent
    io.rong.imkit.fragment.ActionBaseFrament$BaseReceiver this$1 -> this$1
    void run() -> run
io.rong.imkit.fragment.ActionBaseFrament$GetDiscussionInfoCallback -> io.rong.imkit.fragment.ActionBaseFrament$GetDiscussionInfoCallback:
    void onSuccess(io.rong.imkit.model.UIDiscussion) -> onSuccess
    void onError() -> onError
io.rong.imkit.fragment.ActionBaseFrament$GetUserInfoCallback -> io.rong.imkit.fragment.ActionBaseFrament$GetUserInfoCallback:
    void onSuccess(io.rong.imkit.model.UIUserInfo) -> onSuccess
    void onExist(java.lang.Object) -> onExist
    void onError() -> onError
io.rong.imkit.fragment.BaseConversationFragment -> io.rong.imkit.fragment.BaseConversationFragment:
    int SYS_CAMERA -> SYS_CAMERA
    int SYS_PIC -> SYS_PIC
    java.lang.String ACTION_CAMERA -> ACTION_CAMERA
    int REQUEST_CODE_GET_PIC -> REQUEST_CODE_GET_PIC
    java.io.File mCameraFile -> mCameraFile
    int HANDLE_ADAPTER_NOTIFY -> HANDLE_ADAPTER_NOTIFY
    int HANDLE_ADAPTER_NOTIFY_DATA -> HANDLE_ADAPTER_NOTIFY_DATA
    int HANDLE_SEND_MESSAGE_ERROR -> HANDLE_SEND_MESSAGE_ERROR
    void gotoSysCamera() -> gotoSysCamera
    void gotoSysPic() -> gotoSysPic
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void resultShowPic(int,android.content.Intent) -> resultShowPic
    void gotoShowImage(android.net.Uri) -> gotoShowImage
    void setPhoto(android.net.Uri) -> setPhoto
    void publishBitmap(android.net.Uri) -> publishBitmap
    void access$000(io.rong.imkit.fragment.BaseConversationFragment,android.net.Uri) -> access$000
    java.io.File access$100(io.rong.imkit.fragment.BaseConversationFragment) -> access$100
io.rong.imkit.fragment.BaseConversationFragment$1 -> io.rong.imkit.fragment.BaseConversationFragment$1:
    android.content.Intent val$data -> val$data
    io.rong.imkit.fragment.BaseConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.BaseConversationFragment$2 -> io.rong.imkit.fragment.BaseConversationFragment$2:
    io.rong.imkit.fragment.BaseConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.BaseFragment -> io.rong.imkit.fragment.BaseFragment:
    android.view.View getViewById(android.view.View,int) -> getViewById
    android.view.View getViewById(android.view.View,java.lang.String) -> getViewById
    android.view.View getInflateView(java.lang.String,android.view.ViewGroup,boolean) -> getInflateView
    void handleLeftMessage(android.os.Message) -> handleLeftMessage
    io.rong.imkit.view.ActionBar getActionBar() -> getActionBar
    boolean onBackPressed() -> onBackPressed
io.rong.imkit.fragment.ConversationFragment -> io.rong.imkit.fragment.ConversationFragment:
    java.lang.String TAG -> TAG
    int GET_SQLITE_DATA_DEFALUT_COUNT -> GET_SQLITE_DATA_DEFALUT_COUNT
    java.lang.String CONVERSATION_TYPE -> CONVERSATION_TYPE
    int HANDLE_NOTIFY_LOAD_DATA -> HANDLE_NOTIFY_LOAD_DATA
    int HANDLE_GET_DISCUSSION_INFO -> HANDLE_GET_DISCUSSION_INFO
    int HANDLE_GET_USERINFO_FOR_TITLE -> HANDLE_GET_USERINFO_FOR_TITLE
    int HANDLER_CREATE_SUCCESS -> HANDLER_CREATE_SUCCESS
    int HANDLER_CREATE_FAIL -> HANDLER_CREATE_FAIL
    int HANDLER_RELOAD_DATA -> HANDLER_RELOAD_DATA
    int HANDLER_NOTIFICATION_MESSAGE -> HANDLER_NOTIFICATION_MESSAGE
    int HANDLE_SHOW_MESSAGE -> HANDLE_SHOW_MESSAGE
    io.rong.imkit.view.LoadingDialog mDialog -> mDialog
    io.rong.imkit.view.PullDownRefreshListView mListView -> mListView
    io.rong.imkit.view.ConversationMessageBar mConversationMessageBar -> mConversationMessageBar
    android.widget.TextView mConnectStateTextView -> mConnectStateTextView
    io.rong.imkit.view.CoverFrameLayout mFrameLayout -> mFrameLayout
    io.rong.imkit.view.VoiceCoverView mCoverView -> mCoverView
    io.rong.imkit.common.IVoiceHandler mVoiceHandler -> mVoiceHandler
    android.view.View mHideCover -> mHideCover
    io.rong.imkit.adapter.MitulItemViewListAdapter mConversationAdapter -> mConversationAdapter
    io.rong.imkit.model.UIConversation mConversation -> mConversation
    boolean mIsHaveDBMessage -> mIsHaveDBMessage
    int mUnReadMessageCount -> mUnReadMessageCount
    int mLastSelectMsgId -> mLastSelectMsgId
    boolean mIsSendingMessage -> mIsSendingMessage
    android.widget.ImageView settingView -> settingView
    android.os.Handler mVoipHandler -> mVoipHandler
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void parserIntent(android.content.Intent) -> parserIntent
    void enterChatroom(java.lang.String) -> enterChatroom
    void quitChatroom(java.lang.String) -> quitChatroom
    void createDiscussion(java.lang.String[]) -> createDiscussion
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void resetData() -> resetData
    void initListView() -> initListView
    java.util.List reverseList(java.util.List) -> reverseList
    void toggleInputMethod(boolean,android.view.View) -> toggleInputMethod
    void sendMessage(java.lang.String) -> sendMessage
    io.rong.imkit.model.UIMessage messageWrap() -> messageWrap
    void sendMessage(io.rong.imkit.model.UIMessage) -> sendMessage
    int getMessagePosition(io.rong.imkit.model.UIMessage) -> getMessagePosition
    int getMessagePosition(int) -> getMessagePosition
    void onRefresh() -> onRefresh
    void receviceData(android.content.Intent) -> receviceData
    void recevicePageIntnet(android.content.Intent) -> recevicePageIntnet
    void setNetStatus(int) -> setNetStatus
    void showNewMessage(int) -> showNewMessage
    void registerActions(java.util.List) -> registerActions
    void registerBunlderActions(java.util.List) -> registerBunlderActions
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void rongHandleMessage(android.os.Message) -> rongHandleMessage
    void onImageRichTextClick() -> onImageRichTextClick
    void onCameraRichTextClick() -> onCameraRichTextClick
    void onVoipRichTextClick() -> onVoipRichTextClick
    void onAddRichTextClick() -> onAddRichTextClick
    void isVisibility() -> isVisibility
    void publishBitmap(android.net.Uri) -> publishBitmap
    void onMessageClick(io.rong.imkit.model.UIMessage,android.view.View) -> onMessageClick
    void onMessageLongClick(io.rong.imkit.model.UIMessage) -> onMessageLongClick
    void onMessageDoubleClick(io.rong.imkit.model.UIMessage) -> onMessageDoubleClick
    void publishVoice(android.net.Uri,long) -> publishVoice
    void onPause() -> onPause
    void onResendMessage(io.rong.imkit.model.UIMessage,int) -> onResendMessage
    void OnTriggeredTouchEvent(android.view.MotionEvent,io.rong.imkit.view.CoverFrameLayout) -> OnTriggeredTouchEvent
    void setConversationResult() -> setConversationResult
    boolean onBackPressed() -> onBackPressed
    void getDiscussionInfo(int,java.lang.String) -> getDiscussionInfo
    void getUserInfo(int,java.lang.String,long) -> getUserInfo
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onDestroy() -> onDestroy
    void onLocatonRichTextClick() -> onLocatonRichTextClick
    void access$000(io.rong.imkit.fragment.ConversationFragment,int) -> access$000
    io.rong.imkit.model.UIConversation access$100(io.rong.imkit.fragment.ConversationFragment) -> access$100
    io.rong.imkit.adapter.MitulItemViewListAdapter access$200(io.rong.imkit.fragment.ConversationFragment) -> access$200
    int access$302(io.rong.imkit.fragment.ConversationFragment,int) -> access$302
    boolean access$402(io.rong.imkit.fragment.ConversationFragment,boolean) -> access$402
    int access$300(io.rong.imkit.fragment.ConversationFragment) -> access$300
    void access$500(io.rong.imkit.fragment.ConversationFragment,int) -> access$500
    java.util.List access$600(io.rong.imkit.fragment.ConversationFragment,java.util.List) -> access$600
    io.rong.imkit.view.PullDownRefreshListView access$700(io.rong.imkit.fragment.ConversationFragment) -> access$700
    android.view.View access$800(io.rong.imkit.fragment.ConversationFragment) -> access$800
    io.rong.imkit.view.VoiceCoverView access$900(io.rong.imkit.fragment.ConversationFragment) -> access$900
    int access$1000(io.rong.imkit.fragment.ConversationFragment,int) -> access$1000
    boolean access$1102(io.rong.imkit.fragment.ConversationFragment,boolean) -> access$1102
    int access$1200(io.rong.imkit.fragment.ConversationFragment) -> access$1200
    android.widget.TextView access$1300(io.rong.imkit.fragment.ConversationFragment) -> access$1300
    io.rong.imkit.model.UIMessage access$1400(io.rong.imkit.fragment.ConversationFragment) -> access$1400
    io.rong.imkit.view.LoadingDialog access$1500(io.rong.imkit.fragment.ConversationFragment) -> access$1500
io.rong.imkit.fragment.ConversationFragment$1 -> io.rong.imkit.fragment.ConversationFragment$1:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void onChanged(int) -> onChanged
io.rong.imkit.fragment.ConversationFragment$10 -> io.rong.imkit.fragment.ConversationFragment$10:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void onRec() -> onRec
    void onCover(boolean) -> onCover
    void onCompleted(android.net.Uri) -> onCompleted
io.rong.imkit.fragment.ConversationFragment$11 -> io.rong.imkit.fragment.ConversationFragment$11:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void onPlay() -> onPlay
    void onCover(boolean) -> onCover
    void onStop() -> onStop
io.rong.imkit.fragment.ConversationFragment$12 -> io.rong.imkit.fragment.ConversationFragment$12:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationFragment$13 -> io.rong.imkit.fragment.ConversationFragment$13:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$13$1 -> io.rong.imkit.fragment.ConversationFragment$13$1:
    java.util.List val$messages -> val$messages
    io.rong.imkit.fragment.ConversationFragment$13 this$1 -> this$1
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$14 -> io.rong.imkit.fragment.ConversationFragment$14:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$15 -> io.rong.imkit.fragment.ConversationFragment$15:
    int val$status -> val$status
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$16 -> io.rong.imkit.fragment.ConversationFragment$16:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.fragment.ConversationFragment$16$1 -> io.rong.imkit.fragment.ConversationFragment$16$1:
    java.lang.String val$mySelfId -> val$mySelfId
    java.lang.String val$mySelfName -> val$mySelfName
    io.rong.imkit.model.UIUserInfo val$peerUser -> val$peerUser
    io.rong.imkit.fragment.ConversationFragment$16 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
io.rong.imkit.fragment.ConversationFragment$17 -> io.rong.imkit.fragment.ConversationFragment$17:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void onSuccess(io.rong.imkit.model.UIUserInfo) -> onSuccess
    void onExist(java.lang.Object) -> onExist
    void onError() -> onError
io.rong.imkit.fragment.ConversationFragment$18 -> io.rong.imkit.fragment.ConversationFragment$18:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$19 -> io.rong.imkit.fragment.ConversationFragment$19:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$2 -> io.rong.imkit.fragment.ConversationFragment$2:
    java.lang.String val$id -> val$id
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$2$1 -> io.rong.imkit.fragment.ConversationFragment$2$1:
    io.rong.imkit.fragment.ConversationFragment$2 this$1 -> this$1
    void onSuccess() -> onSuccess
    void onError(io.rong.imkit.RongIM$OperationCallback$ErrorCode) -> onError
io.rong.imkit.fragment.ConversationFragment$20 -> io.rong.imkit.fragment.ConversationFragment$20:
    android.net.Uri val$uri -> val$uri
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$21 -> io.rong.imkit.fragment.ConversationFragment$21:
    android.widget.ImageView val$temImageView -> val$temImageView
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$22 -> io.rong.imkit.fragment.ConversationFragment$22:
    io.rong.imkit.model.UIMessage val$fmessage -> val$fmessage
    io.rong.imkit.view.SelectDialog val$mSelectDialog -> val$mSelectDialog
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void OnDialogItemViewClick(android.view.View,int) -> OnDialogItemViewClick
io.rong.imkit.fragment.ConversationFragment$23 -> io.rong.imkit.fragment.ConversationFragment$23:
    java.lang.String val$discusstionId -> val$discusstionId
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$23$1 -> io.rong.imkit.fragment.ConversationFragment$23$1:
    io.rong.imkit.fragment.ConversationFragment$23 this$1 -> this$1
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationFragment$24 -> io.rong.imkit.fragment.ConversationFragment$24:
    java.lang.String val$userId -> val$userId
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$24$1 -> io.rong.imkit.fragment.ConversationFragment$24$1:
    io.rong.imkit.fragment.ConversationFragment$24 this$1 -> this$1
    void onSuccess(io.rong.imkit.model.UIUserInfo) -> onSuccess
    void onExist(java.lang.Object) -> onExist
    void onError() -> onError
io.rong.imkit.fragment.ConversationFragment$3 -> io.rong.imkit.fragment.ConversationFragment$3:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationFragment$4 -> io.rong.imkit.fragment.ConversationFragment$4:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationFragment$5 -> io.rong.imkit.fragment.ConversationFragment$5:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationFragment$6 -> io.rong.imkit.fragment.ConversationFragment$6:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationFragment$7 -> io.rong.imkit.fragment.ConversationFragment$7:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$7$1 -> io.rong.imkit.fragment.ConversationFragment$7$1:
    java.util.List val$messages -> val$messages
    io.rong.imkit.fragment.ConversationFragment$7 this$1 -> this$1
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$8 -> io.rong.imkit.fragment.ConversationFragment$8:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$8$1 -> io.rong.imkit.fragment.ConversationFragment$8$1:
    io.rong.imkit.fragment.ConversationFragment$8 this$1 -> this$1
    void onSuccess(io.rong.imkit.model.UIUserInfo) -> onSuccess
    void onExist(java.lang.Object) -> onExist
    void onError() -> onError
io.rong.imkit.fragment.ConversationFragment$9 -> io.rong.imkit.fragment.ConversationFragment$9:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$LocationCallback -> io.rong.imkit.fragment.ConversationFragment$LocationCallback:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void onSuccess(io.rong.message.LocationMessage) -> onSuccess
    void onFailure(java.lang.String) -> onFailure
io.rong.imkit.fragment.ConversationGroupListFragment -> io.rong.imkit.fragment.ConversationGroupListFragment:
    void onResume() -> onResume
    void setGroupUnReadMessageCount() -> setGroupUnReadMessageCount
    void initAdapter() -> initAdapter
    void setActionBar(io.rong.imkit.view.ActionBar) -> setActionBar
    void resetData() -> resetData
    void registerActions(java.util.List) -> registerActions
    void registerBunlderActions(java.util.List) -> registerBunlderActions
    void receviceData(android.content.Intent) -> receviceData
    void recevicePageIntnet(android.content.Intent) -> recevicePageIntnet
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void getGroupInfo(java.lang.String) -> getGroupInfo
    void rongHandleMessage(android.os.Message) -> rongHandleMessage
    void hasNewMessage(io.rong.imkit.model.UIMessage,boolean,boolean) -> hasNewMessage
    boolean wrapGroupCoversation(io.rong.imkit.model.UIMessage) -> wrapGroupCoversation
io.rong.imkit.fragment.ConversationGroupListFragment$1 -> io.rong.imkit.fragment.ConversationGroupListFragment$1:
    io.rong.imkit.fragment.ConversationGroupListFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationGroupListFragment$2 -> io.rong.imkit.fragment.ConversationGroupListFragment$2:
    io.rong.imkit.fragment.ConversationGroupListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationGroupListFragment$2$1 -> io.rong.imkit.fragment.ConversationGroupListFragment$2$1:
    java.util.List val$list -> val$list
    io.rong.imkit.fragment.ConversationGroupListFragment$2 this$1 -> this$1
    void run() -> run
io.rong.imkit.fragment.ConversationGroupListFragment$3 -> io.rong.imkit.fragment.ConversationGroupListFragment$3:
    java.lang.String val$groupId -> val$groupId
    io.rong.imkit.fragment.ConversationGroupListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment -> io.rong.imkit.fragment.ConversationListFragment:
    java.lang.String TAG -> TAG
    int HANDLE_NOTIFY_ADAPTER -> HANDLE_NOTIFY_ADAPTER
    int HANDLE_NOTIFY_LOAD_DATA -> HANDLE_NOTIFY_LOAD_DATA
    int GET_DISCUSSION_INFO -> GET_DISCUSSION_INFO
    int START_CONVERSATION -> START_CONVERSATION
    int HANDLE_ONCLICE_ITEM -> HANDLE_ONCLICE_ITEM
    int START_CONVERSATION_CREATE_SUCCESS -> START_CONVERSATION_CREATE_SUCCESS
    int HANDLE_SETTING_FUNCTION_SEND_BROADCAST -> HANDLE_SETTING_FUNCTION_SEND_BROADCAST
    int HANDLE_HAS_MESSAGE -> HANDLE_HAS_MESSAGE
    int HANDLE_RE_LOAD_DATA -> HANDLE_RE_LOAD_DATA
    java.lang.String INTENT_PRIVATE_SELECT_PEOPLE -> INTENT_PRIVATE_SELECT_PEOPLE
    android.widget.ListView listView -> listView
    io.rong.imkit.adapter.ConversationListAdapter mConversationListAdapter -> mConversationListAdapter
    android.widget.TextView mEmptyView -> mEmptyView
    io.rong.imlib.RongIMClient$ConversationType mConversationType -> mConversationType
    io.rong.imkit.view.LoadingDialog mDialog -> mDialog
    android.widget.TextView mConnectStateTextView -> mConnectStateTextView
    io.rong.imkit.model.UIConversation mGroupUIConversation -> mGroupUIConversation
    int mGroupUnreadMessageCount -> mGroupUnreadMessageCount
    void onResume() -> onResume
    void setGroupUnReadMessageCount() -> setGroupUnReadMessageCount
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initAdapter() -> initAdapter
    void setActionBar(io.rong.imkit.view.ActionBar) -> setActionBar
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void removeConversation(java.lang.String) -> removeConversation
    void resetData() -> resetData
    void receviceData(android.content.Intent) -> receviceData
    void setNetStatus(int) -> setNetStatus
    void recevicePageIntnet(android.content.Intent) -> recevicePageIntnet
    void registerActions(java.util.List) -> registerActions
    void registerBunlderActions(java.util.List) -> registerBunlderActions
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void rongHandleMessage(android.os.Message) -> rongHandleMessage
    void startConversation(io.rong.imkit.model.UIConversation) -> startConversation
    boolean wrapGroupCoversation(io.rong.imkit.model.UIMessage) -> wrapGroupCoversation
    void hasNewMessage(io.rong.imkit.model.UIMessage,boolean,boolean) -> hasNewMessage
    void newMessageSetTop(io.rong.imkit.model.UIConversation) -> newMessageSetTop
    boolean onBackPressed() -> onBackPressed
    void getDiscussionInfo(int,java.lang.String) -> getDiscussionInfo
    void getDiscussionInfo(java.lang.String,int) -> getDiscussionInfo
    void getUserInfo(int,java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$ConversationType) -> getUserInfo
    void getGroupInfo(java.lang.String) -> getGroupInfo
    io.rong.imkit.model.UIConversation getUIConveration(java.lang.String) -> getUIConveration
    void setUserInfoForConversation(io.rong.imkit.model.UIConversation) -> setUserInfoForConversation
    int access$002(io.rong.imkit.fragment.ConversationListFragment,int) -> access$002
    int access$000(io.rong.imkit.fragment.ConversationListFragment) -> access$000
    android.widget.TextView access$100(io.rong.imkit.fragment.ConversationListFragment) -> access$100
    io.rong.imkit.view.LoadingDialog access$200(io.rong.imkit.fragment.ConversationListFragment) -> access$200
    void access$300(io.rong.imkit.fragment.ConversationListFragment,io.rong.imkit.model.UIConversation) -> access$300
    void access$400(io.rong.imkit.fragment.ConversationListFragment,io.rong.imkit.model.UIConversation) -> access$400
io.rong.imkit.fragment.ConversationListFragment$1 -> io.rong.imkit.fragment.ConversationListFragment$1:
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void onChanged(int) -> onChanged
io.rong.imkit.fragment.ConversationListFragment$10 -> io.rong.imkit.fragment.ConversationListFragment$10:
    io.rong.imkit.model.UIConversation val$conversation -> val$conversation
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$10$1 -> io.rong.imkit.fragment.ConversationListFragment$10$1:
    io.rong.imkit.model.UIMessage val$uiMessage -> val$uiMessage
    io.rong.imkit.fragment.ConversationListFragment$10 this$1 -> this$1
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$11 -> io.rong.imkit.fragment.ConversationListFragment$11:
    java.lang.String val$discusstionId -> val$discusstionId
    int val$position -> val$position
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$11$1 -> io.rong.imkit.fragment.ConversationListFragment$11$1:
    io.rong.imkit.fragment.ConversationListFragment$11 this$1 -> this$1
    void onSuccess(io.rong.imkit.model.UIDiscussion) -> onSuccess
    void onError() -> onError
io.rong.imkit.fragment.ConversationListFragment$12 -> io.rong.imkit.fragment.ConversationListFragment$12:
    java.lang.String val$userId -> val$userId
    io.rong.imlib.RongIMClient$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$12$1 -> io.rong.imkit.fragment.ConversationListFragment$12$1:
    io.rong.imkit.fragment.ConversationListFragment$12 this$1 -> this$1
    void onSuccess(io.rong.imkit.model.UIUserInfo) -> onSuccess
    void onExist(java.lang.Object) -> onExist
    void onError() -> onError
io.rong.imkit.fragment.ConversationListFragment$13 -> io.rong.imkit.fragment.ConversationListFragment$13:
    java.lang.String val$groupId -> val$groupId
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$2 -> io.rong.imkit.fragment.ConversationListFragment$2:
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$3 -> io.rong.imkit.fragment.ConversationListFragment$3:
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationListFragment$4 -> io.rong.imkit.fragment.ConversationListFragment$4:
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationListFragment$5 -> io.rong.imkit.fragment.ConversationListFragment$5:
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$6 -> io.rong.imkit.fragment.ConversationListFragment$6:
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$6$1 -> io.rong.imkit.fragment.ConversationListFragment$6$1:
    java.util.ArrayList val$conversations -> val$conversations
    io.rong.imkit.fragment.ConversationListFragment$6 this$1 -> this$1
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$7 -> io.rong.imkit.fragment.ConversationListFragment$7:
    int val$status -> val$status
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$8 -> io.rong.imkit.fragment.ConversationListFragment$8:
    io.rong.imkit.model.UIConversation val$conversation -> val$conversation
    int val$positionArg -> val$positionArg
    io.rong.imkit.view.SelectDialog val$mSelectDialog -> val$mSelectDialog
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void OnDialogItemViewClick(android.view.View,int) -> OnDialogItemViewClick
io.rong.imkit.fragment.ConversationListFragment$9 -> io.rong.imkit.fragment.ConversationListFragment$9:
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationSettingFragment -> io.rong.imkit.fragment.ConversationSettingFragment:
    java.lang.String TAG -> TAG
    int HANDLE_GET_DISCUSSION_INFO_SUCCESS -> HANDLE_GET_DISCUSSION_INFO_SUCCESS
    int HANDLE_GET_DISCUSSION_INFO_FAILURE -> HANDLE_GET_DISCUSSION_INFO_FAILURE
    int HANDLE_REMOVE_MEMBER_SUCCESS -> HANDLE_REMOVE_MEMBER_SUCCESS
    int HANDLE_REMOVE_MEMBER_FAILURE -> HANDLE_REMOVE_MEMBER_FAILURE
    int HANDLE_QUIT_DISCUSSION_FAILURE -> HANDLE_QUIT_DISCUSSION_FAILURE
    int HANDLE_QUIT_DISCUSSION_SUCCESS -> HANDLE_QUIT_DISCUSSION_SUCCESS
    int HANDLE_UPDATE_DISCUSSION_NAME_SUCCESS -> HANDLE_UPDATE_DISCUSSION_NAME_SUCCESS
    int HANDLE_UPDATE_DISCUSSION_NAME_FAILURE -> HANDLE_UPDATE_DISCUSSION_NAME_FAILURE
    int HANDLE_CREATE_DISCUSSION_SUCCESS -> HANDLE_CREATE_DISCUSSION_SUCCESS
    int HANDLE_CREATE_DISCUSSION_FAILURE -> HANDLE_CREATE_DISCUSSION_FAILURE
    int HANDLE_GET_BLOCK_PUSH_STATUS_SUCCESS -> HANDLE_GET_BLOCK_PUSH_STATUS_SUCCESS
    int HANDLE_GET_BLOCK_PUSH_STATUS_FAILURE -> HANDLE_GET_BLOCK_PUSH_STATUS_FAILURE
    int HANDLE_SET_DISCUSSION_INVITE_STATUS_SUCCESS -> HANDLE_SET_DISCUSSION_INVITE_STATUS_SUCCESS
    int HANDLE_SET_DISCUSSION_INVITE_STATUS_FAILURE -> HANDLE_SET_DISCUSSION_INVITE_STATUS_FAILURE
    int HANDLE_SET_BLOCK_PUSH_STATUS_SUCCESS -> HANDLE_SET_BLOCK_PUSH_STATUS_SUCCESS
    int HANDLE_SET_BLOCK_PUSH_STATUS_FAILURE -> HANDLE_SET_BLOCK_PUSH_STATUS_FAILURE
    int HANDLE_GET_DISCUSSION_MESSAGE -> HANDLE_GET_DISCUSSION_MESSAGE
    int HANDLE_COLSE_DIALOG -> HANDLE_COLSE_DIALOG
    int HANDLE_CLEAR_MESSAGE -> HANDLE_CLEAR_MESSAGE
    java.lang.String INTENT_QUIT_DISCUSSION_CLOSE_PAGE -> INTENT_QUIT_DISCUSSION_CLOSE_PAGE
    java.lang.String INTENT_CLEAR_MESSSAGE_SUCCESS -> INTENT_CLEAR_MESSSAGE_SUCCESS
    java.lang.String INTENT_SET_TOP_CONVERSATION_SUCCESS -> INTENT_SET_TOP_CONVERSATION_SUCCESS
    java.lang.String INTENT_UPDATE_NAME_DISCUSSION -> INTENT_UPDATE_NAME_DISCUSSION
    java.lang.String INTENT_CREATE_DISCUSSION_SUCCESS -> INTENT_CREATE_DISCUSSION_SUCCESS
    io.rong.imkit.view.RongGridView mGridView -> mGridView
    android.widget.CheckBox mSetTopConversationCheckBox -> mSetTopConversationCheckBox
    android.widget.CheckBox mNewMessageNotifySetCheckBox -> mNewMessageNotifySetCheckBox
    android.widget.Button mExitButton -> mExitButton
    android.widget.RelativeLayout mClearMessagesLayout -> mClearMessagesLayout
    android.widget.RelativeLayout setTopLayout -> setTopLayout
    android.widget.RelativeLayout mDiscussionNameLayout -> mDiscussionNameLayout
    android.widget.RelativeLayout mOpenMemberInviteLayout -> mOpenMemberInviteLayout
    android.widget.TextView mDiscussionNameTextView -> mDiscussionNameTextView
    android.widget.CheckBox mOpenMemberInviteCheckBox -> mOpenMemberInviteCheckBox
    io.rong.imkit.adapter.ConversationMemberGridViewAdapter mMemberGridViewAdapter -> mMemberGridViewAdapter
    io.rong.imlib.RongIMClient$ConversationType mConversationType -> mConversationType
    java.lang.String mTargetId -> mTargetId
    java.util.ArrayList mMembers -> mMembers
    io.rong.imkit.view.LoadingDialog mLoadingDialog -> mLoadingDialog
    io.rong.imkit.view.AlterDialog mAlterDialog -> mAlterDialog
    io.rong.imkit.model.UIConversation mConversation -> mConversation
    java.lang.String mTempDiscussionName -> mTempDiscussionName
    int mDelPositio -> mDelPositio
    io.rong.imkit.view.EditTextRongDialog editTextRongDialog -> editTextRongDialog
    android.os.Handler mWorkHandler -> mWorkHandler
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void cancelDeleteStatus() -> cancelDeleteStatus
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onGridViewImageClick(android.view.View,int) -> onGridViewImageClick
    void onEvent(io.rong.imkit.logic.MessageLogic$EventInviteDiscussion) -> onEvent
    void onEvent(io.rong.imkit.logic.MessageLogic$EventRemoveDiscussion) -> onEvent
    void onDestroy() -> onDestroy
    void rongHandleMessage(android.os.Message) -> rongHandleMessage
    void removeGridViewFriend(java.lang.String) -> removeGridViewFriend
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void updateDiscussionName(java.lang.String,java.lang.String) -> updateDiscussionName
    void removeMemberForDiscussion(java.lang.String,java.lang.String) -> removeMemberForDiscussion
    void createDiscussion(java.util.ArrayList) -> createDiscussion
    void setDiscussionInviteStatus(java.lang.String,boolean) -> setDiscussionInviteStatus
    void setBlockPushStatus(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,boolean) -> setBlockPushStatus
    void getBlockPushStatus(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> getBlockPushStatus
    void registerBunlderActions(java.util.List) -> registerBunlderActions
    boolean onBackPressed() -> onBackPressed
    void getDiscussionInfo(int,java.lang.String) -> getDiscussionInfo
    void getUserInfo(int,java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$ConversationType) -> getUserInfo
    void getGroupInfo(java.lang.String) -> getGroupInfo
    void registerActions(java.util.List) -> registerActions
    void receviceData(android.content.Intent) -> receviceData
    io.rong.imlib.RongIMClient$ConversationType access$000(io.rong.imkit.fragment.ConversationSettingFragment) -> access$000
    java.lang.String access$100(io.rong.imkit.fragment.ConversationSettingFragment) -> access$100
    io.rong.imkit.model.UIConversation access$202(io.rong.imkit.fragment.ConversationSettingFragment,io.rong.imkit.model.UIConversation) -> access$202
    io.rong.imkit.model.UIConversation access$200(io.rong.imkit.fragment.ConversationSettingFragment) -> access$200
    android.widget.CheckBox access$300(io.rong.imkit.fragment.ConversationSettingFragment) -> access$300
    android.widget.TextView access$400(io.rong.imkit.fragment.ConversationSettingFragment) -> access$400
    io.rong.imkit.adapter.ConversationMemberGridViewAdapter access$500(io.rong.imkit.fragment.ConversationSettingFragment) -> access$500
    void access$600(io.rong.imkit.fragment.ConversationSettingFragment) -> access$600
    io.rong.imkit.view.AlterDialog access$700(io.rong.imkit.fragment.ConversationSettingFragment) -> access$700
    io.rong.imkit.view.LoadingDialog access$800(io.rong.imkit.fragment.ConversationSettingFragment) -> access$800
    android.widget.RelativeLayout access$900(io.rong.imkit.fragment.ConversationSettingFragment) -> access$900
    java.lang.String access$1002(io.rong.imkit.fragment.ConversationSettingFragment,java.lang.String) -> access$1002
    io.rong.imkit.view.EditTextRongDialog access$1100(io.rong.imkit.fragment.ConversationSettingFragment) -> access$1100
    java.lang.String access$1000(io.rong.imkit.fragment.ConversationSettingFragment) -> access$1000
    void access$1200(io.rong.imkit.fragment.ConversationSettingFragment,java.lang.String,java.lang.String) -> access$1200
    java.lang.String access$1300() -> access$1300
io.rong.imkit.fragment.ConversationSettingFragment$1 -> io.rong.imkit.fragment.ConversationSettingFragment$1:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationSettingFragment$1$1 -> io.rong.imkit.fragment.ConversationSettingFragment$1$1:
    io.rong.imkit.fragment.ConversationSettingFragment$1 this$1 -> this$1
    void run() -> run
io.rong.imkit.fragment.ConversationSettingFragment$10 -> io.rong.imkit.fragment.ConversationSettingFragment$10:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationSettingFragment$11 -> io.rong.imkit.fragment.ConversationSettingFragment$11:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationSettingFragment$12 -> io.rong.imkit.fragment.ConversationSettingFragment$12:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationSettingFragment$13 -> io.rong.imkit.fragment.ConversationSettingFragment$13:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationSettingFragment$14 -> io.rong.imkit.fragment.ConversationSettingFragment$14:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imkit.RongIM$OperationCallback$ErrorCode) -> onError
io.rong.imkit.fragment.ConversationSettingFragment$15 -> io.rong.imkit.fragment.ConversationSettingFragment$15:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationSettingFragment$16 -> io.rong.imkit.fragment.ConversationSettingFragment$16:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationSettingFragment$17 -> io.rong.imkit.fragment.ConversationSettingFragment$17:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationSettingFragment$18 -> io.rong.imkit.fragment.ConversationSettingFragment$18:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationSettingFragment$19 -> io.rong.imkit.fragment.ConversationSettingFragment$19:
    java.lang.String val$userId -> val$userId
    int val$position -> val$position
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationSettingFragment$19$1 -> io.rong.imkit.fragment.ConversationSettingFragment$19$1:
    io.rong.imkit.fragment.ConversationSettingFragment$19 this$1 -> this$1
    void onSuccess(io.rong.imkit.model.UIUserInfo) -> onSuccess
    void onExist(java.lang.Object) -> onExist
    void onError() -> onError
io.rong.imkit.fragment.ConversationSettingFragment$2 -> io.rong.imkit.fragment.ConversationSettingFragment$2:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationSettingFragment$3 -> io.rong.imkit.fragment.ConversationSettingFragment$3:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onSuccess(io.rong.imkit.model.UIDiscussion) -> onSuccess
    void onError() -> onError
io.rong.imkit.fragment.ConversationSettingFragment$4 -> io.rong.imkit.fragment.ConversationSettingFragment$4:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.rong.imkit.fragment.ConversationSettingFragment$5 -> io.rong.imkit.fragment.ConversationSettingFragment$5:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onSuccess(io.rong.imkit.model.UIDiscussion) -> onSuccess
    void onError() -> onError
io.rong.imkit.fragment.ConversationSettingFragment$6 -> io.rong.imkit.fragment.ConversationSettingFragment$6:
    android.content.Intent val$intent -> val$intent
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationSettingFragment$6$1 -> io.rong.imkit.fragment.ConversationSettingFragment$6$1:
    io.rong.imkit.fragment.ConversationSettingFragment$6 this$1 -> this$1
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ConversationSettingFragment$7 -> io.rong.imkit.fragment.ConversationSettingFragment$7:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationSettingFragment$8 -> io.rong.imkit.fragment.ConversationSettingFragment$8:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ConversationSettingFragment$9 -> io.rong.imkit.fragment.ConversationSettingFragment$9:
    io.rong.imkit.fragment.ConversationSettingFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.FriendListFragment -> io.rong.imkit.fragment.FriendListFragment:
    io.rong.imkit.adapter.FriendListAdapter mAdapter -> mAdapter
    io.rong.imkit.view.PinnedHeaderListView mListView -> mListView
    io.rong.imkit.view.SwitchGroup mSwitchGroup -> mSwitchGroup
    io.rong.imkit.view.SearchHeaderView mSearchHeader -> mSearchHeader
    android.widget.EditText mEditText -> mEditText
    java.util.List mFriendsList -> mFriendsList
    int mFilterFriendCount -> mFilterFriendCount
    boolean isMultiChoice -> isMultiChoice
    java.util.ArrayList mSelectedItemIds -> mSelectedItemIds
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onBackPressed() -> onBackPressed
    void fillData() -> fillData
    void onFilterFinished() -> onFilterFinished
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onDestroyView() -> onDestroyView
    boolean isMultiChoice() -> isMultiChoice
    void setMultiChoice(boolean,java.util.ArrayList) -> setMultiChoice
    java.util.ArrayList sortFriends(java.util.List) -> sortFriends
io.rong.imkit.fragment.FriendListFragment$1 -> io.rong.imkit.fragment.FriendListFragment$1:
    io.rong.imkit.fragment.FriendListFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.FriendMultiChoiceFragment -> io.rong.imkit.fragment.FriendMultiChoiceFragment:
    java.lang.String TAG -> TAG
    int HANDLE_UPDATE_CONFIRM_BUTTON -> HANDLE_UPDATE_CONFIRM_BUTTON
    io.rong.imkit.adapter.FriendMultiChoiceAdapter$MutilChoiceCallback mCallback -> mCallback
    android.widget.TextView mConfirmTextView -> mConfirmTextView
    java.lang.String mConfirmFromatString -> mConfirmFromatString
    java.util.ArrayList mMemberIds -> mMemberIds
    io.rong.imlib.RongIMClient$ConversationType mConversationType -> mConversationType
    java.lang.String mDiscussionId -> mDiscussionId
    android.os.Handler mHandle -> mHandle
    io.rong.imkit.view.LoadingDialog mLoadingDialog -> mLoadingDialog
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void selectButtonShowStyle(int) -> selectButtonShowStyle
    void selectPeopleComplete() -> selectPeopleComplete
    boolean outOfMaxPrompt(int) -> outOfMaxPrompt
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void registerActions(java.util.List) -> registerActions
    boolean handleMessage(android.os.Message) -> handleMessage
    void access$000(io.rong.imkit.fragment.FriendMultiChoiceFragment) -> access$000
    io.rong.imkit.view.LoadingDialog access$100(io.rong.imkit.fragment.FriendMultiChoiceFragment) -> access$100
    boolean access$200(io.rong.imkit.fragment.FriendMultiChoiceFragment,int) -> access$200
    java.util.ArrayList access$300(io.rong.imkit.fragment.FriendMultiChoiceFragment) -> access$300
    android.os.Handler access$400(io.rong.imkit.fragment.FriendMultiChoiceFragment) -> access$400
io.rong.imkit.fragment.FriendMultiChoiceFragment$1 -> io.rong.imkit.fragment.FriendMultiChoiceFragment$1:
    io.rong.imkit.fragment.FriendMultiChoiceFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.FriendMultiChoiceFragment$2 -> io.rong.imkit.fragment.FriendMultiChoiceFragment$2:
    io.rong.imkit.fragment.FriendMultiChoiceFragment this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imkit.RongIM$OperationCallback$ErrorCode) -> onError
io.rong.imkit.fragment.FriendMultiChoiceFragment$3 -> io.rong.imkit.fragment.FriendMultiChoiceFragment$3:
    io.rong.imkit.fragment.FriendMultiChoiceFragment this$0 -> this$0
    void callback(int) -> callback
io.rong.imkit.fragment.PublishShowImageFragment -> io.rong.imkit.fragment.PublishShowImageFragment:
    uk.co.senab.photoview.PhotoView mImageView -> mImageView
    android.widget.Button mBtnDel -> mBtnDel
    android.widget.Button mBtnConfirm -> mBtnConfirm
    io.rong.imkit.view.LoadingDialog mDialog -> mDialog
    android.net.Uri mUri -> mUri
    java.io.File mFile -> mFile
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    boolean onBackPressed() -> onBackPressed
    android.net.Uri access$000(io.rong.imkit.fragment.PublishShowImageFragment) -> access$000
    java.io.File access$100(io.rong.imkit.fragment.PublishShowImageFragment) -> access$100
    uk.co.senab.photoview.PhotoView access$200(io.rong.imkit.fragment.PublishShowImageFragment) -> access$200
    io.rong.imkit.view.LoadingDialog access$300(io.rong.imkit.fragment.PublishShowImageFragment) -> access$300
io.rong.imkit.fragment.PublishShowImageFragment$1 -> io.rong.imkit.fragment.PublishShowImageFragment$1:
    io.rong.imkit.fragment.PublishShowImageFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.PublishShowImageFragment$2 -> io.rong.imkit.fragment.PublishShowImageFragment$2:
    io.rong.imkit.fragment.PublishShowImageFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.PublishShowImageFragment$ImageProcess -> io.rong.imkit.fragment.PublishShowImageFragment$ImageProcess:
    io.rong.imkit.fragment.PublishShowImageFragment this$0 -> this$0
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.rong.imkit.fragment.ShowDownloadImageFragment -> io.rong.imkit.fragment.ShowDownloadImageFragment:
    java.lang.String MESSAGE_IMAGE_KEY -> MESSAGE_IMAGE_KEY
    android.widget.ImageView mImageView -> mImageView
    android.net.Uri mImageUri -> mImageUri
    android.os.Handler mHandler -> mHandler
    io.rong.imkit.view.LoadingDialog mDialog -> mDialog
    android.widget.TextView mSaveTextView -> mSaveTextView
    java.io.File mFile -> mFile
    java.lang.String mTargetId -> mTargetId
    int HANDLE_DOWNLOAD_SUCCESS -> HANDLE_DOWNLOAD_SUCCESS
    int HANDLE_DOWNLOAD_FAILURE -> HANDLE_DOWNLOAD_FAILURE
    int HANDLER_LOCAL_PATH -> HANDLER_LOCAL_PATH
    java.lang.String IMAGE_DESCRIPTION -> IMAGE_DESCRIPTION
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean handleMessage(android.os.Message) -> handleMessage
    void setImage(java.lang.String) -> setImage
    void onClick(android.view.View) -> onClick
    boolean onBackPressed() -> onBackPressed
    android.os.Handler access$000(io.rong.imkit.fragment.ShowDownloadImageFragment) -> access$000
    android.widget.ImageView access$100(io.rong.imkit.fragment.ShowDownloadImageFragment) -> access$100
    io.rong.imkit.view.LoadingDialog access$200(io.rong.imkit.fragment.ShowDownloadImageFragment) -> access$200
    java.io.File access$300(io.rong.imkit.fragment.ShowDownloadImageFragment) -> access$300
io.rong.imkit.fragment.ShowDownloadImageFragment$1 -> io.rong.imkit.fragment.ShowDownloadImageFragment$1:
    io.rong.imkit.fragment.ShowDownloadImageFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.ShowDownloadImageFragment$2 -> io.rong.imkit.fragment.ShowDownloadImageFragment$2:
    io.rong.imkit.fragment.ShowDownloadImageFragment this$0 -> this$0
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.rong.imkit.fragment.ShowDownloadImageFragment$3 -> io.rong.imkit.fragment.ShowDownloadImageFragment$3:
    io.rong.imkit.fragment.ShowDownloadImageFragment this$0 -> this$0
    void callback(android.content.Intent) -> callback
io.rong.imkit.fragment.ShowDownloadImageFragment$4 -> io.rong.imkit.fragment.ShowDownloadImageFragment$4:
    io.rong.imkit.fragment.ShowDownloadImageFragment this$0 -> this$0
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.rong.imkit.fragment.ShowDownloadImageFragment$ImageProcess -> io.rong.imkit.fragment.ShowDownloadImageFragment$ImageProcess:
    io.rong.imkit.fragment.ShowDownloadImageFragment this$0 -> this$0
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.rong.imkit.libs.pinyin.PinyinHelper -> io.rong.imkit.libs.pinyin.PinyinHelper:
    char First_HANZI -> First_HANZI
    char LAST_HANZI -> LAST_HANZI
    io.rong.imkit.libs.pinyin.PinyinHelper mInstance -> mInstance
    java.lang.String[] PINYINS -> PINYINS
    java.lang.String NONE -> NONE
    java.lang.String FILE_PATH -> FILE_PATH
    io.rong.imkit.libs.pinyin.PinyinHelper getInstance() -> getInstance
    java.util.List getPinyins(java.lang.String) -> getPinyins
    java.lang.String getPinyins(java.lang.String,java.lang.String) -> getPinyins
    java.lang.String getFirstPinyins(java.lang.String) -> getFirstPinyins
    boolean isHanzi(char) -> isHanzi
    boolean isHanzi(java.lang.String) -> isHanzi
    boolean isContainsHanzi(java.lang.String) -> isContainsHanzi
io.rong.imkit.logic.ActionListener -> io.rong.imkit.logic.ActionListener:
    void onHandleAction(android.content.Intent) -> onHandleAction
io.rong.imkit.logic.BaseLogic -> io.rong.imkit.logic.BaseLogic:
    void onHandleAction(android.content.Intent) -> onHandleAction
    void destroy() -> destroy
io.rong.imkit.logic.LogicManager -> io.rong.imkit.logic.LogicManager:
    io.rong.imkit.logic.LogicManager mlogicManager -> mlogicManager
    java.util.Map mLogics -> mLogics
    io.rong.imkit.logic.MessageLogic messageLogic -> messageLogic
    io.rong.imkit.logic.LogicManager getInstance() -> getInstance
    void init(io.rong.imkit.service.RongIMService) -> init
    void onDestory() -> onDestory
io.rong.imkit.logic.MessageLogic -> io.rong.imkit.logic.MessageLogic:
    java.lang.String TAG -> TAG
    java.lang.String TARGET_ID -> TARGET_ID
    java.lang.String LEFT_MESSAGE_COUNT -> LEFT_MESSAGE_COUNT
    java.lang.String MESSAGE_COUNT -> MESSAGE_COUNT
    java.lang.String DISCUSSION_NAME -> DISCUSSION_NAME
    java.lang.String DISCUSSION_MEMBER_ID -> DISCUSSION_MEMBER_ID
    java.lang.String DISCUSSION_ID -> DISCUSSION_ID
    java.lang.String DISCUSSION_IS_OPEN_INVITE_STATUS -> DISCUSSION_IS_OPEN_INVITE_STATUS
    java.lang.String DISCUSSION_OBJECT -> DISCUSSION_OBJECT
    java.lang.String INTENT_API_OPERATION_STATUS -> INTENT_API_OPERATION_STATUS
    java.lang.String INTENT_STATUE_VALUE -> INTENT_STATUE_VALUE
    java.lang.String SEND_MESSAGE_STATE -> SEND_MESSAGE_STATE
    java.lang.String MESSAGE_ID_SEND_MESSAGE_RETURN -> MESSAGE_ID_SEND_MESSAGE_RETURN
    java.lang.String MESSAGE_OBJ_SEND_MESSAGE_RETURN -> MESSAGE_OBJ_SEND_MESSAGE_RETURN
    java.lang.String SEND_MESSAGE_RETURN_ERROR -> SEND_MESSAGE_RETURN_ERROR
    java.lang.String INTENT_MESSAGE_FILE_DOWN_TYPE -> INTENT_MESSAGE_FILE_DOWN_TYPE
    java.lang.String INTENT_MESSAGE_FILE_DOWN_RES -> INTENT_MESSAGE_FILE_DOWN_RES
    java.lang.String INTENT_MESSAGE_FILE_DOWN_RES_PATH -> INTENT_MESSAGE_FILE_DOWN_RES_PATH
    java.lang.String INTENT_MESSAGE_FILE_DOWN_PROGRESS -> INTENT_MESSAGE_FILE_DOWN_PROGRESS
    java.lang.String INTENT_CONVERSATION_TYPE -> INTENT_CONVERSATION_TYPE
    java.lang.String INTENT_NEW_MESSAGE_BLOCK -> INTENT_NEW_MESSAGE_BLOCK
    java.lang.String INTENT_IS_COMPLETE -> INTENT_IS_COMPLETE
    java.lang.String INTENT_USER_ID -> INTENT_USER_ID
    java.lang.String INTENT_NETWORK_CONNECT_STATE -> INTENT_NETWORK_CONNECT_STATE
    io.rong.imkit.service.RongIMService mRongIMService -> mRongIMService
    android.os.Handler mHandle -> mHandle
    android.os.Looper mLooper -> mLooper
    android.os.Handler mWorkHander -> mWorkHander
    int mConnectStatus -> mConnectStatus
    io.rong.imkit.logic.MessageLogic sS -> sS
    java.lang.String peerUserPhoteUri -> peerUserPhoteUri
    boolean isStartVoip -> isStartVoip
    android.os.Handler mVoipHandler -> mVoipHandler
    int mCount -> mCount
    io.rong.imlib.RongIMClient$OnReceiveMessageListener onReceiveMessageListener -> onReceiveMessageListener
    void init(io.rong.imkit.service.RongIMService) -> init
    io.rong.imkit.logic.MessageLogic getInstance() -> getInstance
    void onHandleAction(android.content.Intent) -> onHandleAction
    void sendMessage(android.content.Intent) -> sendMessage
    void getUserInfo(java.lang.String,io.rong.imkit.logic.MessageLogic$GetUserInfoCallback) -> getUserInfo
    void registerReceviceMessage() -> registerReceviceMessage
    void downloadFile(android.content.Intent) -> downloadFile
    void inviteMemberToDiscussion(java.lang.String,java.util.List,io.rong.imkit.RongIM$OperationCallback) -> inviteMemberToDiscussion
    void createDiscussion(android.content.Intent) -> createDiscussion
    void removeMemberFromDiscussion(java.lang.String,java.lang.String,io.rong.imkit.RongIM$OperationCallback) -> removeMemberFromDiscussion
    void getDiscussion(android.content.Intent) -> getDiscussion
    void quitDiscussion(android.content.Intent) -> quitDiscussion
    void updateDiscussionName(android.content.Intent) -> updateDiscussionName
    void setDiscussionInviteStatus(android.content.Intent) -> setDiscussionInviteStatus
    void setBlockPushStatus(android.content.Intent) -> setBlockPushStatus
    void getBlockPushStatus(android.content.Intent) -> getBlockPushStatus
    boolean handleMessage(android.os.Message) -> handleMessage
    void destroy() -> destroy
    io.rong.imkit.service.RongIMService access$000(io.rong.imkit.logic.MessageLogic) -> access$000
    android.os.Handler access$100(io.rong.imkit.logic.MessageLogic) -> access$100
    boolean access$200(io.rong.imkit.logic.MessageLogic) -> access$200
    java.lang.String access$300(io.rong.imkit.logic.MessageLogic) -> access$300
    boolean access$202(io.rong.imkit.logic.MessageLogic,boolean) -> access$202
    java.lang.String access$302(io.rong.imkit.logic.MessageLogic,java.lang.String) -> access$302
    int access$400(io.rong.imkit.logic.MessageLogic) -> access$400
    int access$402(io.rong.imkit.logic.MessageLogic,int) -> access$402
    android.os.Handler access$500(io.rong.imkit.logic.MessageLogic) -> access$500
io.rong.imkit.logic.MessageLogic$1 -> io.rong.imkit.logic.MessageLogic$1:
    io.rong.imkit.logic.MessageLogic$GetUserInfoCallback val$getUserInfoCallback -> val$getUserInfoCallback
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$10 -> io.rong.imkit.logic.MessageLogic$10:
    android.content.Intent val$intent -> val$intent
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$11 -> io.rong.imkit.logic.MessageLogic$11:
    android.content.Intent val$intent -> val$intent
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$12 -> io.rong.imkit.logic.MessageLogic$12:
    android.content.Intent val$intent -> val$intent
    boolean val$isOpen -> val$isOpen
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$13 -> io.rong.imkit.logic.MessageLogic$13:
    android.content.Intent val$intent -> val$intent
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$14 -> io.rong.imkit.logic.MessageLogic$14:
    android.content.Intent val$intent -> val$intent
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$2 -> io.rong.imkit.logic.MessageLogic$2:
    io.rong.imkit.logic.MessageLogic$GetUserInfoCallback val$getUserInfoCallback -> val$getUserInfoCallback
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$3 -> io.rong.imkit.logic.MessageLogic$3:
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.logic.MessageLogic$4 -> io.rong.imkit.logic.MessageLogic$4:
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onReceived(io.rong.imlib.RongIMClient$Message,int) -> onReceived
io.rong.imkit.logic.MessageLogic$4$1 -> io.rong.imkit.logic.MessageLogic$4$1:
    java.lang.reflect.Method val$setFromUserNameMethod -> val$setFromUserNameMethod
    io.rong.imlib.RongIMClient$Message val$message -> val$message
    io.rong.imkit.logic.MessageLogic$4 this$1 -> this$1
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError() -> onError
io.rong.imkit.logic.MessageLogic$5 -> io.rong.imkit.logic.MessageLogic$5:
    android.content.Intent val$intentArg -> val$intentArg
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onProgress(int) -> onProgress
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$6 -> io.rong.imkit.logic.MessageLogic$6:
    io.rong.imkit.logic.MessageLogic$EventInviteDiscussion val$event -> val$event
    io.rong.imkit.RongIM$OperationCallback val$callback -> val$callback
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$6$1 -> io.rong.imkit.logic.MessageLogic$6$1:
    io.rong.imkit.logic.MessageLogic$6 this$1 -> this$1
    void run() -> run
io.rong.imkit.logic.MessageLogic$6$2 -> io.rong.imkit.logic.MessageLogic$6$2:
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.logic.MessageLogic$6 this$1 -> this$1
    void run() -> run
io.rong.imkit.logic.MessageLogic$7 -> io.rong.imkit.logic.MessageLogic$7:
    android.content.Intent val$intent -> val$intent
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$8 -> io.rong.imkit.logic.MessageLogic$8:
    io.rong.imkit.logic.MessageLogic$EventRemoveDiscussion val$event -> val$event
    io.rong.imkit.RongIM$OperationCallback val$callback -> val$callback
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$8$1 -> io.rong.imkit.logic.MessageLogic$8$1:
    io.rong.imkit.logic.MessageLogic$8 this$1 -> this$1
    void run() -> run
io.rong.imkit.logic.MessageLogic$8$2 -> io.rong.imkit.logic.MessageLogic$8$2:
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.logic.MessageLogic$8 this$1 -> this$1
    void run() -> run
io.rong.imkit.logic.MessageLogic$9 -> io.rong.imkit.logic.MessageLogic$9:
    android.content.Intent val$intent -> val$intent
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$Discussion) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$EventInviteDiscussion -> io.rong.imkit.logic.MessageLogic$EventInviteDiscussion:
    java.lang.String discussionId -> discussionId
    java.util.List userIdList -> userIdList
    java.lang.String getDiscussionId() -> getDiscussionId
    void setDiscussionId(java.lang.String) -> setDiscussionId
    java.util.List getUserIdList() -> getUserIdList
    void setUserIdList(java.util.List) -> setUserIdList
io.rong.imkit.logic.MessageLogic$EventRemoveDiscussion -> io.rong.imkit.logic.MessageLogic$EventRemoveDiscussion:
    java.lang.String userId -> userId
    java.lang.String discussionId -> discussionId
    java.lang.String getDiscussionId() -> getDiscussionId
    void setDiscussionId(java.lang.String) -> setDiscussionId
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
io.rong.imkit.logic.MessageLogic$EventResult -> io.rong.imkit.logic.MessageLogic$EventResult:
    boolean isSuccess -> isSuccess
    io.rong.imkit.model.ErrorCode errorCode -> errorCode
    io.rong.imkit.model.ErrorCode getErrorCode() -> getErrorCode
    void setErrorCode(io.rong.imkit.model.ErrorCode) -> setErrorCode
    void setErrorCode(int) -> setErrorCode
    boolean isSuccess() -> isSuccess
    void setSuccess(boolean) -> setSuccess
io.rong.imkit.logic.MessageLogic$GetUserInfoCallback -> io.rong.imkit.logic.MessageLogic$GetUserInfoCallback:
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError() -> onError
io.rong.imkit.logic.MessageLogic$NoticeFilterRunnable -> io.rong.imkit.logic.MessageLogic$NoticeFilterRunnable:
    io.rong.imlib.RongIMClient$Message message -> message
    int leftMessageCount -> leftMessageCount
    int count -> count
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void run() -> run
    void newMessageNotifycation(io.rong.imkit.model.UIMessage,int,int) -> newMessageNotifycation
    void access$600(io.rong.imkit.logic.MessageLogic$NoticeFilterRunnable,io.rong.imkit.model.UIMessage,int,int) -> access$600
io.rong.imkit.logic.MessageLogic$NoticeFilterRunnable$1 -> io.rong.imkit.logic.MessageLogic$NoticeFilterRunnable$1:
    android.content.Intent val$finalIntent -> val$finalIntent
    io.rong.imkit.model.UIMessage val$uiMessage -> val$uiMessage
    io.rong.imkit.logic.MessageLogic$NoticeFilterRunnable this$1 -> this$1
    void onSuccess(io.rong.imlib.RongIMClient$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$SendMessageRunnable -> io.rong.imkit.logic.MessageLogic$SendMessageRunnable:
    io.rong.imkit.model.UIMessage message -> message
    io.rong.imlib.RongIMClient$Message oriMessage -> oriMessage
    android.content.Intent intent -> intent
    io.rong.imkit.logic.MessageLogic this$0 -> this$0
    void run() -> run
io.rong.imkit.logic.MessageLogic$SendMessageRunnable$1 -> io.rong.imkit.logic.MessageLogic$SendMessageRunnable$1:
    io.rong.imkit.logic.MessageLogic$SendMessageRunnable this$1 -> this$1
    void onSuccess(int) -> onSuccess
    void onProgress(int,int) -> onProgress
    void onError(int,io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode) -> onError
io.rong.imkit.logic.MessageLogic$SendMessageRunnable$1$1 -> io.rong.imkit.logic.MessageLogic$SendMessageRunnable$1$1:
    io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode val$errorCode -> val$errorCode
    io.rong.imkit.logic.MessageLogic$SendMessageRunnable$1 this$2 -> this$2
    void run() -> run
io.rong.imkit.logic.UserInfoLogic -> io.rong.imkit.logic.UserInfoLogic:
    java.lang.String ACTION_GET_USER_INFO -> ACTION_GET_USER_INFO
    java.lang.String ACTION_GET_USER_PORTRAIT -> ACTION_GET_USER_PORTRAIT
    io.rong.imkit.service.RongIMService mFCloudService -> mFCloudService
    void onHandleAction(android.content.Intent) -> onHandleAction
    void destroy() -> destroy
io.rong.imkit.model.ErrorCode -> io.rong.imkit.model.ErrorCode:
    io.rong.imkit.model.ErrorCode NOT_CONNECTED -> NOT_CONNECTED
    io.rong.imkit.model.ErrorCode ARGUMENT_EXCEPTION -> ARGUMENT_EXCEPTION
    io.rong.imkit.model.ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imkit.model.ErrorCode PACKAGE_BROKEN -> PACKAGE_BROKEN
    io.rong.imkit.model.ErrorCode SERVER_UNAVAILABLE -> SERVER_UNAVAILABLE
    io.rong.imkit.model.ErrorCode TOKEN_INCORRECT -> TOKEN_INCORRECT
    io.rong.imkit.model.ErrorCode APP_KEY_UNAVAILABLE -> APP_KEY_UNAVAILABLE
    io.rong.imkit.model.ErrorCode DATABASE_ERROR -> DATABASE_ERROR
    io.rong.imkit.model.ErrorCode HANDLER_EXP -> HANDLER_EXP
    io.rong.imkit.model.ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imkit.model.ErrorCode[] $VALUES -> $VALUES
    io.rong.imkit.model.ErrorCode[] values() -> values
    io.rong.imkit.model.ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    io.rong.imkit.model.ErrorCode setValue(int) -> setValue
io.rong.imkit.model.Friend -> io.rong.imkit.model.Friend:
    java.lang.String userId -> userId
    java.lang.String nickname -> nickname
    java.lang.String nicknamePinyin -> nicknamePinyin
    java.lang.String portrait -> portrait
    char searchKey -> searchKey
    com.sea_monster.core.resource.model.Resource portraitResource -> portraitResource
    boolean isCall -> isCall
    boolean isAdd -> isAdd
    boolean isSub -> isSub
    boolean isDel -> isDel
    boolean isSelected -> isSelected
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getNickname() -> getNickname
    void setNickname(java.lang.String) -> setNickname
    void createSeachKey(java.lang.String) -> createSeachKey
    java.lang.String getNicknamePinyin() -> getNicknamePinyin
    void setNicknamePinyin(java.lang.String) -> setNicknamePinyin
    java.lang.String getPortrait() -> getPortrait
    void setPortrait(java.lang.String) -> setPortrait
    int compareTo(io.rong.imkit.model.Friend) -> compareTo
    java.lang.String getFilterKey() -> getFilterKey
    char getSearchKey() -> getSearchKey
    void setSearchKey(char) -> setSearchKey
    com.sea_monster.core.resource.model.Resource getPortraitResource() -> getPortraitResource
    void setPortraitResource(com.sea_monster.core.resource.model.Resource) -> setPortraitResource
    boolean isAdd() -> isAdd
    void setAdd(boolean) -> setAdd
    boolean isSub() -> isSub
    void setSub(boolean) -> setSub
    boolean isDel() -> isDel
    void setDel(boolean) -> setDel
    boolean isCall() -> isCall
    void setCall(boolean) -> setCall
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    int compareTo(java.lang.Object) -> compareTo
io.rong.imkit.model.FriendSectionIndexer -> io.rong.imkit.model.FriendSectionIndexer:
    java.lang.String[] mSections -> mSections
    int[] mPositions -> mPositions
    int mCount -> mCount
    java.lang.Object[] getSections() -> getSections
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    void setProfileHeader(java.lang.String) -> setProfileHeader
io.rong.imkit.model.Group -> io.rong.imkit.model.Group:
    java.lang.Long id -> id
    java.lang.String ownerId -> ownerId
    java.lang.String group_id -> group_id
    java.lang.String group_name -> group_name
    java.lang.String sort_key -> sort_key
    java.lang.String group_nickname -> group_nickname
    java.lang.String user_nickname -> user_nickname
    java.lang.String group_type -> group_type
    java.lang.String version -> version
    java.lang.String introduce -> introduce
    java.lang.String bulletin -> bulletin
    java.lang.String portrait_url -> portrait_url
    java.lang.String current_member_count -> current_member_count
    java.lang.String limit_member_count -> limit_member_count
    java.lang.String create_date -> create_date
    java.lang.String is_top -> is_top
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.String getOwnerId() -> getOwnerId
    void setOwnerId(java.lang.String) -> setOwnerId
    java.lang.String getGroup_id() -> getGroup_id
    void setGroup_id(java.lang.String) -> setGroup_id
    java.lang.String getGroup_name() -> getGroup_name
    void setGroup_name(java.lang.String) -> setGroup_name
    java.lang.String getSort_key() -> getSort_key
    void setSort_key(java.lang.String) -> setSort_key
    java.lang.String getGroup_nickname() -> getGroup_nickname
    void setGroup_nickname(java.lang.String) -> setGroup_nickname
    java.lang.String getUser_nickname() -> getUser_nickname
    void setUser_nickname(java.lang.String) -> setUser_nickname
    java.lang.String getGroup_type() -> getGroup_type
    void setGroup_type(java.lang.String) -> setGroup_type
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getIntroduce() -> getIntroduce
    void setIntroduce(java.lang.String) -> setIntroduce
    java.lang.String getBulletin() -> getBulletin
    void setBulletin(java.lang.String) -> setBulletin
    java.lang.String getPortrait_url() -> getPortrait_url
    void setPortrait_url(java.lang.String) -> setPortrait_url
    java.lang.String getCurrent_member_count() -> getCurrent_member_count
    void setCurrent_member_count(java.lang.String) -> setCurrent_member_count
    java.lang.String getLimit_member_count() -> getLimit_member_count
    void setLimit_member_count(java.lang.String) -> setLimit_member_count
    java.lang.String getCreate_date() -> getCreate_date
    void setCreate_date(java.lang.String) -> setCreate_date
    java.lang.String getIs_top() -> getIs_top
    void setIs_top(java.lang.String) -> setIs_top
io.rong.imkit.model.GroupMember -> io.rong.imkit.model.GroupMember:
    java.lang.Long id -> id
    java.lang.String user_id -> user_id
    java.lang.String group_nickname -> group_nickname
    java.lang.String user_nickname -> user_nickname
    java.lang.String sort_key -> sort_key
    java.lang.String group_id -> group_id
    java.lang.String portrait_url -> portrait_url
    java.lang.String owner_id -> owner_id
    java.lang.String identity -> identity
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.String getUser_id() -> getUser_id
    void setUser_id(java.lang.String) -> setUser_id
    java.lang.String getGroup_nickname() -> getGroup_nickname
    void setGroup_nickname(java.lang.String) -> setGroup_nickname
    java.lang.String getUser_nickname() -> getUser_nickname
    void setUser_nickname(java.lang.String) -> setUser_nickname
    java.lang.String getSort_key() -> getSort_key
    void setSort_key(java.lang.String) -> setSort_key
    java.lang.String getGroup_id() -> getGroup_id
    void setGroup_id(java.lang.String) -> setGroup_id
    java.lang.String getPortrait_url() -> getPortrait_url
    void setPortrait_url(java.lang.String) -> setPortrait_url
    java.lang.String getOwner_id() -> getOwner_id
    void setOwner_id(java.lang.String) -> setOwner_id
    java.lang.String getIdentity() -> getIdentity
    void setIdentity(java.lang.String) -> setIdentity
io.rong.imkit.model.HandshakeMessage -> io.rong.imkit.model.HandshakeMessage:
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    byte[] encode() -> encode
io.rong.imkit.model.HighLightFlag -> io.rong.imkit.model.HighLightFlag:
    int start -> start
    int end -> end
    java.lang.String url -> url
    java.lang.String title -> title
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getStart() -> getStart
    void setStart(int) -> setStart
    int getEnd() -> getEnd
    void setEnd(int) -> setEnd
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imkit.model.HighLightFlag$1 -> io.rong.imkit.model.HighLightFlag$1:
    io.rong.imkit.model.HighLightFlag createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imkit.model.HighLightFlag[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imkit.model.HightLightContent -> io.rong.imkit.model.HightLightContent:
    byte NONE_FLAG -> NONE_FLAG
    byte EMOTION_FLAG -> EMOTION_FLAG
    byte OTHER_FLAG -> OTHER_FLAG
    byte MIX_FLAG -> MIX_FLAG
    java.lang.String content -> content
    java.util.List flags -> flags
    io.rong.imkit.model.HighLightFlag hlfFlag -> hlfFlag
    byte typeFlag -> typeFlag
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.util.List getFlags() -> getFlags
    void setFlags(java.util.List) -> setFlags
    int describeContents() -> describeContents
    byte getTypeFlag() -> getTypeFlag
    void setTypeFlag(byte) -> setTypeFlag
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    io.rong.imkit.model.HighLightFlag getHlfFlag() -> getHlfFlag
    void setHlfFlag(io.rong.imkit.model.HighLightFlag) -> setHlfFlag
io.rong.imkit.model.HightLightContent$1 -> io.rong.imkit.model.HightLightContent$1:
    io.rong.imkit.model.HightLightContent createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imkit.model.HightLightContent[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imkit.model.IFilterModel -> io.rong.imkit.model.IFilterModel:
    java.lang.String getFilterKey() -> getFilterKey
io.rong.imkit.model.IFriend -> io.rong.imkit.model.IFriend:
    java.lang.String getUserId() -> getUserId
    java.lang.String getNickname() -> getNickname
    java.lang.String getNicknamePinyin() -> getNicknamePinyin
    char getSearchKey() -> getSearchKey
    java.lang.String getPortrait() -> getPortrait
io.rong.imkit.model.RCloudType -> io.rong.imkit.model.RCloudType:
io.rong.imkit.model.RCloudTypeList -> io.rong.imkit.model.RCloudTypeList:
    long serialVersionUID -> serialVersionUID
io.rong.imkit.model.UIConversation -> io.rong.imkit.model.UIConversation:
    io.rong.imkit.model.UIUserInfo userInfo -> userInfo
    io.rong.imkit.model.UIDiscussion uiDiscussion -> uiDiscussion
    io.rong.imkit.model.UIGroup uiGroup -> uiGroup
    io.rong.imkit.model.UIUserInfo operator -> operator
    io.rong.imkit.model.UIUserInfo operatored -> operatored
    int TEXT_MESSAGE -> TEXT_MESSAGE
    int IMAGE_MESSAGE -> IMAGE_MESSAGE
    int VOICE_MESSAGE -> VOICE_MESSAGE
    int RICH_CONTENT_MESSAGE -> RICH_CONTENT_MESSAGE
    int LOCATION_MESSAGE -> LOCATION_MESSAGE
    int INFONOTIFICATION_MESSAGE -> INFONOTIFICATION_MESSAGE
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.text.SpannableStringBuilder textMessageContent -> textMessageContent
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.text.SpannableStringBuilder getTextMessageContent() -> getTextMessageContent
    io.rong.imkit.model.UIUserInfo getUserInfo() -> getUserInfo
    void setUserInfo(io.rong.imkit.model.UIUserInfo) -> setUserInfo
    void setTextMessageContent(android.text.SpannableStringBuilder) -> setTextMessageContent
    io.rong.imkit.model.UIDiscussion getUiDiscussion() -> getUiDiscussion
    void setUiDiscussion(io.rong.imkit.model.UIDiscussion) -> setUiDiscussion
    io.rong.imkit.model.UIGroup getUiGroup() -> getUiGroup
    void setUiGroup(io.rong.imkit.model.UIGroup) -> setUiGroup
    java.lang.String getTextMessageContentStr() -> getTextMessageContentStr
    java.lang.String getUIImageContent(android.content.Context) -> getUIImageContent
    java.lang.String getUIVoiceContent(android.content.Context) -> getUIVoiceContent
    java.lang.String getUIImageTextContent(android.content.Context) -> getUIImageTextContent
    java.lang.String getUILocationContent(android.content.Context) -> getUILocationContent
    io.rong.imkit.model.UIUserInfo getOperator() -> getOperator
    void setOperator(io.rong.imkit.model.UIUserInfo) -> setOperator
    io.rong.imkit.model.UIUserInfo getOperatored() -> getOperatored
    void setOperatored(io.rong.imkit.model.UIUserInfo) -> setOperatored
io.rong.imkit.model.UIConversation$1 -> io.rong.imkit.model.UIConversation$1:
    io.rong.imkit.model.UIConversation createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imkit.model.UIConversation[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imkit.model.UIDiscussion -> io.rong.imkit.model.UIDiscussion:
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String adminId -> adminId
    java.util.List userIds -> userIds
    java.lang.String portiantUrl -> portiantUrl
    java.util.ArrayList members -> members
    int memberCount -> memberCount
    boolean isOpen -> isOpen
    boolean isAlertNewMessage -> isAlertNewMessage
    boolean isShowMemberName -> isShowMemberName
    java.util.ArrayList memberPortaintUrl -> memberPortaintUrl
    java.util.ArrayList portaintUrl -> portaintUrl
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isOpen() -> isOpen
    void setOpen(boolean) -> setOpen
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPortiantUrl() -> getPortiantUrl
    void setPortiantUrl(java.lang.String) -> setPortiantUrl
    java.util.ArrayList getMembers() -> getMembers
    void setMembers(java.util.ArrayList) -> setMembers
    int getMemberCount() -> getMemberCount
    void setMemberCount(int) -> setMemberCount
    boolean isAlertNewMessage() -> isAlertNewMessage
    void setAlertNewMessage(boolean) -> setAlertNewMessage
    boolean isShowMemberName() -> isShowMemberName
    void setShowMemberName(boolean) -> setShowMemberName
    java.util.ArrayList getPortaintUrl() -> getPortaintUrl
    void setPortaintUrl(java.util.ArrayList) -> setPortaintUrl
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.util.ArrayList getMemberPortaintUrl() -> getMemberPortaintUrl
    void setMemberPortaintUrl(java.util.ArrayList) -> setMemberPortaintUrl
    java.lang.String getAdminId() -> getAdminId
    void setAdminId(java.lang.String) -> setAdminId
    java.util.List getUserIds() -> getUserIds
    void setUserIds(java.util.ArrayList) -> setUserIds
io.rong.imkit.model.UIDiscussion$1 -> io.rong.imkit.model.UIDiscussion$1:
    io.rong.imkit.model.UIDiscussion createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imkit.model.UIDiscussion[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imkit.model.UIGroup -> io.rong.imkit.model.UIGroup:
    com.sea_monster.core.resource.model.Resource portraitResource -> portraitResource
    com.sea_monster.core.resource.model.Resource getPortraitResource() -> getPortraitResource
io.rong.imkit.model.UIMessage -> io.rong.imkit.model.UIMessage:
    java.lang.String MESSAGE_OBJ -> MESSAGE_OBJ
    java.lang.String MESSAGE_CATEGORY_TEXT -> MESSAGE_CATEGORY_TEXT
    java.lang.String MESSAGE_CATEGORY_IMAGE -> MESSAGE_CATEGORY_IMAGE
    java.lang.String MESSAGE_CATEGORY_VOICE -> MESSAGE_CATEGORY_VOICE
    java.lang.String MESSAGE_CATEGORY_IMAGE_TEXT -> MESSAGE_CATEGORY_IMAGE_TEXT
    java.lang.String MESSAGE_CATEGORY_DISCUSSION_NOTIFY -> MESSAGE_CATEGORY_DISCUSSION_NOTIFY
    java.lang.String MESSAGE_CATEGORY_LOCATION -> MESSAGE_CATEGORY_LOCATION
    java.lang.String MESSAGE_CATEGORY_INFO_NOTIFICATION -> MESSAGE_CATEGORY_INFO_NOTIFICATION
    java.lang.String MESSAGE_VOICE_READED -> MESSAGE_VOICE_READED
    java.lang.String MESSAGE_VOICE_UNREAD -> MESSAGE_VOICE_UNREAD
    java.lang.String messageCategory -> messageCategory
    io.rong.imkit.model.UIUserInfo userInfo -> userInfo
    java.util.ArrayList portaintUrl -> portaintUrl
    int progressText -> progressText
    boolean isSending -> isSending
    int positionInList -> positionInList
    java.lang.String draft -> draft
    boolean isNotify -> isNotify
    io.rong.imkit.model.UIUserInfo operator -> operator
    io.rong.imkit.model.UIUserInfo operatored -> operatored
    android.text.SpannableStringBuilder textMessageContent -> textMessageContent
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getDraft() -> getDraft
    void setDraft(java.lang.String) -> setDraft
    int getPositionInList() -> getPositionInList
    void setPositionInList(int) -> setPositionInList
    android.text.SpannableStringBuilder getTextMessageContent() -> getTextMessageContent
    android.text.SpannableStringBuilder getInfoMessageContent() -> getInfoMessageContent
    java.lang.String getTextMessageContentStr() -> getTextMessageContentStr
    java.lang.String getUIImageContent(android.content.Context) -> getUIImageContent
    java.lang.String getUIVoiceContent(android.content.Context) -> getUIVoiceContent
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    io.rong.imkit.adapter.BaseViewProvider getItemViewProvider(io.rong.imkit.common.MessageContext) -> getItemViewProvider
    io.rong.imkit.model.UIConversation toConversation() -> toConversation
    java.lang.String getMessageCategory() -> getMessageCategory
    void setMessageCategory(java.lang.String) -> setMessageCategory
    void setTextMessageContent(android.text.SpannableStringBuilder) -> setTextMessageContent
    io.rong.imkit.model.UIUserInfo getUserInfo() -> getUserInfo
    void setUserInfo(io.rong.imkit.model.UIUserInfo) -> setUserInfo
    void setSenderUserId(java.lang.String) -> setSenderUserId
    java.util.ArrayList getPortaintUrl() -> getPortaintUrl
    void setPortaintUrl(java.util.ArrayList) -> setPortaintUrl
    int getProgressText() -> getProgressText
    void setProgressText(int) -> setProgressText
    boolean isSending() -> isSending
    void setSending(boolean) -> setSending
    boolean isNotify() -> isNotify
    void setNotify(boolean) -> setNotify
    io.rong.imkit.model.UIUserInfo getOperatored() -> getOperatored
    void setOperatored(io.rong.imkit.model.UIUserInfo) -> setOperatored
    io.rong.imkit.model.UIUserInfo getOperator() -> getOperator
    void setOperator(io.rong.imkit.model.UIUserInfo) -> setOperator
    io.rong.imkit.adapter.IViewProvider getItemViewProvider(io.rong.imkit.common.MessageContext) -> getItemViewProvider
io.rong.imkit.model.UIMessage$1 -> io.rong.imkit.model.UIMessage$1:
    io.rong.imkit.model.UIMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imkit.model.UIMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imkit.model.UINotificationMessage -> io.rong.imkit.model.UINotificationMessage:
    io.rong.imlib.RongIMClient$UserInfo operatorInfo -> operatorInfo
    java.util.ArrayList userInfos -> userInfos
    android.os.Parcelable$Creator CREATOR -> CREATOR
    io.rong.imlib.RongIMClient$UserInfo getOperatorInfo() -> getOperatorInfo
    void setOperatorInfo(io.rong.imlib.RongIMClient$UserInfo) -> setOperatorInfo
    java.util.ArrayList getUserInfos() -> getUserInfos
    void setUserInfos(java.util.ArrayList) -> setUserInfos
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
io.rong.imkit.model.UINotificationMessage$1 -> io.rong.imkit.model.UINotificationMessage$1:
    io.rong.imkit.model.UINotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imkit.model.UINotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imkit.model.UIUserInfo -> io.rong.imkit.model.UIUserInfo:
    com.sea_monster.core.resource.model.Resource portraitResource -> portraitResource
    boolean isGetSuccess -> isGetSuccess
    long getInfoTime -> getInfoTime
    com.sea_monster.core.resource.model.Resource getPortraitResource() -> getPortraitResource
    void setPortraitResource(com.sea_monster.core.resource.model.Resource) -> setPortraitResource
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean isGetSuccess() -> isGetSuccess
    void setGetSuccess(boolean) -> setGetSuccess
    long getGetInfoTime() -> getGetInfoTime
    void setGetInfoTime(long) -> setGetInfoTime
io.rong.imkit.model.VOIPCallBackObject -> io.rong.imkit.model.VOIPCallBackObject:
    boolean isSuccess -> isSuccess
    java.lang.String objectName -> objectName
    java.lang.Object object -> object
    boolean isSuccess() -> isSuccess
    void setSuccess(boolean) -> setSuccess
    java.lang.String getObjectName() -> getObjectName
    void setObjectName(java.lang.String) -> setObjectName
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
io.rong.imkit.parse.IParser -> io.rong.imkit.parse.IParser:
    io.rong.imkit.model.RCloudType jsonParse(java.lang.String) -> jsonParse
io.rong.imkit.parse.JSONParser -> io.rong.imkit.parse.JSONParser:
io.rong.imkit.service.RongIMService -> io.rong.imkit.service.RongIMService:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_CATION_HASHCODE -> EXTRA_CATION_HASHCODE
    io.rong.imkit.utils.MultiValueMap mResolver -> mResolver
    android.os.Handler mHandler -> mHandler
    android.os.Looper mLooper -> mLooper
    io.rong.imkit.broadcast.SendMessageBroadcast mSendMessageBroadcast -> mSendMessageBroadcast
    io.rong.imkit.service.RongIMService$NewMessageReminderRunnable mLastReminderRunnable -> mLastReminderRunnable
    android.os.Handler handler -> handler
    int HANDLE_GET_USER_INFO_SUCCESS -> HANDLE_GET_USER_INFO_SUCCESS
    int HANDLE_GET_USER_INFO_FAILURE -> HANDLE_GET_USER_INFO_FAILURE
    int HANDLE_GET_DISCUSSION_INFO_SUCCESS -> HANDLE_GET_DISCUSSION_INFO_SUCCESS
    int HANDLE_GET_DISCUSSION_INFO_FAILURE -> HANDLE_GET_DISCUSSION_INFO_FAILURE
    int HANDLE_GET_GROUP_INFO_SUCCESS -> HANDLE_GET_GROUP_INFO_SUCCESS
    int HANDLE_GET_GROUP_INFO_FAILURE -> HANDLE_GET_GROUP_INFO_FAILURE
    int HANDLE_CUSTOM_SERVICE -> HANDLE_CUSTOM_SERVICE
    int HANDLER_SHOW_NOTICE -> HANDLER_SHOW_NOTICE
    int HANDLE_DISCUSSION_GET_USER_INFO_SUCCESS -> HANDLE_DISCUSSION_GET_USER_INFO_SUCCESS
    int HANDLE_DISCUSSION_GET_USER_INFO_FAILURE -> HANDLE_DISCUSSION_GET_USER_INFO_FAILURE
    int HANDLE_GROUP_GET_USER_INFO_SUCCESS -> HANDLE_GROUP_GET_USER_INFO_SUCCESS
    int HANDLE_GROUP_GET_USER_INFO_FAILURE -> HANDLE_GROUP_GET_USER_INFO_FAILURE
    java.lang.String appName -> appName
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onHandleAction(android.content.Intent) -> onHandleAction
    void registerAction(io.rong.imkit.logic.ActionListener,java.util.List) -> registerAction
    void newMessageNotifycation(io.rong.imkit.model.UIMessage,int,int) -> newMessageNotifycation
    void getUserInfo(io.rong.imkit.model.UIConversation,int,int) -> getUserInfo
    void warpMessage(io.rong.imkit.model.UIConversation) -> warpMessage
    boolean isAppOnBackground() -> isAppOnBackground
    void showNotification(android.app.Notification) -> showNotification
    void handlerNotification(io.rong.imkit.model.UIConversation) -> handlerNotification
    java.lang.String getAppName() -> getAppName
    void onDestroy() -> onDestroy
    void getUserInfo(java.lang.String,io.rong.imkit.logic.MessageLogic$GetUserInfoCallback) -> getUserInfo
    void newMessageReminder() -> newMessageReminder
    void playNewMessageSound() -> playNewMessageSound
    void access$000(io.rong.imkit.service.RongIMService,android.content.Intent) -> access$000
    io.rong.imkit.broadcast.SendMessageBroadcast access$102(io.rong.imkit.service.RongIMService,io.rong.imkit.broadcast.SendMessageBroadcast) -> access$102
    io.rong.imkit.broadcast.SendMessageBroadcast access$100(io.rong.imkit.service.RongIMService) -> access$100
    void access$200(io.rong.imkit.service.RongIMService,io.rong.imkit.model.UIConversation) -> access$200
    void access$300(io.rong.imkit.service.RongIMService) -> access$300
    void access$400(io.rong.imkit.service.RongIMService,io.rong.imkit.model.UIConversation,int,int) -> access$400
    void access$500(io.rong.imkit.service.RongIMService,android.app.Notification) -> access$500
    void access$600(io.rong.imkit.service.RongIMService) -> access$600
io.rong.imkit.service.RongIMService$1 -> io.rong.imkit.service.RongIMService$1:
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.service.RongIMService$10 -> io.rong.imkit.service.RongIMService$10:
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void onCompletion(android.media.MediaPlayer) -> onCompletion
io.rong.imkit.service.RongIMService$2 -> io.rong.imkit.service.RongIMService$2:
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void run() -> run
io.rong.imkit.service.RongIMService$3 -> io.rong.imkit.service.RongIMService$3:
    io.rong.imkit.model.UIMessage val$message -> val$message
    int val$left -> val$left
    int val$count -> val$count
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void run() -> run
io.rong.imkit.service.RongIMService$4 -> io.rong.imkit.service.RongIMService$4:
    io.rong.imkit.service.RongIMService this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.service.RongIMService$5 -> io.rong.imkit.service.RongIMService$5:
    io.rong.imkit.model.UIConversation val$conversation -> val$conversation
    int val$successHandle -> val$successHandle
    int val$failureHanle -> val$failureHanle
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void run() -> run
io.rong.imkit.service.RongIMService$5$1 -> io.rong.imkit.service.RongIMService$5$1:
    io.rong.imkit.service.RongIMService$5 this$1 -> this$1
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError() -> onError
io.rong.imkit.service.RongIMService$6 -> io.rong.imkit.service.RongIMService$6:
    io.rong.imkit.model.UIConversation val$conversation -> val$conversation
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$Discussion) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode) -> onError
io.rong.imkit.service.RongIMService$7 -> io.rong.imkit.service.RongIMService$7:
    io.rong.imkit.logic.MessageLogic$GetUserInfoCallback val$getUserInfoCallback -> val$getUserInfoCallback
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode) -> onError
io.rong.imkit.service.RongIMService$8 -> io.rong.imkit.service.RongIMService$8:
    io.rong.imkit.logic.MessageLogic$GetUserInfoCallback val$getUserInfoCallback -> val$getUserInfoCallback
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode) -> onError
io.rong.imkit.service.RongIMService$9 -> io.rong.imkit.service.RongIMService$9:
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void onPrepared(android.media.MediaPlayer) -> onPrepared
io.rong.imkit.service.RongIMService$NewMessageReminderRunnable -> io.rong.imkit.service.RongIMService$NewMessageReminderRunnable:
    io.rong.imkit.service.RongIMService this$0 -> this$0
    void run() -> run
io.rong.imkit.utils.BitmapUtils -> io.rong.imkit.utils.BitmapUtils:
    java.lang.String getBase64FromBitmap(android.graphics.Bitmap) -> getBase64FromBitmap
    android.graphics.Bitmap getBitmapFromBase64(java.lang.String) -> getBitmapFromBase64
    android.graphics.Bitmap getFixSizeBitmap(int,android.graphics.Bitmap) -> getFixSizeBitmap
    android.graphics.Bitmap getResizedBitmap(android.content.Context,android.net.Uri,int,int) -> getResizedBitmap
    android.graphics.Bitmap getResizedBitmap(android.graphics.Bitmap,int,int) -> getResizedBitmap
io.rong.imkit.utils.FileUtil -> io.rong.imkit.utils.FileUtil:
    java.lang.String TAG -> TAG
    java.lang.String NOMEDIA -> NOMEDIA
    java.io.InputStream getFileInputStream(java.lang.String) -> getFileInputStream
    java.lang.String createDirectory(java.io.File) -> createDirectory
    byte[] getByteFromUri(android.net.Uri) -> getByteFromUri
    void writeByte(android.net.Uri,byte[]) -> writeByte
io.rong.imkit.utils.HTMLDecoder -> io.rong.imkit.utils.HTMLDecoder:
    java.util.HashMap charTable -> charTable
    java.lang.String decode(java.lang.String) -> decode
    boolean isLetterOrDigit(char) -> isLetterOrDigit
    boolean isHexDigit(char) -> isHexDigit
    boolean isLetter(char) -> isLetter
    boolean isHexLetter(char) -> isHexLetter
    boolean isDigit(char) -> isDigit
    java.lang.String compact(java.lang.String) -> compact
    boolean isWhitespace(char) -> isWhitespace
io.rong.imkit.utils.HighLightUtils -> io.rong.imkit.utils.HighLightUtils:
    java.util.HashMap codeHashMap -> codeHashMap
    io.rong.imkit.model.HightLightContent loadHighLight(java.lang.String) -> loadHighLight
    android.text.SpannableStringBuilder spannableSBInsert(android.text.SpannableStringBuilder,int,java.lang.String) -> spannableSBInsert
    android.text.SpannableStringBuilder spannableSBInsert(android.text.SpannableStringBuilder,int,java.lang.String,java.lang.String) -> spannableSBInsert
    android.text.SpannableStringBuilder loadHighLight(java.lang.String,int,int) -> loadHighLight
    int[] toCodePointArray(java.lang.String) -> toCodePointArray
    java.lang.String replaceEmoji(java.lang.String) -> replaceEmoji
    void initCodeHashMap() -> initCodeHashMap
io.rong.imkit.utils.LruCache -> io.rong.imkit.utils.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object getCached(java.lang.Object) -> getCached
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
io.rong.imkit.utils.MentionsSpan -> io.rong.imkit.utils.MentionsSpan:
io.rong.imkit.utils.MultiValueMap -> io.rong.imkit.utils.MultiValueMap:
    java.util.Map mMap -> mMap
    java.util.List get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.lang.Object,java.util.ArrayList) -> putAll
    java.util.List remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean removeValue(java.lang.Object) -> removeValue
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object,java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
io.rong.imkit.utils.ParcelUtils -> io.rong.imkit.utils.ParcelUtils:
    void writeStringToParcel(android.os.Parcel,java.lang.String) -> writeStringToParcel
    java.lang.String readStringFromParcel(android.os.Parcel) -> readStringFromParcel
    android.os.Parcelable readFromParcel(android.os.Parcel,java.lang.Class) -> readFromParcel
    void writeToParcel(android.os.Parcel,android.os.Parcelable) -> writeToParcel
    java.util.List readListFromParcel(android.os.Parcel,java.lang.Class) -> readListFromParcel
    void writeListToParcel(android.os.Parcel,java.util.List) -> writeListToParcel
    void writeListStingToParcel(android.os.Parcel,java.util.List) -> writeListStingToParcel
    java.util.ArrayList readListStingToParcel(android.os.Parcel) -> readListStingToParcel
io.rong.imkit.utils.PinyinFilterList -> io.rong.imkit.utils.PinyinFilterList:
    java.util.List mOriginalDatas -> mOriginalDatas
    java.lang.String mKeyIndex -> mKeyIndex
    java.lang.String INDEX_FORMATTER -> INDEX_FORMATTER
    java.lang.String REGEX_TEMPLATE -> REGEX_TEMPLATE
    java.lang.String REGEX_KEY_TEMPLATE -> REGEX_KEY_TEMPLATE
    void refreshIndex() -> refreshIndex
    java.util.List getOriginalDatas() -> getOriginalDatas
    void setOriginalDatas(java.util.List) -> setOriginalDatas
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
io.rong.imkit.utils.PriorityThreadFactory -> io.rong.imkit.utils.PriorityThreadFactory:
    java.lang.String TAG -> TAG
    int THREAD_PRORITY_DEFAULT_LESS -> THREAD_PRORITY_DEFAULT_LESS
    java.util.concurrent.atomic.AtomicInteger mNumber -> mNumber
    java.lang.String mName -> mName
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.rong.imkit.utils.PriorityThreadFactory$1 -> io.rong.imkit.utils.PriorityThreadFactory$1:
    io.rong.imkit.utils.PriorityThreadFactory this$0 -> this$0
    void run() -> run
io.rong.imkit.utils.RCDateUtils -> io.rong.imkit.utils.RCDateUtils:
    int OTHER -> OTHER
    int TODAY -> TODAY
    int YESTERDAY -> YESTERDAY
    int judgeDate(java.util.Date) -> judgeDate
    java.lang.String getConvastionListFromatDate(java.util.Date) -> getConvastionListFromatDate
    java.lang.String getConvastionFromatDate(java.util.Date) -> getConvastionFromatDate
    boolean isShowChatTime(long,long) -> isShowChatTime
    java.lang.String fromatDate(java.util.Date,java.lang.String) -> fromatDate
io.rong.imkit.utils.RongToast -> io.rong.imkit.utils.RongToast:
    void toast(android.content.Context,int) -> toast
    void toast(android.content.Context,java.lang.CharSequence) -> toast
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence) -> makeText
io.rong.imkit.utils.Util -> io.rong.imkit.utils.Util:
    java.lang.String TAG -> TAG
    char SPLIT -> SPLIT
    java.text.SimpleDateFormat timeFormat -> timeFormat
    android.location.Location getLat(android.content.Context,android.location.LocationListener) -> getLat
    android.text.SpannableStringBuilder highLight(io.rong.imkit.model.HightLightContent) -> highLight
    android.text.SpannableStringBuilder highLightLink(io.rong.imkit.model.HightLightContent) -> highLightLink
    java.lang.String getUrlWithAuth(java.lang.String,android.content.Context) -> getUrlWithAuth
    boolean isGIFImage(java.lang.String) -> isGIFImage
    boolean isGIFImage(java.io.InputStream) -> isGIFImage
    boolean isGIFImage(byte[]) -> isGIFImage
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
    void shake(long,android.content.Context) -> shake
    int calculateLength(java.lang.String) -> calculateLength
    java.lang.String getTwentyCharNickName(java.lang.String) -> getTwentyCharNickName
    boolean isChinese(char) -> isChinese
    boolean isChinese(java.lang.String) -> isChinese
    int getNetWorkType(android.content.Context) -> getNetWorkType
    byte[] desEncrypt(byte[],java.lang.String) -> desEncrypt
    byte[] desDecrypt(byte[],java.lang.String) -> desDecrypt
    java.lang.String listToString(java.util.List,char) -> listToString
    java.lang.String listToString(java.util.List) -> listToString
    int strLength(java.lang.String) -> strLength
    java.lang.String getCrrentDateTime() -> getCrrentDateTime
    java.lang.String getImageKeyFileName(java.lang.String) -> getImageKeyFileName
    void saveDataToDir(java.io.File,byte[]) -> saveDataToDir
    byte[] getByteFromUri(android.content.Context,android.net.Uri) -> getByteFromUri
    android.graphics.Bitmap getResizedBitmap(android.content.Context,android.net.Uri,int,int,int) -> getResizedBitmap
    byte[] getResizedImageData(android.content.Context,android.net.Uri,int,int,int) -> getResizedImageData
    android.graphics.BitmapFactory$Options decodeBitmapOptionsInfo(android.content.Context,android.net.Uri) -> decodeBitmapOptionsInfo
    android.graphics.Bitmap getRotateBitmap(float,android.graphics.Bitmap) -> getRotateBitmap
    android.graphics.Bitmap rotateBitMap(java.lang.String,android.graphics.Bitmap) -> rotateBitMap
    java.util.Date strTODate(java.lang.String) -> strTODate
    java.lang.String dateToStr(java.util.Date) -> dateToStr
    int dipTopx(android.content.Context,float) -> dipTopx
    int pxTodip(android.content.Context,float) -> pxTodip
    int dip2px(android.content.Context,float) -> dip2px
    int px2dip(android.content.Context,float) -> px2dip
    android.net.Uri obtainThumImageUri(android.content.Context,io.rong.imlib.RongIMClient$Message) -> obtainThumImageUri
    android.net.Uri obtainVoiceUri(android.content.Context,io.rong.imlib.RongIMClient$Message) -> obtainVoiceUri
    java.lang.String getCurProcessName(android.content.Context) -> getCurProcessName
    void initBroadcastPackage(java.lang.String) -> initBroadcastPackage
io.rong.imkit.version.Version -> io.rong.imkit.version.Version:
    java.lang.String VERSION -> VERSION
io.rong.imkit.view.ActionBar -> io.rong.imkit.view.ActionBar:
    java.util.List mAddView -> mAddView
    android.widget.ImageView mBackView -> mBackView
    android.widget.ImageView mLogoView -> mLogoView
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mNewMessageView -> mNewMessageView
    android.view.ViewGroup mTitleLayout -> mTitleLayout
    int mLastAddId -> mLastAddId
    java.util.List mAddChilds -> mAddChilds
    void initView(android.content.Context) -> initView
    void recycle() -> recycle
    void addView(android.view.View) -> addView
    android.widget.TextView getTitleTextView() -> getTitleTextView
    android.widget.TextView getNewMessageView() -> getNewMessageView
    android.widget.ImageView getLogoView() -> getLogoView
    android.widget.ImageView getBackView() -> getBackView
    void setOnBackClick(android.view.View$OnClickListener) -> setOnBackClick
io.rong.imkit.view.AlterDialog -> io.rong.imkit.view.AlterDialog:
io.rong.imkit.view.AnimationImageView -> io.rong.imkit.view.AnimationImageView:
io.rong.imkit.view.AnimationTextView -> io.rong.imkit.view.AnimationTextView:
    java.lang.String TAG -> TAG
    io.rong.imkit.view.gif.GifDrawable mDrawable -> mDrawable
    io.rong.imkit.view.AnimationTextView$AnimationHandler mHandler -> mHandler
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void startGifAnimation() -> startGifAnimation
    void setNextFrame() -> setNextFrame
    io.rong.imkit.view.gif.GifDrawable getGifDrawable() -> getGifDrawable
    void seGifDrawable(io.rong.imkit.view.gif.GifDrawable) -> seGifDrawable
    void access$100(io.rong.imkit.view.AnimationTextView) -> access$100
io.rong.imkit.view.AnimationTextView$1 -> io.rong.imkit.view.AnimationTextView$1:
io.rong.imkit.view.AnimationTextView$AnimationHandler -> io.rong.imkit.view.AnimationTextView$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.view.AnimationTextView$AnimationHolder -> io.rong.imkit.view.AnimationTextView$AnimationHolder:
    io.rong.imkit.view.AnimationTextView textView -> textView
    io.rong.imkit.view.gif.GifDrawable gifDrawable -> gifDrawable
    io.rong.imkit.view.AnimationTextView this$0 -> this$0
io.rong.imkit.view.AsyncImageView -> io.rong.imkit.view.AsyncImageView:
    java.util.concurrent.ExecutorService mMultiThreadExecutor -> mMultiThreadExecutor
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    com.sea_monster.core.resource.model.Resource mResource -> mResource
    java.util.concurrent.Future mCurrentRunnable -> mCurrentRunnable
    android.graphics.drawable.Drawable mDefaultDrawable -> mDefaultDrawable
    java.lang.Runnable mAttachedRunnable -> mAttachedRunnable
    int STATUS_DISPLAY -> STATUS_DISPLAY
    int STATUS_EMPTY -> STATUS_EMPTY
    boolean isAttached -> isAttached
    boolean isCircle -> isCircle
    int status -> status
    void update(java.util.Observable,java.lang.Object) -> update
    com.sea_monster.core.resource.model.Resource getResource() -> getResource
    void setDefaultDrawable(android.graphics.drawable.Drawable) -> setDefaultDrawable
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setResource(io.rong.imlib.RongIMClient$Message) -> setResource
    android.net.Uri obtainThumImageUri(android.content.Context,io.rong.imlib.RongIMClient$Message) -> obtainThumImageUri
    android.net.Uri obtainLocationUri(android.content.Context,io.rong.imlib.RongIMClient$Message) -> obtainLocationUri
    void clean() -> clean
    void setResource(com.sea_monster.core.resource.model.Resource) -> setResource
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void cancelRequest() -> cancelRequest
    void refreshResouce() -> refreshResouce
    int access$000(io.rong.imkit.view.AsyncImageView) -> access$000
    boolean access$200(io.rong.imkit.view.AsyncImageView) -> access$200
    int access$002(io.rong.imkit.view.AsyncImageView,int) -> access$002
io.rong.imkit.view.AsyncImageView$1 -> io.rong.imkit.view.AsyncImageView$1:
    io.rong.imkit.view.AsyncImageView this$0 -> this$0
    void run() -> run
io.rong.imkit.view.AsyncImageView$2 -> io.rong.imkit.view.AsyncImageView$2:
    io.rong.imkit.view.AsyncImageView this$0 -> this$0
    void run() -> run
io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable -> io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable:
    java.lang.ref.WeakReference mImageView -> mImageView
    com.sea_monster.core.resource.ResourceManager mManager -> mManager
    com.sea_monster.core.resource.model.Resource mResource -> mResource
    void runImpl() -> runImpl
    com.sea_monster.core.resource.model.Resource access$100(io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable) -> access$100
io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable$1 -> io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable$1:
    io.rong.imkit.view.AsyncImageView val$imageView -> val$imageView
    android.graphics.drawable.BitmapDrawable val$drawable -> val$drawable
    io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable this$0 -> this$0
    void run() -> run
io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable$2 -> io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable$2:
    io.rong.imkit.view.AsyncImageView val$imageView -> val$imageView
    android.graphics.drawable.BitmapDrawable val$drawable -> val$drawable
    io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable this$0 -> this$0
    void run() -> run
io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable$3 -> io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable$3:
    io.rong.imkit.view.AsyncImageView val$imageView -> val$imageView
    io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable this$0 -> this$0
    void run() -> run
io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable$4 -> io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable$4:
    io.rong.imkit.view.AsyncImageView val$imageView -> val$imageView
    io.rong.imkit.view.AsyncImageView$PhotoLoadRunnable this$0 -> this$0
    void run() -> run
io.rong.imkit.view.AsyncImageView$PhotoThreadFactory -> io.rong.imkit.view.AsyncImageView$PhotoThreadFactory:
    java.lang.String mThreadName -> mThreadName
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.rong.imkit.view.BaseFrameLayout -> io.rong.imkit.view.BaseFrameLayout:
    android.content.Context mContext -> mContext
    android.view.View getView(android.view.View,java.lang.String) -> getView
    android.view.View getView(android.view.View,int) -> getView
io.rong.imkit.view.CircleBitmapDrawable -> io.rong.imkit.view.CircleBitmapDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    io.rong.imkit.view.CircleBitmapDrawable$BitmapState mBitmapState -> mBitmapState
    android.graphics.Bitmap mBitmap -> mBitmap
    int mTargetDensity -> mTargetDensity
    android.graphics.Rect mDstRect -> mDstRect
    boolean mApplyGravity -> mApplyGravity
    boolean mRebuildShader -> mRebuildShader
    boolean mMutated -> mMutated
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Bitmap getBitmap() -> getBitmap
    void computeBitmapSize() -> computeBitmapSize
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    void setTargetDensity(int) -> setTargetDensity
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    void setAntiAlias(boolean) -> setAntiAlias
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setDither(boolean) -> setDither
    android.graphics.Shader$TileMode getTileModeX() -> getTileModeX
    android.graphics.Shader$TileMode getTileModeY() -> getTileModeY
    void setTileModeX(android.graphics.Shader$TileMode) -> setTileModeX
    void setTileModeY(android.graphics.Shader$TileMode) -> setTileModeY
    void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode) -> setTileModeXY
    int getChangingConfigurations() -> getChangingConfigurations
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.drawable.Drawable mutate() -> mutate
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void setAlpha(int) -> setAlpha
io.rong.imkit.view.CircleBitmapDrawable$1 -> io.rong.imkit.view.CircleBitmapDrawable$1:
io.rong.imkit.view.CircleBitmapDrawable$BitmapState -> io.rong.imkit.view.CircleBitmapDrawable$BitmapState:
    android.graphics.Bitmap mBitmap -> mBitmap
    int mChangingConfigurations -> mChangingConfigurations
    int mGravity -> mGravity
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Shader$TileMode mTileModeX -> mTileModeX
    android.graphics.Shader$TileMode mTileModeY -> mTileModeY
    int mTargetDensity -> mTargetDensity
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
io.rong.imkit.view.CirclePageIndicator -> io.rong.imkit.view.CirclePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    float mRadius -> mRadius
    android.graphics.Paint mPaintPageFill -> mPaintPageFill
    android.graphics.Paint mPaintStroke -> mPaintStroke
    android.graphics.Paint mPaintFill -> mPaintFill
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    int mSnapPage -> mSnapPage
    float mPageOffset -> mPageOffset
    int mScrollState -> mScrollState
    int mOrientation -> mOrientation
    boolean mCentered -> mCentered
    boolean mSnap -> mSnap
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    void setCentered(boolean) -> setCentered
    boolean isCentered() -> isCentered
    void setPageColor(int) -> setPageColor
    int getPageColor() -> getPageColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setSnap(boolean) -> setSnap
    boolean isSnap() -> isSnap
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureLong(int) -> measureLong
    int measureShort(int) -> measureShort
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
io.rong.imkit.view.CirclePageIndicator$1 -> io.rong.imkit.view.CirclePageIndicator$1:
io.rong.imkit.view.CirclePageIndicator$SavedState -> io.rong.imkit.view.CirclePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imkit.view.CirclePageIndicator$SavedState$1 -> io.rong.imkit.view.CirclePageIndicator$SavedState$1:
    io.rong.imkit.view.CirclePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imkit.view.CirclePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imkit.view.CompositeAdapter -> io.rong.imkit.view.CompositeAdapter:
    int ITEM_VIEW_BASE_TYPE -> ITEM_VIEW_BASE_TYPE
    java.lang.String fTag -> fTag
    io.rong.imkit.view.CompositeAdapter$Partition[] mPartitions -> mPartitions
    int mSize -> mSize
    int mCount -> mCount
    boolean mCacheValid -> mCacheValid
    boolean mNotificationsEnabled -> mNotificationsEnabled
    boolean mNotificationNeeded -> mNotificationNeeded
    android.content.Context getContext() -> getContext
    void addPartition(boolean,boolean,java.util.List,int) -> addPartition
    void addPartition(io.rong.imkit.view.CompositeAdapter$Partition,int) -> addPartition
    io.rong.imkit.view.CompositeAdapter$Partition[] getPartitions() -> getPartitions
    void removePartition(int) -> removePartition
    void clearPartitions() -> clearPartitions
    void setHasHeader(int,boolean) -> setHasHeader
    void setShowIfEmpty(int,boolean) -> setShowIfEmpty
    io.rong.imkit.view.CompositeAdapter$Partition getPartition(int) -> getPartition
    void invalidate() -> invalidate
    int getPartitionCount() -> getPartitionCount
    void ensureCacheValid() -> ensureCacheValid
    boolean hasHeader(int) -> hasHeader
    int getCount() -> getCount
    java.util.List getData(int) -> getData
    void changeCursor(int,java.util.List) -> changeCursor
    boolean isPartitionEmpty(int) -> isPartitionEmpty
    int getPartitionForPosition(int) -> getPartitionForPosition
    int getOffsetInPartition(int) -> getOffsetInPartition
    int getPositionForPartition(int) -> getPositionForPartition
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewTypeCount() -> getItemViewTypeCount
    int getItemViewType(int,int) -> getItemViewType
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getHeaderView(int,java.util.List,android.view.View,android.view.ViewGroup) -> getHeaderView
    android.view.View newHeaderView(android.content.Context,int,java.util.List,android.view.ViewGroup) -> newHeaderView
    void bindHeaderView(android.view.View,int,java.util.List) -> bindHeaderView
    android.view.View getView(int,java.util.List,int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View newView(android.content.Context,int,java.util.List,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,java.util.List,int) -> bindView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    boolean isEnabled(int,int) -> isEnabled
    void setNotificationsEnabled(boolean) -> setNotificationsEnabled
    void notifyDataSetChanged() -> notifyDataSetChanged
io.rong.imkit.view.CompositeAdapter$Partition -> io.rong.imkit.view.CompositeAdapter$Partition:
    boolean showIfEmpty -> showIfEmpty
    boolean hasHeader -> hasHeader
    java.util.List list -> list
    int idColumnIndex -> idColumnIndex
    int count -> count
    boolean getShowIfEmpty() -> getShowIfEmpty
    boolean getHasHeader() -> getHasHeader
    java.util.List getList() -> getList
io.rong.imkit.view.ConversationMessageBar -> io.rong.imkit.view.ConversationMessageBar:
    android.widget.LinearLayout mExpressionLayout -> mExpressionLayout
    android.widget.RelativeLayout mRichTextLayout -> mRichTextLayout
    io.rong.imkit.view.MessageBar messageBar -> messageBar
    io.rong.imkit.view.EmotionView mEmotionView -> mEmotionView
    io.rong.imkit.view.RichIconTextView mImageRichIconTextView -> mImageRichIconTextView
    io.rong.imkit.view.RichIconTextView mCameraRichIconTextView -> mCameraRichIconTextView
    io.rong.imkit.view.RichIconTextView mVOIPRichIconTextView -> mVOIPRichIconTextView
    io.rong.imkit.view.RichIconTextView mLocationIconTextView -> mLocationIconTextView
    int mCurrentState -> mCurrentState
    io.rong.imkit.view.ConversationMessageBar$ConversationMessageBarLinstener conversationMessageBarLinstener -> conversationMessageBarLinstener
    io.rong.imkit.view.ConversationMessageBar$OnRichIconTextViewClickLinstener mOnRichIconTextViewClickLinstener -> mOnRichIconTextViewClickLinstener
    void initView() -> initView
    void onChangeIVClick(int) -> onChangeIVClick
    void toggleInputMethod(boolean,android.widget.EditText) -> toggleInputMethod
    void onAddIVClick() -> onAddIVClick
    void onSendBtnClick() -> onSendBtnClick
    void onExpressionClick() -> onExpressionClick
    java.lang.String getMessageEditString() -> getMessageEditString
    void onEditTextClick() -> onEditTextClick
    void setHiddenRichAndExpressionView() -> setHiddenRichAndExpressionView
    boolean isShowRichOrExpressionView() -> isShowRichOrExpressionView
    void onEmotionClick(android.graphics.drawable.Drawable,java.lang.String,int) -> onEmotionClick
    void setConversationMessageBarLinstener(io.rong.imkit.view.ConversationMessageBar$ConversationMessageBarLinstener) -> setConversationMessageBarLinstener
    int getResourceColorID(java.lang.String) -> getResourceColorID
    int getResourceStringID(java.lang.String) -> getResourceStringID
    void onClick(android.view.View) -> onClick
    void setOnRichIconTextViewClickLinstener(io.rong.imkit.view.ConversationMessageBar$OnRichIconTextViewClickLinstener) -> setOnRichIconTextViewClickLinstener
    void setRichOrExpressionViewVisibility() -> setRichOrExpressionViewVisibility
    void setMessageEditText(java.lang.CharSequence) -> setMessageEditText
    io.rong.imkit.view.RichIconTextView getVOIPRichIconTextView() -> getVOIPRichIconTextView
    void setVOIPRichIconTextView(io.rong.imkit.view.RichIconTextView) -> setVOIPRichIconTextView
    android.widget.RelativeLayout access$000(io.rong.imkit.view.ConversationMessageBar) -> access$000
    io.rong.imkit.view.ConversationMessageBar$OnRichIconTextViewClickLinstener access$100(io.rong.imkit.view.ConversationMessageBar) -> access$100
    android.widget.LinearLayout access$200(io.rong.imkit.view.ConversationMessageBar) -> access$200
io.rong.imkit.view.ConversationMessageBar$1 -> io.rong.imkit.view.ConversationMessageBar$1:
    io.rong.imkit.view.ConversationMessageBar this$0 -> this$0
    void run() -> run
io.rong.imkit.view.ConversationMessageBar$2 -> io.rong.imkit.view.ConversationMessageBar$2:
    io.rong.imkit.view.ConversationMessageBar this$0 -> this$0
    void run() -> run
io.rong.imkit.view.ConversationMessageBar$ConversationMessageBarLinstener -> io.rong.imkit.view.ConversationMessageBar$ConversationMessageBarLinstener:
    void toggleInputMethod(boolean,android.view.View) -> toggleInputMethod
    void sendMessage(java.lang.String) -> sendMessage
io.rong.imkit.view.ConversationMessageBar$OnRichIconTextViewClickLinstener -> io.rong.imkit.view.ConversationMessageBar$OnRichIconTextViewClickLinstener:
    void onImageRichTextClick() -> onImageRichTextClick
    void onCameraRichTextClick() -> onCameraRichTextClick
    void onLocatonRichTextClick() -> onLocatonRichTextClick
    void onVoipRichTextClick() -> onVoipRichTextClick
    void onAddRichTextClick() -> onAddRichTextClick
    void isVisibility() -> isVisibility
io.rong.imkit.view.CoverFrameLayout -> io.rong.imkit.view.CoverFrameLayout:
    io.rong.imkit.view.CoverFrameLayout$CoverHandler mCoverHandler -> mCoverHandler
    android.view.View mTriggerView -> mTriggerView
    int mCoverViewResId -> mCoverViewResId
    int mTriggerViewResId -> mTriggerViewResId
    int mTriggerLimit -> mTriggerLimit
    float mTriggerCenterX -> mTriggerCenterX
    float mTriggerCenterY -> mTriggerCenterY
    io.rong.imkit.view.CoverFrameLayout$OnTriggeredTouchListener mTriggeredTouchListener -> mTriggeredTouchListener
    boolean mHasTrigger -> mHasTrigger
    void onAttachedToWindow() -> onAttachedToWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    io.rong.imkit.view.CoverFrameLayout$CoverHandler getCoverHandler() -> getCoverHandler
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setOnTriggeredTouchListener(io.rong.imkit.view.CoverFrameLayout$OnTriggeredTouchListener) -> setOnTriggeredTouchListener
io.rong.imkit.view.CoverFrameLayout$1 -> io.rong.imkit.view.CoverFrameLayout$1:
    io.rong.imkit.view.CoverFrameLayout this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.view.CoverFrameLayout$CoverHandler -> io.rong.imkit.view.CoverFrameLayout$CoverHandler:
    int STATUS_NORMAL -> STATUS_NORMAL
    int STATUS_OPEN -> STATUS_OPEN
    int STATUS_CLOSE -> STATUS_CLOSE
    int STATUS_MASK -> STATUS_MASK
    void setStatus(int) -> setStatus
    int getStatus() -> getStatus
io.rong.imkit.view.CoverFrameLayout$OnTriggeredTouchListener -> io.rong.imkit.view.CoverFrameLayout$OnTriggeredTouchListener:
    void OnTriggeredTouchEvent(android.view.MotionEvent,io.rong.imkit.view.CoverFrameLayout) -> OnTriggeredTouchEvent
io.rong.imkit.view.EditTextRongDialog -> io.rong.imkit.view.EditTextRongDialog:
    android.content.Context mContext -> mContext
    android.widget.EditText mEditText -> mEditText
    android.widget.Button mButton1 -> mButton1
    android.widget.Button mButton2 -> mButton2
    android.widget.TextView mTtileView -> mTtileView
    void initView(android.content.Context,int) -> initView
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.String getText() -> getText
    void setEditText(java.lang.String) -> setEditText
    void setButton1(java.lang.String,android.view.View$OnClickListener) -> setButton1
    void setButton2(java.lang.String,android.view.View$OnClickListener) -> setButton2
    void show() -> show
    void dismiss() -> dismiss
    android.view.View getViewById(java.lang.String) -> getViewById
    android.view.View getViewById(int) -> getViewById
    android.view.View getViewById(android.view.View,java.lang.String) -> getViewById
    android.view.View getViewById(android.view.View,int) -> getViewById
io.rong.imkit.view.EmotionAdapter -> io.rong.imkit.view.EmotionAdapter:
    android.graphics.drawable.Drawable[] mDrawableArray -> mDrawableArray
    int[] mDrawableResId -> mDrawableResId
    int[][] mDrawablePageId -> mDrawablePageId
    android.content.Context mContext -> mContext
    int ROW_COUNT -> ROW_COUNT
    int COLUMN_COUNT -> COLUMN_COUNT
    int P_COUNT -> P_COUNT
    int FLAG_DELETE -> FLAG_DELETE
    int FLAG_PNG -> FLAG_PNG
    int rate -> rate
    int item_length -> item_length
    int grid_height -> grid_height
    int mCount -> mCount
    io.rong.imkit.view.EmotionAdapter$ViewHolder mViewHolder -> mViewHolder
    io.rong.imkit.view.EmotionAdapter$OnEmotionItemClickListener mListener -> mListener
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    void initData() -> initData
    int getMaxHeight() -> getMaxHeight
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setOnEmotionItemClickListener(io.rong.imkit.view.EmotionAdapter$OnEmotionItemClickListener) -> setOnEmotionItemClickListener
    void onClick(android.view.View) -> onClick
    int pxTodip(android.content.Context,float) -> pxTodip
    int access$000(io.rong.imkit.view.EmotionAdapter) -> access$000
    int access$100(io.rong.imkit.view.EmotionAdapter) -> access$100
io.rong.imkit.view.EmotionAdapter$EmotionListAdapter -> io.rong.imkit.view.EmotionAdapter$EmotionListAdapter:
    int[] resIds -> resIds
    io.rong.imkit.view.EmotionAdapter this$0 -> this$0
    void setData(int[]) -> setData
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
io.rong.imkit.view.EmotionAdapter$OnEmotionItemClickListener -> io.rong.imkit.view.EmotionAdapter$OnEmotionItemClickListener:
    void onEmotionClick(android.graphics.drawable.Drawable,java.lang.String,int) -> onEmotionClick
io.rong.imkit.view.EmotionAdapter$ViewHolder -> io.rong.imkit.view.EmotionAdapter$ViewHolder:
    android.widget.GridView gridView -> gridView
    io.rong.imkit.view.EmotionAdapter$EmotionListAdapter adapter -> adapter
    io.rong.imkit.view.EmotionAdapter this$0 -> this$0
io.rong.imkit.view.EmotionView -> io.rong.imkit.view.EmotionView:
    android.support.v4.view.ViewPager mPager -> mPager
    io.rong.imkit.view.EmotionAdapter mAdapter -> mAdapter
    io.rong.imkit.view.EmotionAdapter$OnEmotionItemClickListener mListener -> mListener
    android.content.Context mContext -> mContext
    io.rong.imkit.view.CirclePageIndicator mIndicator -> mIndicator
    void initView() -> initView
    void initData() -> initData
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onEmotionClick(android.graphics.drawable.Drawable,java.lang.String,int) -> onEmotionClick
    void setOnEmotionItemClickListener(io.rong.imkit.view.EmotionAdapter$OnEmotionItemClickListener) -> setOnEmotionItemClickListener
io.rong.imkit.view.LoadingDialog -> io.rong.imkit.view.LoadingDialog:
    android.widget.TextView mTextView -> mTextView
    void show() -> show
    void dismiss() -> dismiss
    void setText(java.lang.String) -> setText
    void setText(int) -> setText
    void setTextColor(int) -> setTextColor
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
io.rong.imkit.view.MentionsEditText -> io.rong.imkit.view.MentionsEditText:
    java.lang.Object getNowSpan() -> getNowSpan
    java.lang.String getRealString() -> getRealString
    void clearStr() -> clearStr
    int insertText(java.lang.String) -> insertText
    void insertImage(java.lang.String,android.graphics.drawable.Drawable) -> insertImage
    void deleteChar() -> deleteChar
io.rong.imkit.view.MentionsEditText$MentionsText -> io.rong.imkit.view.MentionsEditText$MentionsText:
    java.lang.CharSequence text -> text
    io.rong.imkit.view.MentionsEditText this$0 -> this$0
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    int length() -> length
io.rong.imkit.view.MentionsIntentSpan -> io.rong.imkit.view.MentionsIntentSpan:
    java.lang.String userId -> userId
    int typeId -> typeId
    int getSpanTypeId() -> getSpanTypeId
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getUserId() -> getUserId
    boolean isEnter(java.lang.String) -> isEnter
    void onClick(android.view.View) -> onClick
io.rong.imkit.view.MessageBar -> io.rong.imkit.view.MessageBar:
    int MESSAGE_BAR_STATE_TEXT -> MESSAGE_BAR_STATE_TEXT
    int MESSAGE_BAR_STATE_VOICE -> MESSAGE_BAR_STATE_VOICE
    android.widget.ImageView mChangeImageView -> mChangeImageView
    io.rong.imkit.view.MentionsEditText mMessageEditText -> mMessageEditText
    android.widget.ImageView mAddImageView -> mAddImageView
    android.widget.Button mSendButton -> mSendButton
    android.widget.Button mVoiceButton -> mVoiceButton
    android.widget.ImageView mExpressionImageView -> mExpressionImageView
    android.widget.LinearLayout mEditLayout -> mEditLayout
    io.rong.imkit.view.MessageBar$MessageBarListener mMessageBarListener -> mMessageBarListener
    int mCurrentState -> mCurrentState
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void setMessageBarListener(io.rong.imkit.view.MessageBar$MessageBarListener) -> setMessageBarListener
    android.widget.ImageView getChangeImageView() -> getChangeImageView
    io.rong.imkit.view.MentionsEditText getMessageEditText() -> getMessageEditText
    android.widget.ImageView getAddImageView() -> getAddImageView
    android.widget.Button getSendButton() -> getSendButton
    android.widget.ImageView getExpressionImageView() -> getExpressionImageView
    android.widget.Button access$000(io.rong.imkit.view.MessageBar) -> access$000
    android.widget.ImageView access$100(io.rong.imkit.view.MessageBar) -> access$100
    io.rong.imkit.view.MessageBar$MessageBarListener access$200(io.rong.imkit.view.MessageBar) -> access$200
io.rong.imkit.view.MessageBar$1 -> io.rong.imkit.view.MessageBar$1:
    io.rong.imkit.view.MessageBar this$0 -> this$0
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
io.rong.imkit.view.MessageBar$2 -> io.rong.imkit.view.MessageBar$2:
    io.rong.imkit.view.MessageBar this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
io.rong.imkit.view.MessageBar$ChangeState -> io.rong.imkit.view.MessageBar$ChangeState:
    io.rong.imkit.view.MessageBar$ChangeState TEXT -> TEXT
    io.rong.imkit.view.MessageBar$ChangeState VOICE -> VOICE
    io.rong.imkit.view.MessageBar$ChangeState[] $VALUES -> $VALUES
    io.rong.imkit.view.MessageBar$ChangeState[] values() -> values
    io.rong.imkit.view.MessageBar$ChangeState valueOf(java.lang.String) -> valueOf
io.rong.imkit.view.MessageBar$MessageBarListener -> io.rong.imkit.view.MessageBar$MessageBarListener:
    void onChangeIVClick(int) -> onChangeIVClick
    void onAddIVClick() -> onAddIVClick
    void onSendBtnClick() -> onSendBtnClick
    void onExpressionClick() -> onExpressionClick
    void onEditTextClick() -> onEditTextClick
io.rong.imkit.view.PageIndicator -> io.rong.imkit.view.PageIndicator:
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void notifyDataSetChanged() -> notifyDataSetChanged
io.rong.imkit.view.PinnedHandler -> io.rong.imkit.view.PinnedHandler:
    void handlerPinnedView(android.view.View) -> handlerPinnedView
io.rong.imkit.view.PinnedHeaderAdapter -> io.rong.imkit.view.PinnedHeaderAdapter:
    int PINNED_HEADER_GONE -> PINNED_HEADER_GONE
    int PINNED_HEADER_VISIBLE -> PINNED_HEADER_VISIBLE
    int PINNED_HEADER_PUSHED_UP -> PINNED_HEADER_PUSHED_UP
    android.widget.SectionIndexer mIndexer -> mIndexer
    void updateCollection(java.util.Collection) -> updateCollection
    void changeIndexer(java.util.Collection) -> changeIndexer
    android.widget.SectionIndexer updateIndexer(io.rong.imkit.view.CompositeAdapter$Partition[]) -> updateIndexer
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    int getPinnedHeaderState(int) -> getPinnedHeaderState
    int getSectionForPosition(int) -> getSectionForPosition
    int getPositionForSection(int) -> getPositionForSection
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.widget.SectionIndexer getSectionIndexer() -> getSectionIndexer
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void configurePinnedHeader(android.view.View,int,int) -> configurePinnedHeader
io.rong.imkit.view.PinnedHeaderListView -> io.rong.imkit.view.PinnedHeaderListView:
    int MAX_ALPHA -> MAX_ALPHA
    io.rong.imkit.view.PinnedHeaderAdapter mAdapter -> mAdapter
    android.view.View mHeaderView -> mHeaderView
    boolean mHeaderViewVisible -> mHeaderViewVisible
    int mHeaderViewWidth -> mHeaderViewWidth
    int mHeaderViewHeight -> mHeaderViewHeight
    android.view.View mListHeaderView -> mListHeaderView
    void init(android.content.Context,android.util.AttributeSet) -> init
    void setPinnedHeaderView(android.view.View) -> setPinnedHeaderView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void onMeasure(int,int) -> onMeasure
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> addHeaderView
    void addHeaderView(android.view.View) -> addHeaderView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void configureHeaderView(int) -> configureHeaderView
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setAdapter(android.widget.Adapter) -> setAdapter
io.rong.imkit.view.PullDownRefreshListView -> io.rong.imkit.view.PullDownRefreshListView:
    java.lang.String TAG -> TAG
    int DONE -> DONE
    int RELEASE_TO_REFRESH -> RELEASE_TO_REFRESH
    int PULL_TO_REFRESH -> PULL_TO_REFRESH
    int REFRESHING -> REFRESHING
    android.view.LayoutInflater inflater -> inflater
    android.widget.LinearLayout headView -> headView
    android.view.animation.RotateAnimation animation -> animation
    android.view.animation.RotateAnimation reverseAnimation -> reverseAnimation
    boolean isRecored -> isRecored
    boolean isBack -> isBack
    int headContentHeight -> headContentHeight
    int startY -> startY
    int mFirstVisiableItem -> mFirstVisiableItem
    int mVisableCount -> mVisableCount
    int state -> state
    io.rong.imkit.view.PullDownRefreshListView$OnRefreshListener refreshListener -> refreshListener
    void init(android.content.Context) -> init
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeHeaderViewByState() -> changeHeaderViewByState
    void setonRefreshListener(io.rong.imkit.view.PullDownRefreshListView$OnRefreshListener) -> setonRefreshListener
    void onRefreshComplete() -> onRefreshComplete
    void onRefresh() -> onRefresh
    void measureView(android.view.View) -> measureView
    void setSelection(int) -> setSelection
io.rong.imkit.view.PullDownRefreshListView$OnRefreshListener -> io.rong.imkit.view.PullDownRefreshListView$OnRefreshListener:
    void onRefresh() -> onRefresh
io.rong.imkit.view.RichIconTextView -> io.rong.imkit.view.RichIconTextView:
    android.widget.ImageView iconView -> iconView
    android.widget.TextView nameTextView -> nameTextView
    void initView() -> initView
    android.widget.ImageView getIconView() -> getIconView
    void setIconView(android.widget.ImageView) -> setIconView
    android.widget.TextView getNameView() -> getNameView
    void setNameView(android.widget.TextView) -> setNameView
io.rong.imkit.view.RongDialog -> io.rong.imkit.view.RongDialog:
    android.content.Context mContext -> mContext
    android.widget.TextView mTtileView -> mTtileView
    android.widget.TextView mContextView -> mContextView
    android.widget.Button mButton1 -> mButton1
    android.widget.Button mButton2 -> mButton2
    android.widget.Button mButton3 -> mButton3
    android.view.ViewGroup mTopViewGroup -> mTopViewGroup
    android.view.ViewGroup mBottomViewGroup -> mBottomViewGroup
    android.view.ViewGroup mContentViewGroup -> mContentViewGroup
    void initView(float) -> initView
    void setView(android.view.View) -> setView
    void setContentText(java.lang.CharSequence) -> setContentText
    void setContentText(int) -> setContentText
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(java.lang.CharSequence,boolean) -> setTitle
    void setButton1(int,android.view.View$OnClickListener) -> setButton1
    void setButton2(int,android.view.View$OnClickListener) -> setButton2
    void setButton3(int,android.view.View$OnClickListener) -> setButton3
    void setButton1(java.lang.String,android.view.View$OnClickListener) -> setButton1
    void setButton2(java.lang.String,android.view.View$OnClickListener) -> setButton2
    void setButton3(java.lang.String,android.view.View$OnClickListener) -> setButton3
    void setBottomViewVisibility(boolean) -> setBottomViewVisibility
    android.view.View getViewById(java.lang.String) -> getViewById
    android.view.View getViewById(int) -> getViewById
    android.view.View getViewById(android.view.View,java.lang.String) -> getViewById
    android.view.View getViewById(android.view.View,int) -> getViewById
    android.view.ViewGroup getTopViewGroup() -> getTopViewGroup
    void setTopViewGroup(android.view.ViewGroup) -> setTopViewGroup
    android.view.ViewGroup getBottomViewGroup() -> getBottomViewGroup
    void setBottomViewGroup(android.view.ViewGroup) -> setBottomViewGroup
    android.view.ViewGroup getContentViewGroup() -> getContentViewGroup
    void setContentViewGroup(android.view.ViewGroup) -> setContentViewGroup
io.rong.imkit.view.RongGridView -> io.rong.imkit.view.RongGridView:
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onMeasure(int,int) -> onMeasure
io.rong.imkit.view.SearchHeaderView -> io.rong.imkit.view.SearchHeaderView:
    android.widget.EditText mEditView -> mEditView
    void initView() -> initView
    android.widget.EditText getEditText() -> getEditText
io.rong.imkit.view.SelectDialog -> io.rong.imkit.view.SelectDialog:
    android.widget.TextView textView1 -> textView1
    android.widget.TextView textView2 -> textView2
    android.widget.RelativeLayout mDiaogLayoutOne -> mDiaogLayoutOne
    android.widget.RelativeLayout mDiaogLayoutTwo -> mDiaogLayoutTwo
    io.rong.imkit.view.SelectDialog$OnDialogItemViewListener mDialogItemViewListener -> mDialogItemViewListener
    void initView() -> initView
    void setFristLineContent(java.lang.String) -> setFristLineContent
    void setSecondLineContent(java.lang.String) -> setSecondLineContent
    void onClick(android.view.View) -> onClick
    void setOnDialogItemViewListener(io.rong.imkit.view.SelectDialog$OnDialogItemViewListener) -> setOnDialogItemViewListener
    void setDiaogLayoutFirstGone() -> setDiaogLayoutFirstGone
io.rong.imkit.view.SelectDialog$OnDialogItemViewListener -> io.rong.imkit.view.SelectDialog$OnDialogItemViewListener:
    void OnDialogItemViewClick(android.view.View,int) -> OnDialogItemViewClick
io.rong.imkit.view.SwitchGroup -> io.rong.imkit.view.SwitchGroup:
    int mPinnedViewResId -> mPinnedViewResId
    int mOrientation -> mOrientation
    android.view.View mPinnedView -> mPinnedView
    io.rong.imkit.view.SwitchGroup$ItemHander mItemHander -> mItemHander
    android.graphics.Rect mSwitchRect -> mSwitchRect
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    void onAttachedToWindow() -> onAttachedToWindow
    io.rong.imkit.view.SwitchGroup$ItemHander getItemHander() -> getItemHander
    void setItemHander(io.rong.imkit.view.SwitchGroup$ItemHander) -> setItemHander
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    io.rong.imkit.view.SwitchGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
io.rong.imkit.view.SwitchGroup$ItemHander -> io.rong.imkit.view.SwitchGroup$ItemHander:
io.rong.imkit.view.SwitchGroup$LayoutParams -> io.rong.imkit.view.SwitchGroup$LayoutParams:
io.rong.imkit.view.SwitchItemView -> io.rong.imkit.view.SwitchItemView:
    void handlerPinnedView(android.view.View) -> handlerPinnedView
io.rong.imkit.view.VoiceCoverView -> io.rong.imkit.view.VoiceCoverView:
    int STATUS_REC -> STATUS_REC
    int STATUS_CANCEL -> STATUS_CANCEL
    int MSG_SEC -> MSG_SEC
    int MSG_CANCEL -> MSG_CANCEL
    int MSG_SAMPLING -> MSG_SAMPLING
    int MSG_READY -> MSG_READY
    android.widget.ImageView mIcon -> mIcon
    android.widget.TextView mText -> mText
    android.widget.TextView mMessage -> mMessage
    android.os.Handler mHandler -> mHandler
    int mStatus -> mStatus
    boolean mTrigger -> mTrigger
    io.rong.imkit.common.IVoiceHandler mVoiceHandler -> mVoiceHandler
    long mVoiceLength -> mVoiceLength
    android.net.Uri mLastVoiceUri -> mLastVoiceUri
    void setVoiceHandler(io.rong.imkit.common.IVoiceHandler) -> setVoiceHandler
    void setStatus(int) -> setStatus
    int getStatus() -> getStatus
    android.net.Uri getLastVoiceUri() -> getLastVoiceUri
    long getLastVoiceLength() -> getLastVoiceLength
    void removeLastVoiceUri() -> removeLastVoiceUri
    boolean handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.view.gif.EmotionParser -> io.rong.imkit.view.gif.EmotionParser:
    int[] defaultFrameResIds -> defaultFrameResIds
    java.lang.String[] defaultCodeArray -> defaultCodeArray
    android.content.Context mContext -> mContext
    io.rong.imkit.view.gif.EmotionParser mInstance -> mInstance
    int size -> size
    io.rong.imkit.view.gif.EmotionParser getInstance(android.content.Context) -> getInstance
    android.graphics.drawable.Drawable getSmileDrawable(java.lang.String) -> getSmileDrawable
    int getSmileResId(java.lang.String) -> getSmileResId
    java.lang.String getSmileCode(int) -> getSmileCode
    int[] getSmileResIds() -> getSmileResIds
io.rong.imkit.view.gif.GifAction -> io.rong.imkit.view.gif.GifAction:
    void parseOk(boolean,int) -> parseOk
io.rong.imkit.view.gif.GifDecoder -> io.rong.imkit.view.gif.GifDecoder:
    int STATUS_PARSING -> STATUS_PARSING
    int STATUS_FORMAT_ERROR -> STATUS_FORMAT_ERROR
    int STATUS_OPEN_ERROR -> STATUS_OPEN_ERROR
    int STATUS_FINISH -> STATUS_FINISH
    java.io.InputStream in -> in
    int status -> status
    int width -> width
    int height -> height
    boolean gctFlag -> gctFlag
    int gctSize -> gctSize
    int loopCount -> loopCount
    int[] gct -> gct
    int[] lct -> lct
    int[] act -> act
    int bgIndex -> bgIndex
    int bgColor -> bgColor
    int lastBgColor -> lastBgColor
    boolean lctFlag -> lctFlag
    boolean interlace -> interlace
    int lctSize -> lctSize
    int ix -> ix
    int iy -> iy
    int iw -> iw
    int ih -> ih
    int lrx -> lrx
    int lry -> lry
    int lrw -> lrw
    int lrh -> lrh
    android.graphics.Bitmap image -> image
    android.graphics.Bitmap lastImage -> lastImage
    io.rong.imkit.view.gif.GifFrame currentFrame -> currentFrame
    boolean isShow -> isShow
    byte[] block -> block
    int blockSize -> blockSize
    int dispose -> dispose
    int lastDispose -> lastDispose
    boolean transparency -> transparency
    int delay -> delay
    int transIndex -> transIndex
    int MaxStackSize -> MaxStackSize
    short[] prefix -> prefix
    byte[] suffix -> suffix
    byte[] pixelStack -> pixelStack
    byte[] pixels -> pixels
    io.rong.imkit.view.gif.GifFrame gifFrame -> gifFrame
    int frameCount -> frameCount
    byte[] gifData -> gifData
    io.rong.imkit.view.gif.GifAction action -> action
    boolean isGetFirst -> isGetFirst
    boolean isGetFirst() -> isGetFirst
    io.rong.imkit.view.gif.GifFrame getFirstFrame() -> getFirstFrame
    void run() -> run
    void free() -> free
    int getStatus() -> getStatus
    boolean parseOk() -> parseOk
    int getDelay(int) -> getDelay
    int[] getDelays() -> getDelays
    int getFrameCount() -> getFrameCount
    android.graphics.Bitmap getImage() -> getImage
    int getLoopCount() -> getLoopCount
    void setPixels() -> setPixels
    android.graphics.Bitmap getFrameImage(int) -> getFrameImage
    io.rong.imkit.view.gif.GifFrame getCurrentFrame() -> getCurrentFrame
    io.rong.imkit.view.gif.GifFrame getFrame(int) -> getFrame
    void reset() -> reset
    io.rong.imkit.view.gif.GifFrame next() -> next
    int readByte() -> readByte
    int readStream() -> readStream
    void decodeImageData() -> decodeImageData
    boolean err() -> err
    void init() -> init
    int read() -> read
    int readBlock() -> readBlock
    int[] readColorTable(int) -> readColorTable
    void readContents() -> readContents
    void readGraphicControlExt() -> readGraphicControlExt
    void readHeader() -> readHeader
    void readImage() -> readImage
    void readLSD() -> readLSD
    void readNetscapeExt() -> readNetscapeExt
    int readShort() -> readShort
    void resetFrame() -> resetFrame
    void skip() -> skip
io.rong.imkit.view.gif.GifDrawable -> io.rong.imkit.view.gif.GifDrawable:
    java.lang.String TAG -> TAG
    int mCurrentIndex -> mCurrentIndex
    io.rong.imkit.view.gif.GifDecoder mDecoder -> mDecoder
    java.util.ArrayList cachedAnimationViews -> cachedAnimationViews
    java.lang.String mFilePath -> mFilePath
    java.lang.String mEmotionCode -> mEmotionCode
    boolean onStarted -> onStarted
    android.content.Context mContext -> mContext
    android.os.Handler handler -> handler
    void addAnimationView(io.rong.imkit.view.AnimationTextView) -> addAnimationView
    java.util.ArrayList getAnimationView() -> getAnimationView
    void removeAnimationView(android.view.View) -> removeAnimationView
    void ChangeToNextFrame() -> ChangeToNextFrame
    void freeDecoder(io.rong.imkit.view.gif.GifDecoder) -> freeDecoder
    void parseOk(boolean,int) -> parseOk
    boolean isOnStarted() -> isOnStarted
    void setOnStarted(boolean) -> setOnStarted
    io.rong.imkit.view.gif.GifDecoder access$000(io.rong.imkit.view.gif.GifDrawable) -> access$000
    android.content.Context access$100(io.rong.imkit.view.gif.GifDrawable) -> access$100
io.rong.imkit.view.gif.GifDrawable$1 -> io.rong.imkit.view.gif.GifDrawable$1:
    io.rong.imkit.view.gif.GifDrawable this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.view.gif.GifFrame -> io.rong.imkit.view.gif.GifFrame:
    android.graphics.Bitmap image -> image
    int delay -> delay
    io.rong.imkit.view.gif.GifFrame nextFrame -> nextFrame
io.rong.imkit.view.gif.GifView -> io.rong.imkit.view.gif.GifView:
    io.rong.imkit.view.gif.GifDecoder mGifDecoder -> mGifDecoder
    android.graphics.Bitmap mCurrentImage -> mCurrentImage
    int mResId -> mResId
    int mShowWidth -> mShowWidth
    android.graphics.Rect mRect -> mRect
    java.lang.String fNameSpace -> fNameSpace
    io.rong.imkit.view.gif.GifView$GifImageType mAnimationType -> mAnimationType
    int mStatus -> mStatus
    android.graphics.Paint mPaint -> mPaint
    io.rong.imkit.view.gif.GifView$AnimationHandler mGifHandler -> mGifHandler
    android.os.Handler redrawHandler -> redrawHandler
    void setGifDecoderImage(byte[]) -> setGifDecoderImage
    void setGifDecoderImage(java.io.InputStream) -> setGifDecoderImage
    void freeDecoder(io.rong.imkit.view.gif.GifDecoder) -> freeDecoder
    void setGifImage(byte[]) -> setGifImage
    void setGifImage(java.io.InputStream) -> setGifImage
    void setGifImage(int) -> setGifImage
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void showCover() -> showCover
    void setGifImageType(io.rong.imkit.view.gif.GifView$GifImageType) -> setGifImageType
    void setShowDimension(int,int) -> setShowDimension
    void parseOk(boolean,int) -> parseOk
    void reDraw() -> reDraw
    void stopAnimation() -> stopAnimation
    void destory() -> destory
    void startAnimation() -> startAnimation
    void onDetachedFromWindow() -> onDetachedFromWindow
    int access$100(io.rong.imkit.view.gif.GifView) -> access$100
    io.rong.imkit.view.gif.GifDecoder access$200(io.rong.imkit.view.gif.GifView) -> access$200
    android.graphics.Bitmap access$302(io.rong.imkit.view.gif.GifView,android.graphics.Bitmap) -> access$302
    int access$102(io.rong.imkit.view.gif.GifView,int) -> access$102
io.rong.imkit.view.gif.GifView$1 -> io.rong.imkit.view.gif.GifView$1:
    io.rong.imkit.view.gif.GifView this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.view.gif.GifView$2 -> io.rong.imkit.view.gif.GifView$2:
    int[] $SwitchMap$io$rong$imkit$view$gif$GifView$GifImageType -> $SwitchMap$io$rong$imkit$view$gif$GifView$GifImageType
io.rong.imkit.view.gif.GifView$AnimationHandler -> io.rong.imkit.view.gif.GifView$AnimationHandler:
    int fAnimation -> fAnimation
    int fStop -> fStop
    int fDestory -> fDestory
    java.lang.ref.WeakReference mGifViewReference -> mGifViewReference
    void handleMessage(android.os.Message) -> handleMessage
    void executeAnimation() -> executeAnimation
    void startAnimation(io.rong.imkit.view.gif.GifView) -> startAnimation
    void stopAnimation(io.rong.imkit.view.gif.GifView) -> stopAnimation
    void destory(io.rong.imkit.view.gif.GifView) -> destory
io.rong.imkit.view.gif.GifView$GifImageType -> io.rong.imkit.view.gif.GifView$GifImageType:
    io.rong.imkit.view.gif.GifView$GifImageType WAIT_FINISH -> WAIT_FINISH
    io.rong.imkit.view.gif.GifView$GifImageType SYNC_DECODER -> SYNC_DECODER
    io.rong.imkit.view.gif.GifView$GifImageType COVER -> COVER
    int nativeInt -> nativeInt
    io.rong.imkit.view.gif.GifView$GifImageType[] $VALUES -> $VALUES
    io.rong.imkit.view.gif.GifView$GifImageType[] values() -> values
    io.rong.imkit.view.gif.GifView$GifImageType valueOf(java.lang.String) -> valueOf
io.rong.imkit.view.gif.IInstanceStateChange -> io.rong.imkit.view.gif.IInstanceStateChange:
    void onRestartAct(android.os.Bundle) -> onRestartAct
io.rong.imlib.AnnotationNotFoundException -> io.rong.imlib.AnnotationNotFoundException:
    long serialVersionUID -> serialVersionUID
io.rong.imlib.BuildConfig -> io.rong.imlib.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
io.rong.imlib.FileUtil -> io.rong.imlib.FileUtil:
    java.io.InputStream getFileInputStream(java.lang.String) -> getFileInputStream
    byte[] getByteFromUri(android.net.Uri) -> getByteFromUri
    void writeByte(android.net.Uri,byte[]) -> writeByte
io.rong.imlib.MessageTag -> io.rong.imlib.MessageTag:
    int NONE -> NONE
    int ISPERSISTED -> ISPERSISTED
    int ISCOUNTED -> ISCOUNTED
    java.lang.String value() -> value
    int flag() -> flag
    java.lang.Class messageHandler() -> messageHandler
io.rong.imlib.MessageTag$MessageHandler -> io.rong.imlib.MessageTag$MessageHandler:
    io.rong.imlib.RongIMClient client -> client
    io.rong.imlib.RongIMClient$Message message -> message
    io.rong.imlib.RongIMClient$SendMessageCallback callback -> callback
    android.content.Context context -> context
    void decodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> decodeMessage
    boolean encodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> encodeMessage
    android.content.Context getContext() -> getContext
    void handlersendMessage(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent,io.rong.imlib.RongIMClient$SendMessageCallback) -> handlersendMessage
    void flush() -> flush
    void afterDecodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> beforeEncodeMessage
    boolean sendMessage(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
io.rong.imlib.MessageTag$MessageHandler$NullMessageHandler -> io.rong.imlib.MessageTag$MessageHandler$NullMessageHandler:
    void afterDecodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> beforeEncodeMessage
    boolean sendMessage(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
io.rong.imlib.NativeObject -> io.rong.imlib.NativeObject:
    void setJNIEnv(io.rong.imlib.NativeObject) -> setJNIEnv
    int InitClient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> InitClient
    void RegisterMessageType(java.lang.String,int) -> RegisterMessageType
    void Connect(java.lang.String,io.rong.imlib.NativeObject$ConnectAckCallback) -> Connect
    void Disconnect(int) -> Disconnect
    void SendFileWithUrl(java.lang.String,int,int,byte[],int,io.rong.imlib.NativeObject$ProgressCallback) -> SendFileWithUrl
    void DownFileWithUrl(java.lang.String,int,int,java.lang.String,io.rong.imlib.NativeObject$ProgressCallback) -> DownFileWithUrl
    byte[] GetPagedMessage(java.lang.String,int,int,int) -> GetPagedMessage
    byte[] GetHistoryMessages(java.lang.String,int,java.lang.String,int,int) -> GetHistoryMessages
    boolean DeleteMessages(int[]) -> DeleteMessages
    boolean ClearMessages(int,java.lang.String) -> ClearMessages
    boolean ClearUnread(int,java.lang.String) -> ClearUnread
    boolean SetMessageExtra(int,java.lang.String) -> SetMessageExtra
    boolean RemoveConversation(int,java.lang.String) -> RemoveConversation
    boolean SetTextMessageDraft(int,java.lang.String,java.lang.String) -> SetTextMessageDraft
    boolean SetMessageContent(int,byte[]) -> SetMessageContent
    java.lang.String GetTextMessageDraft(int,java.lang.String) -> GetTextMessageDraft
    byte[] GetRecentConversation() -> GetRecentConversation
    boolean SetIsTop(int,java.lang.String,boolean) -> SetIsTop
    int GetTotalUnreadCount() -> GetTotalUnreadCount
    long GetDeltaTime() -> GetDeltaTime
    void CreateInviteDiscussion(java.lang.String,java.lang.String[],io.rong.imlib.NativeObject$CreateDiscussionCallback) -> CreateInviteDiscussion
    void InviteMemberToDiscussion(java.lang.String,java.lang.String[],io.rong.imlib.NativeObject$PublishAckListener) -> InviteMemberToDiscussion
    void RemoveMemberFromDiscussion(java.lang.String,java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> RemoveMemberFromDiscussion
    void QuitDiscussion(java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> QuitDiscussion
    int SaveMessage(java.lang.String,int,java.lang.String,java.lang.String,byte[],byte[]) -> SaveMessage
    void SendMessage(java.lang.String,int,int,java.lang.String,byte[],byte[],int,io.rong.imlib.NativeObject$PublishAckListener) -> SendMessage
    void GetUserInfo(java.lang.String,io.rong.imlib.NativeObject$UserInfoOutputListener) -> GetUserInfo
    void SetMessageListener(io.rong.imlib.NativeObject$ReceiveMessageListener) -> SetMessageListener
    boolean SetReadStatus(int,int) -> SetReadStatus
    boolean SetSendStatus(int,int) -> SetSendStatus
    void SetWakeupQueryListener(io.rong.imlib.NativeObject$WakeupQueryListener) -> SetWakeupQueryListener
    void EnvironmentChangeNotify(int,byte[],int,io.rong.imlib.NativeObject$EnvironmentChangeNotifyListener) -> EnvironmentChangeNotify
    void GetDiscussionInfo(java.lang.String,boolean,io.rong.imlib.NativeObject$DiscussionInfoListener) -> GetDiscussionInfo
    void SetExceptionListener(io.rong.imlib.NativeObject$ExceptionListener) -> SetExceptionListener
    void RenameDiscussion(java.lang.String,java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> RenameDiscussion
    byte[] GetConversation(java.lang.String,int) -> GetConversation
    void SetBlockPush(java.lang.String,int,boolean,io.rong.imlib.NativeObject$BizAckListener) -> SetBlockPush
    void GetBlockPush(java.lang.String,int,boolean,io.rong.imlib.NativeObject$BizAckListener) -> GetBlockPush
    void SetInviteStatus(java.lang.String,int,io.rong.imlib.NativeObject$PublishAckListener) -> SetInviteStatus
    int GetUnreadCount(java.lang.String,int) -> GetUnreadCount
    byte[] GetConversationList(int[]) -> GetConversationList
    void SyncGroups(java.lang.String[],java.lang.String[],io.rong.imlib.NativeObject$PublishAckListener) -> SyncGroups
    void JoinGroup(java.lang.String,java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> JoinGroup
    void QuitGroup(java.lang.String,java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> QuitGroup
    int GetCateUnreadCount(int[]) -> GetCateUnreadCount
    void JoinChatRoom(java.lang.String,int,int,io.rong.imlib.NativeObject$PublishAckListener) -> JoinChatRoom
    void QuitChatRoom(java.lang.String,int,io.rong.imlib.NativeObject$PublishAckListener) -> QuitChatRoom
    boolean ClearConversations(int[]) -> ClearConversations
    void AddToBlacklist(java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> AddToBlacklist
    void RemoveFromBlacklist(java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> RemoveFromBlacklist
    void GetBlacklistStatus(java.lang.String,io.rong.imlib.NativeObject$BizAckListener) -> GetBlacklistStatus
    void GetBlacklist(io.rong.imlib.NativeObject$SetBlacklistListener) -> GetBlacklist
io.rong.imlib.NativeObject$BizAckListener -> io.rong.imlib.NativeObject$BizAckListener:
    void operationComplete(int,int) -> operationComplete
io.rong.imlib.NativeObject$ConnectAckCallback -> io.rong.imlib.NativeObject$ConnectAckCallback:
    void operationComplete(int,java.lang.String) -> operationComplete
io.rong.imlib.NativeObject$CreateDiscussionCallback -> io.rong.imlib.NativeObject$CreateDiscussionCallback:
    void OnSuccess(java.lang.String) -> OnSuccess
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$DiscussionInfo -> io.rong.imlib.NativeObject$DiscussionInfo:
    java.lang.String discussionId -> discussionId
    java.lang.String discussionName -> discussionName
    java.lang.String adminId -> adminId
    java.lang.String userIds -> userIds
    int inviteStatus -> inviteStatus
    java.lang.String getDiscussionId() -> getDiscussionId
    void setDiscussionId(java.lang.String) -> setDiscussionId
    java.lang.String getDiscussionName() -> getDiscussionName
    void setDiscussionName(byte[]) -> setDiscussionName
    java.lang.String getAdminId() -> getAdminId
    void setAdminId(java.lang.String) -> setAdminId
    java.lang.String getUserIds() -> getUserIds
    void setUserIds(java.lang.String) -> setUserIds
    int getInviteStatus() -> getInviteStatus
    void setInviteStatus(int) -> setInviteStatus
io.rong.imlib.NativeObject$DiscussionInfoListener -> io.rong.imlib.NativeObject$DiscussionInfoListener:
    void onReceived(io.rong.imlib.NativeObject$DiscussionInfo) -> onReceived
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$EnvironmentChangeNotifyListener -> io.rong.imlib.NativeObject$EnvironmentChangeNotifyListener:
    void Complete(int,java.lang.String) -> Complete
io.rong.imlib.NativeObject$ExceptionListener -> io.rong.imlib.NativeObject$ExceptionListener:
    void onError(int,java.lang.String) -> onError
io.rong.imlib.NativeObject$Message -> io.rong.imlib.NativeObject$Message:
    int conversationType -> conversationType
    java.lang.String targetId -> targetId
    int messageId -> messageId
    boolean messageDirection -> messageDirection
    java.lang.String senderUserId -> senderUserId
    int readStatus -> readStatus
    int sentStatus -> sentStatus
    long receivedTime -> receivedTime
    long sentTime -> sentTime
    java.lang.String objectName -> objectName
    byte[] content -> content
    java.lang.String extra -> extra
    java.lang.String pushContent -> pushContent
    java.lang.String getPushContent() -> getPushContent
    void setPushContent(java.lang.String) -> setPushContent
    int getConversationType() -> getConversationType
    void setConversationType(int) -> setConversationType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
    int getMessageId() -> getMessageId
    void setMessageId(int) -> setMessageId
    boolean getMessageDirection() -> getMessageDirection
    void setMessageDirection(boolean) -> setMessageDirection
    int getReadStatus() -> getReadStatus
    void setReadStatus(int) -> setReadStatus
    int getSentStatus() -> getSentStatus
    void setSentStatus(int) -> setSentStatus
    long getReceivedTime() -> getReceivedTime
    void setReceivedTime(long) -> setReceivedTime
    long getSentTime() -> getSentTime
    void setSentTime(long) -> setSentTime
    java.lang.String getObjectName() -> getObjectName
    void setObjectName(java.lang.String) -> setObjectName
    byte[] getContent() -> getContent
    void setContent(byte[]) -> setContent
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    java.lang.String getSenderUserId() -> getSenderUserId
    void setSenderUserId(java.lang.String) -> setSenderUserId
io.rong.imlib.NativeObject$ProgressCallback -> io.rong.imlib.NativeObject$ProgressCallback:
    void OnProgress(int) -> OnProgress
    void OnComplete(java.lang.String) -> OnComplete
    void OnError(int,java.lang.String) -> OnError
io.rong.imlib.NativeObject$PublishAckListener -> io.rong.imlib.NativeObject$PublishAckListener:
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeObject$ReceiveMessageListener -> io.rong.imlib.NativeObject$ReceiveMessageListener:
    void onReceived(io.rong.imlib.NativeObject$Message,int) -> onReceived
    io.rong.imlib.NativeObject$Message getNewMessage() -> getNewMessage
io.rong.imlib.NativeObject$SetBlacklistListener -> io.rong.imlib.NativeObject$SetBlacklistListener:
    void OnSuccess(java.lang.String) -> OnSuccess
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$UserInfoOutputListener -> io.rong.imlib.NativeObject$UserInfoOutputListener:
    void onReceiveUserInfo(java.lang.String,byte[],java.lang.String) -> onReceiveUserInfo
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$WakeupQueryListener -> io.rong.imlib.NativeObject$WakeupQueryListener:
    void QueryWakeup(int) -> QueryWakeup
    void ReleaseWakup() -> ReleaseWakup
io.rong.imlib.NetworkUtil -> io.rong.imlib.NetworkUtil:
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
io.rong.imlib.NotInitializedException -> io.rong.imlib.NotInitializedException:
    long serialVersionUID -> serialVersionUID
io.rong.imlib.PushClient -> io.rong.imlib.PushClient:
    io.rong.imlib.PushProtocalStack$MessageInputStream in -> in
    java.net.Socket socket -> socket
    io.rong.imlib.PushProtocalStack$MessageOutputStream out -> out
    java.io.OutputStream os -> os
    io.rong.imlib.PushClient$PushReader reader -> reader
    java.util.concurrent.Semaphore connectionAckLock -> connectionAckLock
    io.rong.imlib.PushClient$ClientListener listener -> listener
    io.rong.imlib.PushProtocalStack$ConnectMessage connectMsg -> connectMsg
    io.rong.imlib.PushClient$ConnectCallback connectCallback -> connectCallback
    io.rong.imlib.PushClient$PingSuccessListener mPingSuccessListener -> mPingSuccessListener
    void connect(java.lang.String,int,io.rong.imlib.PushClient$ConnectCallback) -> connect
    void ping() -> ping
    void disconnect() -> disconnect
    void disconnectByNormal() -> disconnectByNormal
    void handleMessage(io.rong.imlib.PushProtocalStack$Message) -> handleMessage
    io.rong.imlib.PushProtocalStack$MessageInputStream access$100(io.rong.imlib.PushClient) -> access$100
    void access$200(io.rong.imlib.PushClient,io.rong.imlib.PushProtocalStack$Message) -> access$200
io.rong.imlib.PushClient$1 -> io.rong.imlib.PushClient$1:
    int[] $SwitchMap$io$rong$imlib$PushProtocalStack$Message$Type -> $SwitchMap$io$rong$imlib$PushProtocalStack$Message$Type
io.rong.imlib.PushClient$ClientListener -> io.rong.imlib.PushClient$ClientListener:
    void messageArrived(io.rong.imlib.PushProtocalStack$PublishMessage) -> messageArrived
io.rong.imlib.PushClient$ConnectCallback -> io.rong.imlib.PushClient$ConnectCallback:
    void connected(io.rong.imlib.PushProtocalStack$ConnAckMessage) -> connected
io.rong.imlib.PushClient$PingSuccessListener -> io.rong.imlib.PushClient$PingSuccessListener:
    void onSuccess() -> onSuccess
io.rong.imlib.PushClient$PushReader -> io.rong.imlib.PushClient$PushReader:
    io.rong.imlib.PushClient this$0 -> this$0
    void run() -> run
io.rong.imlib.PushContact -> io.rong.imlib.PushContact:
    java.lang.String id -> id
    java.lang.String name -> name
    java.util.List messages -> messages
    int mSize -> mSize
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> readFromParcel
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.util.List getMessages() -> getMessages
    void setMessages(java.util.List) -> setMessages
    int access$002(io.rong.imlib.PushContact,int) -> access$002
io.rong.imlib.PushContact$1 -> io.rong.imlib.PushContact$1:
    io.rong.imlib.PushContact createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.PushContact[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.PushMessage -> io.rong.imlib.PushMessage:
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String channelType -> channelType
    java.lang.String channelId -> channelId
    java.lang.String channelName -> channelName
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getChannelType() -> getChannelType
    void setChannelType(java.lang.String) -> setChannelType
    java.lang.String getChannelId() -> getChannelId
    void setChannelId(java.lang.String) -> setChannelId
    java.lang.String getChannelName() -> getChannelName
    void setChannelName(java.lang.String) -> setChannelName
io.rong.imlib.PushMessage$1 -> io.rong.imlib.PushMessage$1:
    io.rong.imlib.PushMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.PushMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.PushProtocalStack -> io.rong.imlib.PushProtocalStack:
io.rong.imlib.PushProtocalStack$1 -> io.rong.imlib.PushProtocalStack$1:
    int[] $SwitchMap$io$rong$imlib$PushProtocalStack$ConnAckMessage$ConnectionStatus -> $SwitchMap$io$rong$imlib$PushProtocalStack$ConnAckMessage$ConnectionStatus
    int[] $SwitchMap$io$rong$imlib$PushProtocalStack$DisconnectMessage$DisconnectionStatus -> $SwitchMap$io$rong$imlib$PushProtocalStack$DisconnectMessage$DisconnectionStatus
    int[] $SwitchMap$io$rong$imlib$PushProtocalStack$Message$Type -> $SwitchMap$io$rong$imlib$PushProtocalStack$Message$Type
io.rong.imlib.PushProtocalStack$ConnAckMessage -> io.rong.imlib.PushProtocalStack$ConnAckMessage:
    int MESSAGE_LENGTH -> MESSAGE_LENGTH
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus status -> status
    java.lang.String userId -> userId
    int messageLength() -> messageLength
    void readMessage(java.io.InputStream,int) -> readMessage
    void writeMessage(java.io.OutputStream) -> writeMessage
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus getStatus() -> getStatus
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getUserId() -> getUserId
    void setDup(boolean) -> setDup
    void setRetained(boolean) -> setRetained
    void setQos(io.rong.imlib.PushProtocalStack$QoS) -> setQos
io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus -> io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus:
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus ACCEPTED -> ACCEPTED
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus UNACCEPTABLE_PROTOCOL_VERSION -> UNACCEPTABLE_PROTOCOL_VERSION
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus IDENTIFIER_REJECTED -> IDENTIFIER_REJECTED
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus SERVER_UNAVAILABLE -> SERVER_UNAVAILABLE
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus BAD_USERNAME_OR_PASSWORD -> BAD_USERNAME_OR_PASSWORD
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus NOT_AUTHORIZED -> NOT_AUTHORIZED
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus REDIRECT -> REDIRECT
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus[] $VALUES -> $VALUES
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus[] values() -> values
    io.rong.imlib.PushProtocalStack$ConnAckMessage$ConnectionStatus valueOf(java.lang.String) -> valueOf
io.rong.imlib.PushProtocalStack$ConnectMessage -> io.rong.imlib.PushProtocalStack$ConnectMessage:
    int CONNECT_HEADER_SIZE -> CONNECT_HEADER_SIZE
    java.lang.String protocolId -> protocolId
    byte protocolVersion -> protocolVersion
    java.lang.String clientId -> clientId
    int keepAlive -> keepAlive
    java.lang.String username -> username
    java.lang.String password -> password
    boolean cleanSession -> cleanSession
    java.lang.String willTopic -> willTopic
    java.lang.String will -> will
    io.rong.imlib.PushProtocalStack$QoS willQoS -> willQoS
    boolean retainWill -> retainWill
    boolean hasUsername -> hasUsername
    boolean hasPassword -> hasPassword
    boolean hasWill -> hasWill
    int messageLength() -> messageLength
    void readMessage(java.io.InputStream,int) -> readMessage
    void writeMessage(java.io.OutputStream) -> writeMessage
    void setCredentials(java.lang.String) -> setCredentials
    void setCredentials(java.lang.String,java.lang.String) -> setCredentials
    void setWill(java.lang.String,java.lang.String) -> setWill
    void setWill(java.lang.String,java.lang.String,io.rong.imlib.PushProtocalStack$QoS,boolean) -> setWill
    void setDup(boolean) -> setDup
    void setRetained(boolean) -> setRetained
    void setQos(io.rong.imlib.PushProtocalStack$QoS) -> setQos
    java.lang.String getProtocolId() -> getProtocolId
    byte getProtocolVersion() -> getProtocolVersion
    java.lang.String getClientId() -> getClientId
    int getKeepAlive() -> getKeepAlive
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    boolean isCleanSession() -> isCleanSession
    java.lang.String getWillTopic() -> getWillTopic
    java.lang.String getWill() -> getWill
    io.rong.imlib.PushProtocalStack$QoS getWillQoS() -> getWillQoS
    boolean isWillRetained() -> isWillRetained
    boolean hasUsername() -> hasUsername
    boolean hasPassword() -> hasPassword
    boolean hasWill() -> hasWill
io.rong.imlib.PushProtocalStack$DisconnectMessage -> io.rong.imlib.PushProtocalStack$DisconnectMessage:
    int MESSAGE_LENGTH -> MESSAGE_LENGTH
    io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus status -> status
    int messageLength() -> messageLength
    void readMessage(java.io.InputStream,int) -> readMessage
    void writeMessage(java.io.OutputStream) -> writeMessage
    io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus getStatus() -> getStatus
    void setDup(boolean) -> setDup
    void setQos(io.rong.imlib.PushProtocalStack$QoS) -> setQos
    void setRetained(boolean) -> setRetained
io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus -> io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus:
    io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus RECONNECT -> RECONNECT
    io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus OTHER_DEVICE_LOGIN -> OTHER_DEVICE_LOGIN
    io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus CLOSURE -> CLOSURE
    io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus[] $VALUES -> $VALUES
    io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus[] values() -> values
    io.rong.imlib.PushProtocalStack$DisconnectMessage$DisconnectionStatus valueOf(java.lang.String) -> valueOf
io.rong.imlib.PushProtocalStack$FormatUtil -> io.rong.imlib.PushProtocalStack$FormatUtil:
    java.lang.String dumpByteArray(byte[]) -> dumpByteArray
    byte[] toWMtpString(java.lang.String) -> toWMtpString
    java.lang.String toString(byte[]) -> toString
io.rong.imlib.PushProtocalStack$Message -> io.rong.imlib.PushProtocalStack$Message:
    io.rong.imlib.PushProtocalStack$Message$Header header -> header
    byte headerCode -> headerCode
    void read(java.io.InputStream) -> read
    void write(java.io.OutputStream) -> write
    int readMsgLength(java.io.InputStream) -> readMsgLength
    void writeMsgLength(java.io.OutputStream) -> writeMsgLength
    void writeMsgCode(java.io.OutputStream) -> writeMsgCode
    byte[] toBytes() -> toBytes
    int messageLength() -> messageLength
    void writeMessage(java.io.OutputStream) -> writeMessage
    void readMessage(java.io.InputStream,int) -> readMessage
    void setRetained(boolean) -> setRetained
    boolean isRetained() -> isRetained
    void setQos(io.rong.imlib.PushProtocalStack$QoS) -> setQos
    io.rong.imlib.PushProtocalStack$QoS getQos() -> getQos
    void setDup(boolean) -> setDup
    boolean isDup() -> isDup
    io.rong.imlib.PushProtocalStack$Message$Type getType() -> getType
io.rong.imlib.PushProtocalStack$Message$Header -> io.rong.imlib.PushProtocalStack$Message$Header:
    io.rong.imlib.PushProtocalStack$Message$Type type -> type
    boolean retain -> retain
    io.rong.imlib.PushProtocalStack$QoS qos -> qos
    boolean dup -> dup
    io.rong.imlib.PushProtocalStack$Message$Type getType() -> getType
    byte encode() -> encode
    java.lang.String toString() -> toString
    byte access$200(io.rong.imlib.PushProtocalStack$Message$Header) -> access$200
    boolean access$302(io.rong.imlib.PushProtocalStack$Message$Header,boolean) -> access$302
    boolean access$300(io.rong.imlib.PushProtocalStack$Message$Header) -> access$300
    io.rong.imlib.PushProtocalStack$QoS access$402(io.rong.imlib.PushProtocalStack$Message$Header,io.rong.imlib.PushProtocalStack$QoS) -> access$402
    io.rong.imlib.PushProtocalStack$QoS access$400(io.rong.imlib.PushProtocalStack$Message$Header) -> access$400
    boolean access$502(io.rong.imlib.PushProtocalStack$Message$Header,boolean) -> access$502
    boolean access$500(io.rong.imlib.PushProtocalStack$Message$Header) -> access$500
    io.rong.imlib.PushProtocalStack$Message$Type access$600(io.rong.imlib.PushProtocalStack$Message$Header) -> access$600
io.rong.imlib.PushProtocalStack$Message$Type -> io.rong.imlib.PushProtocalStack$Message$Type:
    io.rong.imlib.PushProtocalStack$Message$Type CONNECT -> CONNECT
    io.rong.imlib.PushProtocalStack$Message$Type CONNACK -> CONNACK
    io.rong.imlib.PushProtocalStack$Message$Type PUBLISH -> PUBLISH
    io.rong.imlib.PushProtocalStack$Message$Type PUBACK -> PUBACK
    io.rong.imlib.PushProtocalStack$Message$Type QUERY -> QUERY
    io.rong.imlib.PushProtocalStack$Message$Type QUERYACK -> QUERYACK
    io.rong.imlib.PushProtocalStack$Message$Type QUERYCON -> QUERYCON
    io.rong.imlib.PushProtocalStack$Message$Type SUBSCRIBE -> SUBSCRIBE
    io.rong.imlib.PushProtocalStack$Message$Type SUBACK -> SUBACK
    io.rong.imlib.PushProtocalStack$Message$Type UNSUBSCRIBE -> UNSUBSCRIBE
    io.rong.imlib.PushProtocalStack$Message$Type UNSUBACK -> UNSUBACK
    io.rong.imlib.PushProtocalStack$Message$Type PINGREQ -> PINGREQ
    io.rong.imlib.PushProtocalStack$Message$Type PINGRESP -> PINGRESP
    io.rong.imlib.PushProtocalStack$Message$Type DISCONNECT -> DISCONNECT
    int val -> val
    io.rong.imlib.PushProtocalStack$Message$Type[] $VALUES -> $VALUES
    io.rong.imlib.PushProtocalStack$Message$Type[] values() -> values
    io.rong.imlib.PushProtocalStack$Message$Type valueOf(java.lang.String) -> valueOf
    io.rong.imlib.PushProtocalStack$Message$Type valueOf(int) -> valueOf
    int access$000(io.rong.imlib.PushProtocalStack$Message$Type) -> access$000
io.rong.imlib.PushProtocalStack$MessageInputStream -> io.rong.imlib.PushProtocalStack$MessageInputStream:
    java.io.InputStream in -> in
    io.rong.imlib.PushProtocalStack$Message readMessage() -> readMessage
    void close() -> close
io.rong.imlib.PushProtocalStack$MessageOutputStream -> io.rong.imlib.PushProtocalStack$MessageOutputStream:
    java.io.OutputStream out -> out
    void writeMessage(io.rong.imlib.PushProtocalStack$Message) -> writeMessage
io.rong.imlib.PushProtocalStack$PingReqMessage -> io.rong.imlib.PushProtocalStack$PingReqMessage:
    void setDup(boolean) -> setDup
    void setQos(io.rong.imlib.PushProtocalStack$QoS) -> setQos
    void setRetained(boolean) -> setRetained
io.rong.imlib.PushProtocalStack$PingRespMessage -> io.rong.imlib.PushProtocalStack$PingRespMessage:
io.rong.imlib.PushProtocalStack$PublishMessage -> io.rong.imlib.PushProtocalStack$PublishMessage:
    java.lang.String topic -> topic
    byte[] data -> data
    java.lang.String targetId -> targetId
    int date -> date
    int messageLength() -> messageLength
    void writeMessage(java.io.OutputStream) -> writeMessage
    void readMessage(java.io.InputStream,int) -> readMessage
    java.lang.String getTopic() -> getTopic
    byte[] getData() -> getData
    int getServerTime() -> getServerTime
    java.lang.String getTargetId() -> getTargetId
    java.lang.String getDataAsString() -> getDataAsString
io.rong.imlib.PushProtocalStack$QoS -> io.rong.imlib.PushProtocalStack$QoS:
    io.rong.imlib.PushProtocalStack$QoS AT_MOST_ONCE -> AT_MOST_ONCE
    io.rong.imlib.PushProtocalStack$QoS AT_LEAST_ONCE -> AT_LEAST_ONCE
    io.rong.imlib.PushProtocalStack$QoS EXACTLY_ONCE -> EXACTLY_ONCE
    io.rong.imlib.PushProtocalStack$QoS DEFAULT -> DEFAULT
    int val -> val
    io.rong.imlib.PushProtocalStack$QoS[] $VALUES -> $VALUES
    io.rong.imlib.PushProtocalStack$QoS[] values() -> values
    io.rong.imlib.PushProtocalStack$QoS valueOf(java.lang.String) -> valueOf
    io.rong.imlib.PushProtocalStack$QoS valueOf(int) -> valueOf
io.rong.imlib.PushProtocalStack$RetryableMessage -> io.rong.imlib.PushProtocalStack$RetryableMessage:
    int messageId -> messageId
    int messageLength() -> messageLength
    void writeMessage(java.io.OutputStream) -> writeMessage
    void readMessage(java.io.InputStream,int) -> readMessage
    void setMessageId(int) -> setMessageId
    int getMessageId() -> getMessageId
io.rong.imlib.PushReceiver -> io.rong.imlib.PushReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.imlib.PushService -> io.rong.imlib.PushService:
    io.rong.imlib.PushClient client -> client
    java.util.Map appIdNotificationIdMapping -> appIdNotificationIdMapping
    java.util.HashMap conversation -> conversation
    android.os.HandlerThread mThread -> mThread
    android.os.Handler mWorkHandler -> mWorkHandler
    java.lang.String NOTIFICATION_SENDED_BROADCAST_ACTION -> NOTIFICATION_SENDED_BROADCAST_ACTION
    io.rong.imlib.PushService$NotificationSendedBroadCastReciver nsb -> nsb
    io.rong.imlib.PushService$NetWorkStatusReceiver mNetWorkStatusReceiver -> mNetWorkStatusReceiver
    android.os.Handler mDelayHandler -> mDelayHandler
    boolean isConnected -> isConnected
    int CONNECTSERVERTYPE_CONNECT -> CONNECTSERVERTYPE_CONNECT
    int CONNECTSERVERTYPE_PING -> CONNECTSERVERTYPE_PING
    void onCreate() -> onCreate
    void init() -> init
    void startTask() -> startTask
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void startVoip(android.os.Bundle) -> startVoip
    void createConversation(android.os.Bundle) -> createConversation
    void showNotification(java.lang.String,java.lang.String,java.lang.String) -> showNotification
    android.graphics.Bitmap getAppIcon(java.lang.String) -> getAppIcon
    java.lang.String getCurrentFormatTime() -> getCurrentFormatTime
    int getApplicationIcon(java.lang.String) -> getApplicationIcon
    void createAppidNotificationIdMapping(java.lang.String) -> createAppidNotificationIdMapping
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    java.lang.String getApplicationName(java.lang.String) -> getApplicationName
    void endTask() -> endTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void access$200(io.rong.imlib.PushService,android.os.Bundle) -> access$200
    void access$300(io.rong.imlib.PushService,android.os.Bundle) -> access$300
    void access$400(io.rong.imlib.PushService,java.lang.String,java.lang.String,java.lang.String) -> access$400
    java.util.HashMap access$500(io.rong.imlib.PushService) -> access$500
    android.os.Handler access$600(io.rong.imlib.PushService) -> access$600
    void access$700(io.rong.imlib.PushService) -> access$700
io.rong.imlib.PushService$1 -> io.rong.imlib.PushService$1:
    io.rong.imlib.PushService this$0 -> this$0
    void run() -> run
io.rong.imlib.PushService$MyClientListener -> io.rong.imlib.PushService$MyClientListener:
    io.rong.imlib.PushService this$0 -> this$0
    void messageArrived(io.rong.imlib.PushProtocalStack$PublishMessage) -> messageArrived
io.rong.imlib.PushService$MyConnectCallback -> io.rong.imlib.PushService$MyConnectCallback:
    io.rong.imlib.PushService this$0 -> this$0
    void connected(io.rong.imlib.PushProtocalStack$ConnAckMessage) -> connected
io.rong.imlib.PushService$NetWorkStatusReceiver -> io.rong.imlib.PushService$NetWorkStatusReceiver:
    io.rong.imlib.PushService this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.imlib.PushService$NotificationSendedBroadCastReciver -> io.rong.imlib.PushService$NotificationSendedBroadCastReciver:
    io.rong.imlib.PushService this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.imlib.PushUtil -> io.rong.imlib.PushUtil:
    java.lang.String PUSHPROCCESS_PACKAGE -> PUSHPROCCESS_PACKAGE
    java.lang.String FILENAME -> FILENAME
    int BROADCASTTYPE_HEARTBEAT -> BROADCASTTYPE_HEARTBEAT
    java.lang.String URL_NAVIPUSH -> URL_NAVIPUSH
    void startNextHeartbeat(android.content.Context) -> startNextHeartbeat
    void startPushSerive(android.content.Context,int) -> startPushSerive
    void initAppIdActionMapping(android.content.Context,java.lang.String,int) -> initAppIdActionMapping
    int getRandomTime() -> getRandomTime
    java.lang.String readFile(java.io.File) -> readFile
    boolean isAppIdExsit(android.content.Context,java.lang.String) -> isAppIdExsit
    java.lang.String getPackageNameByAppid(android.content.Context,java.lang.String) -> getPackageNameByAppid
    void removeMappingByPacageName(java.lang.String) -> removeMappingByPacageName
    boolean serviceIsAlive(android.content.Context,java.lang.String) -> serviceIsAlive
    boolean processesIsAlive(android.content.Context,java.lang.String) -> processesIsAlive
    boolean isOneServiceExist(android.content.Context) -> isOneServiceExist
    java.lang.String getMac(android.content.Context) -> getMac
    java.lang.String getAppName(android.content.Context) -> getAppName
    android.os.Bundle parseJson(java.lang.String) -> parseJson
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
    java.lang.String httpPostConnect(java.lang.String) -> httpPostConnect
    java.util.Map parseServerIdAndPort(java.lang.String) -> parseServerIdAndPort
io.rong.imlib.PushUtil$Res -> io.rong.imlib.PushUtil$Res:
    java.lang.String LOG_TAG -> LOG_TAG
    io.rong.imlib.PushUtil$Res instance -> instance
    java.lang.String packageName -> packageName
    java.lang.Class R_drawable -> R_drawable
    java.lang.Class R_layout -> R_layout
    java.lang.Class R_styleable -> R_styleable
    io.rong.imlib.PushUtil$Res getInstance(android.content.Context) -> getInstance
    int drawable(java.lang.String) -> drawable
    int layout(java.lang.String) -> layout
    int[] styleables(java.lang.String) -> styleables
    int getRes(java.lang.Class,java.lang.String) -> getRes
    int[] getResArr(java.lang.Class,java.lang.String) -> getResArr
io.rong.imlib.RongIMClient -> io.rong.imlib.RongIMClient:
    io.rong.imlib.RongIMClient client -> client
    java.lang.String appKey -> appKey
    java.lang.String resourcePath -> resourcePath
    android.content.Context sContext -> sContext
    io.rong.imlib.RongWakeLock mWakeLock -> mWakeLock
    io.rong.imlib.NativeObject nativeObj -> nativeObj
    java.lang.String token -> token
    java.lang.String currentUserId -> currentUserId
    io.rong.imlib.RongIMClient$UserInfo mUserInfo -> mUserInfo
    java.util.HashMap constructorMap -> constructorMap
    java.util.HashMap messageHandlerMap -> messageHandlerMap
    io.rong.imlib.RongIMClient$ConnectionStatusListener mListener -> mListener
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus currentConnStatus -> currentConnStatus
    io.rong.imlib.RongReceiver mReceiver -> mReceiver
    java.lang.ref.WeakReference mOnReceiveMessageListenerRef -> mOnReceiveMessageListenerRef
    int saveMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$MessageContent,java.lang.String) -> saveMessage
    void sendMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.MessageTag$MessageHandler,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    io.rong.imlib.RongIMClient$MessageContent getMessageContent(java.lang.String,byte[],io.rong.imlib.RongIMClient$Message) -> getMessageContent
    boolean filterNatiMessageve(io.rong.imlib.RongIMClient$Message) -> filterNatiMessageve
    java.lang.String createPath(java.io.File,java.lang.String) -> createPath
    void regConnectChangeReceiver(android.content.Context) -> regConnectChangeReceiver
    io.rong.imlib.NativeObject getLastNativeInstance() -> getLastNativeInstance
    io.rong.imlib.RongIMClient getLastClientInstance() -> getLastClientInstance
    io.rong.imlib.RongIMClient$ConnectionStatusListener getConnectionStatusListener() -> getConnectionStatusListener
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus getCurrentConnStatus() -> getCurrentConnStatus
    void setOptions(io.rong.imlib.RongIMClient$Options) -> setOptions
    boolean init(android.content.Context,java.lang.String,int) -> init
    void registerMessageType(java.lang.Class) -> registerMessageType
    io.rong.imlib.RongIMClient connect(java.lang.String,io.rong.imlib.RongIMClient$ConnectCallback) -> connect
    void reconnect(io.rong.imlib.RongIMClient$ConnectCallback) -> reconnect
    void disconnect() -> disconnect
    void disconnect(boolean) -> disconnect
    java.util.List getConversationList() -> getConversationList
    java.util.List getGroupConversationList() -> getGroupConversationList
    java.util.List getConversationList(int[]) -> getConversationList
    io.rong.imlib.RongIMClient$Conversation getConversation(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> getConversation
    boolean removeConversation(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> removeConversation
    boolean setConversationToTop(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,boolean) -> setConversationToTop
    int getTotalUnreadCount() -> getTotalUnreadCount
    int getUnreadCount(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> getUnreadCount
    int getUnreadCount(io.rong.imlib.RongIMClient$ConversationType[]) -> getUnreadCount
    java.util.List getLatestMessages(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,int) -> getLatestMessages
    java.util.List getHistoryMessages(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,int,int) -> getHistoryMessages
    java.util.List getHistoryMessages(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.lang.String,int,int) -> getHistoryMessages
    boolean deleteMessages(int[]) -> deleteMessages
    boolean clearMessages(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> clearMessages
    boolean clearMessagesUnreadStatus(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> clearMessagesUnreadStatus
    boolean setMessageExtra(int,java.lang.String) -> setMessageExtra
    boolean setMessageReceivedStatus(int,io.rong.imlib.RongIMClient$ReceivedStatus) -> setMessageReceivedStatus
    boolean setMessageSentStatus(int,io.rong.imlib.RongIMClient$SentStatus) -> setMessageSentStatus
    java.lang.String getTextMessageDraft(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> getTextMessageDraft
    boolean saveTextMessageDraft(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.lang.String) -> saveTextMessageDraft
    boolean clearTextMessageDraft(io.rong.imlib.RongIMClient$ConversationType,java.lang.String) -> clearTextMessageDraft
    void getDiscussion(java.lang.String,io.rong.imlib.RongIMClient$GetDiscussionCallback) -> getDiscussion
    void setDiscussionName(java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> setDiscussionName
    void createDiscussion(java.lang.String,java.util.List,io.rong.imlib.RongIMClient$CreateDiscussionCallback) -> createDiscussion
    void addMemberToDiscussion(java.lang.String,java.util.List,io.rong.imlib.RongIMClient$OperationCallback) -> addMemberToDiscussion
    void removeMemberFromDiscussion(java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> removeMemberFromDiscussion
    void quitDiscussion(java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> quitDiscussion
    io.rong.imlib.RongIMClient$Message insertMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$MessageContent) -> insertMessage
    io.rong.imlib.RongIMClient$Message sendMessage(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$MessageContent,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    io.rong.imlib.RongIMClient$Message sendNotification(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$NotificationMessage,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendNotification
    io.rong.imlib.RongIMClient$Message sendStatus(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$StatusMessage,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendStatus
    void uploadMedia(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,java.io.InputStream,io.rong.imlib.RongIMClient$UploadMediaCallback) -> uploadMedia
    void downloadMedia(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$MediaType,java.lang.String,io.rong.imlib.RongIMClient$DownloadMediaCallback) -> downloadMedia
    void clearCachedResources(io.rong.imlib.RongIMClient$OperationCallback) -> clearCachedResources
    void getConversationNotificationStatus(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback) -> getConversationNotificationStatus
    void setConversationNotificationStatus(io.rong.imlib.RongIMClient$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ConversationNotificationStatus,io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback) -> setConversationNotificationStatus
    void setDiscussionInviteStatus(java.lang.String,io.rong.imlib.RongIMClient$DiscussionInviteStatus,io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback) -> setDiscussionInviteStatus
    void syncGroup(java.util.List,io.rong.imlib.RongIMClient$OperationCallback) -> syncGroup
    void joinGroup(java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> joinGroup
    void quitGroup(java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> quitGroup
    void getUserInfo(java.lang.String,io.rong.imlib.RongIMClient$GetUserInfoCallback) -> getUserInfo
    io.rong.imlib.RongIMClient$UserInfo getCurrentUserInfo() -> getCurrentUserInfo
    void addUserInfoToCache(io.rong.imlib.RongIMClient$UserInfo) -> addUserInfoToCache
    void setOnReceiveMessageListener(io.rong.imlib.RongIMClient$OnReceiveMessageListener) -> setOnReceiveMessageListener
    void setConnectionStatusListener(io.rong.imlib.RongIMClient$ConnectionStatusListener) -> setConnectionStatusListener
    long getDeltaTime() -> getDeltaTime
    void joinChatRoom(java.lang.String,int,io.rong.imlib.RongIMClient$OperationCallback) -> joinChatRoom
    void quitChatRoom(java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> quitChatRoom
    boolean clearConversations(io.rong.imlib.RongIMClient$ConversationType[]) -> clearConversations
    void addToBlacklist(java.lang.String,io.rong.imlib.RongIMClient$AddToBlackCallback) -> addToBlacklist
    void removeFromBlacklist(java.lang.String,io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback) -> removeFromBlacklist
    void getBlacklistStatus(java.lang.String,io.rong.imlib.RongIMClient$GetUserBlacklistCallback) -> getBlacklistStatus
    void getBlacklist(io.rong.imlib.RongIMClient$GetBlacklistCallback) -> getBlacklist
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus access$102(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> access$102
    io.rong.imlib.RongIMClient$ConnectionStatusListener access$200() -> access$200
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus access$100() -> access$100
    io.rong.imlib.NativeObject access$300() -> access$300
    io.rong.imlib.RongIMClient$MessageContent access$400(java.lang.String,byte[],io.rong.imlib.RongIMClient$Message) -> access$400
    java.util.HashMap access$500() -> access$500
    android.content.Context access$600() -> access$600
    io.rong.imlib.RongWakeLock access$800() -> access$800
    void access$900(android.content.Context) -> access$900
    io.rong.imlib.RongIMClient access$1000() -> access$1000
    java.lang.String access$1102(io.rong.imlib.RongIMClient,java.lang.String) -> access$1102
    io.rong.imlib.RongIMClient$UserInfo access$1202(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$UserInfo) -> access$1202
    io.rong.imlib.RongIMClient$UserInfo access$1200(io.rong.imlib.RongIMClient) -> access$1200
    java.lang.ref.WeakReference access$1400() -> access$1400
io.rong.imlib.RongIMClient$1 -> io.rong.imlib.RongIMClient$1:
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient$Message val$message -> val$message
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$10 -> io.rong.imlib.RongIMClient$10:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$11 -> io.rong.imlib.RongIMClient$11:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$12 -> io.rong.imlib.RongIMClient$12:
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient$Message val$msg -> val$msg
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$13 -> io.rong.imlib.RongIMClient$13:
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient$Message val$msg -> val$msg
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$14 -> io.rong.imlib.RongIMClient$14:
    io.rong.imlib.RongIMClient$UploadMediaCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void OnProgress(int) -> OnProgress
    void OnError(int,java.lang.String) -> OnError
    void OnComplete(java.lang.String) -> OnComplete
io.rong.imlib.RongIMClient$15 -> io.rong.imlib.RongIMClient$15:
    io.rong.imlib.RongIMClient$DownloadMediaCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void OnProgress(int) -> OnProgress
    void OnError(int,java.lang.String) -> OnError
    void OnComplete(java.lang.String) -> OnComplete
io.rong.imlib.RongIMClient$16 -> io.rong.imlib.RongIMClient$16:
    io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int,int) -> operationComplete
io.rong.imlib.RongIMClient$17 -> io.rong.imlib.RongIMClient$17:
    io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int,int) -> operationComplete
io.rong.imlib.RongIMClient$18 -> io.rong.imlib.RongIMClient$18:
    io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$19 -> io.rong.imlib.RongIMClient$19:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$2 -> io.rong.imlib.RongIMClient$2:
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onReceived(io.rong.imlib.NativeObject$DiscussionInfo) -> onReceived
    void OnError(int) -> OnError
io.rong.imlib.RongIMClient$20 -> io.rong.imlib.RongIMClient$20:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$21 -> io.rong.imlib.RongIMClient$21:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$22 -> io.rong.imlib.RongIMClient$22:
    io.rong.imlib.RongIMClient$GetUserInfoCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onReceiveUserInfo(java.lang.String,byte[],java.lang.String) -> onReceiveUserInfo
    void OnError(int) -> OnError
io.rong.imlib.RongIMClient$23 -> io.rong.imlib.RongIMClient$23:
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onReceived(io.rong.imlib.NativeObject$Message,int) -> onReceived
io.rong.imlib.RongIMClient$23$1 -> io.rong.imlib.RongIMClient$23$1:
    io.rong.imlib.RongIMClient$Message val$message -> val$message
    io.rong.imlib.RongIMClient$23 this$1 -> this$1
    void run() -> run
io.rong.imlib.RongIMClient$23$1$1 -> io.rong.imlib.RongIMClient$23$1$1:
    io.rong.imlib.RongIMClient$23$1 this$2 -> this$2
    void onReceived(io.rong.imlib.NativeObject$DiscussionInfo) -> onReceived
    void OnError(int) -> OnError
io.rong.imlib.RongIMClient$24 -> io.rong.imlib.RongIMClient$24:
    void onError(int,java.lang.String) -> onError
io.rong.imlib.RongIMClient$25 -> io.rong.imlib.RongIMClient$25:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$26 -> io.rong.imlib.RongIMClient$26:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$27 -> io.rong.imlib.RongIMClient$27:
    io.rong.imlib.RongIMClient$AddToBlackCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$28 -> io.rong.imlib.RongIMClient$28:
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$29 -> io.rong.imlib.RongIMClient$29:
    io.rong.imlib.RongIMClient$GetUserBlacklistCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int,int) -> operationComplete
io.rong.imlib.RongIMClient$3 -> io.rong.imlib.RongIMClient$3:
    void QueryWakeup(int) -> QueryWakeup
    void ReleaseWakup() -> ReleaseWakup
io.rong.imlib.RongIMClient$30 -> io.rong.imlib.RongIMClient$30:
    io.rong.imlib.RongIMClient$GetBlacklistCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void OnSuccess(java.lang.String) -> OnSuccess
    void OnError(int) -> OnError
io.rong.imlib.RongIMClient$4 -> io.rong.imlib.RongIMClient$4:
    io.rong.imlib.RongIMClient$ConnectCallback val$callback -> val$callback
    void operationComplete(int,java.lang.String) -> operationComplete
io.rong.imlib.RongIMClient$4$1 -> io.rong.imlib.RongIMClient$4$1:
    io.rong.imlib.RongIMClient$4 this$0 -> this$0
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$5 -> io.rong.imlib.RongIMClient$5:
    io.rong.imlib.RongIMClient$ConnectCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int,java.lang.String) -> operationComplete
io.rong.imlib.RongIMClient$6 -> io.rong.imlib.RongIMClient$6:
    io.rong.imlib.RongIMClient$GetDiscussionCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onReceived(io.rong.imlib.NativeObject$DiscussionInfo) -> onReceived
    void OnError(int) -> OnError
io.rong.imlib.RongIMClient$7 -> io.rong.imlib.RongIMClient$7:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$8 -> io.rong.imlib.RongIMClient$8:
    io.rong.imlib.RongIMClient$CreateDiscussionCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void OnError(int) -> OnError
    void OnSuccess(java.lang.String) -> OnSuccess
io.rong.imlib.RongIMClient$9 -> io.rong.imlib.RongIMClient$9:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.RongIMClient$AddToBlackCallback -> io.rong.imlib.RongIMClient$AddToBlackCallback:
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode -> io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode:
    io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$AddToBlackCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$BlacklistStatus -> io.rong.imlib.RongIMClient$BlacklistStatus:
    io.rong.imlib.RongIMClient$BlacklistStatus EXIT_BLACK_LIST -> EXIT_BLACK_LIST
    io.rong.imlib.RongIMClient$BlacklistStatus NOT_EXIT_BLACK_LIST -> NOT_EXIT_BLACK_LIST
    int value -> value
    io.rong.imlib.RongIMClient$BlacklistStatus[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$BlacklistStatus[] values() -> values
    io.rong.imlib.RongIMClient$BlacklistStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.RongIMClient$BlacklistStatus setValue(int) -> setValue
io.rong.imlib.RongIMClient$ConnectCallback -> io.rong.imlib.RongIMClient$ConnectCallback:
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode -> io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode:
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode PACKAGE_BROKEN -> PACKAGE_BROKEN
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode SERVER_UNAVAILABLE -> SERVER_UNAVAILABLE
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode TOKEN_INCORRECT -> TOKEN_INCORRECT
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode APP_KEY_UNAVAILABLE -> APP_KEY_UNAVAILABLE
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode DATABASE_ERROR -> DATABASE_ERROR
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$ConnectionStatusListener -> io.rong.imlib.RongIMClient$ConnectionStatusListener:
    void onChanged(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onChanged
io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus -> io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus:
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus DISCONNECTED -> DISCONNECTED
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus CONNECTED -> CONNECTED
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus CONNECTING -> CONNECTING
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus NETWORK_UNAVAILABLE -> NETWORK_UNAVAILABLE
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus KICKED_OFFLINE_BY_OTHER_CLIENT -> KICKED_OFFLINE_BY_OTHER_CLIENT
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus LOGIN_ON_WEB -> LOGIN_ON_WEB
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus[] values() -> values
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus setValue(int) -> setValue
    int access$1500(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> access$1500
io.rong.imlib.RongIMClient$Conversation -> io.rong.imlib.RongIMClient$Conversation:
    io.rong.imlib.RongIMClient$ConversationType conversationType -> conversationType
    java.lang.String targetId -> targetId
    java.lang.String conversationTitle -> conversationTitle
    int unreadMessageCount -> unreadMessageCount
    boolean isTop -> isTop
    io.rong.imlib.RongIMClient$ReceivedStatus receivedStatus -> receivedStatus
    io.rong.imlib.RongIMClient$SentStatus sentStatus -> sentStatus
    long receivedTime -> receivedTime
    long sentTime -> sentTime
    java.lang.String objectName -> objectName
    java.lang.String senderUserId -> senderUserId
    java.lang.String senderUserName -> senderUserName
    int latestMessageId -> latestMessageId
    io.rong.imlib.RongIMClient$MessageContent latestMessage -> latestMessage
    java.lang.String draft -> draft
    io.rong.imlib.RongIMClient$ConversationNotificationStatus notificationStatus -> notificationStatus
    io.rong.imlib.RongIMClient$ConversationType getConversationType() -> getConversationType
    void setConversationType(io.rong.imlib.RongIMClient$ConversationType) -> setConversationType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
    java.lang.String getConversationTitle() -> getConversationTitle
    void setConversationTitle(java.lang.String) -> setConversationTitle
    int getUnreadMessageCount() -> getUnreadMessageCount
    void setUnreadMessageCount(int) -> setUnreadMessageCount
    boolean isTop() -> isTop
    void setTop(boolean) -> setTop
    io.rong.imlib.RongIMClient$ReceivedStatus getReceivedStatus() -> getReceivedStatus
    void setReceivedStatus(io.rong.imlib.RongIMClient$ReceivedStatus) -> setReceivedStatus
    io.rong.imlib.RongIMClient$SentStatus getSentStatus() -> getSentStatus
    void setSentStatus(io.rong.imlib.RongIMClient$SentStatus) -> setSentStatus
    long getReceivedTime() -> getReceivedTime
    void setReceivedTime(long) -> setReceivedTime
    long getSentTime() -> getSentTime
    void setSentTime(long) -> setSentTime
    java.lang.String getDraft() -> getDraft
    void setDraft(java.lang.String) -> setDraft
    java.lang.String getObjectName() -> getObjectName
    void setObjectName(java.lang.String) -> setObjectName
    int getLatestMessageId() -> getLatestMessageId
    void setLatestMessageId(int) -> setLatestMessageId
    io.rong.imlib.RongIMClient$MessageContent getLatestMessage() -> getLatestMessage
    void setLatestMessage(io.rong.imlib.RongIMClient$MessageContent) -> setLatestMessage
    java.lang.String getSenderUserId() -> getSenderUserId
    void setSenderUserId(java.lang.String) -> setSenderUserId
    java.lang.String getSenderUserName() -> getSenderUserName
    void setSenderUserName(java.lang.String) -> setSenderUserName
    io.rong.imlib.RongIMClient$ConversationNotificationStatus getNotificationStatus() -> getNotificationStatus
    void setNotificationStatus(io.rong.imlib.RongIMClient$ConversationNotificationStatus) -> setNotificationStatus
io.rong.imlib.RongIMClient$ConversationNotificationStatus -> io.rong.imlib.RongIMClient$ConversationNotificationStatus:
    io.rong.imlib.RongIMClient$ConversationNotificationStatus DO_NOT_DISTURB -> DO_NOT_DISTURB
    io.rong.imlib.RongIMClient$ConversationNotificationStatus NOTIFY -> NOTIFY
    int value -> value
    io.rong.imlib.RongIMClient$ConversationNotificationStatus[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$ConversationNotificationStatus[] values() -> values
    io.rong.imlib.RongIMClient$ConversationNotificationStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.RongIMClient$ConversationNotificationStatus setValue(int) -> setValue
io.rong.imlib.RongIMClient$ConversationType -> io.rong.imlib.RongIMClient$ConversationType:
    io.rong.imlib.RongIMClient$ConversationType PRIVATE -> PRIVATE
    io.rong.imlib.RongIMClient$ConversationType DISCUSSION -> DISCUSSION
    io.rong.imlib.RongIMClient$ConversationType GROUP -> GROUP
    io.rong.imlib.RongIMClient$ConversationType CHATROOM -> CHATROOM
    io.rong.imlib.RongIMClient$ConversationType CUSTOMER_SERVICE -> CUSTOMER_SERVICE
    io.rong.imlib.RongIMClient$ConversationType SYSTEM -> SYSTEM
    int value -> value
    java.lang.String name -> name
    io.rong.imlib.RongIMClient$ConversationType[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$ConversationType[] values() -> values
    io.rong.imlib.RongIMClient$ConversationType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getName() -> getName
    io.rong.imlib.RongIMClient$ConversationType setValue(int) -> setValue
io.rong.imlib.RongIMClient$CreateDiscussionCallback -> io.rong.imlib.RongIMClient$CreateDiscussionCallback:
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode -> io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode:
    io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$CreateDiscussionCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$Discussion -> io.rong.imlib.RongIMClient$Discussion:
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String creatorId -> creatorId
    boolean isOpen -> isOpen
    java.util.List memberIdList -> memberIdList
    boolean isOpen() -> isOpen
    void setOpen(boolean) -> setOpen
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getCreatorId() -> getCreatorId
    void setCreatorId(java.lang.String) -> setCreatorId
    java.util.List getMemberIdList() -> getMemberIdList
    void setMemberIdList(java.util.List) -> setMemberIdList
io.rong.imlib.RongIMClient$DiscussionInviteStatus -> io.rong.imlib.RongIMClient$DiscussionInviteStatus:
    io.rong.imlib.RongIMClient$DiscussionInviteStatus CLOSED -> CLOSED
    io.rong.imlib.RongIMClient$DiscussionInviteStatus OPENED -> OPENED
    int value -> value
    io.rong.imlib.RongIMClient$DiscussionInviteStatus[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$DiscussionInviteStatus[] values() -> values
    io.rong.imlib.RongIMClient$DiscussionInviteStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.RongIMClient$DiscussionInviteStatus setValue(int) -> setValue
io.rong.imlib.RongIMClient$DiscussionNotificationMessage -> io.rong.imlib.RongIMClient$DiscussionNotificationMessage:
    int type -> type
    java.lang.String extension -> extension
    java.lang.String operator -> operator
    boolean hasReceived -> hasReceived
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean isHasReceived() -> isHasReceived
    void setHasReceived(boolean) -> setHasReceived
    byte[] encode() -> encode
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getExtension() -> getExtension
    void setExtension(java.lang.String) -> setExtension
    java.lang.String getOperator() -> getOperator
    void setOperator(java.lang.String) -> setOperator
io.rong.imlib.RongIMClient$DiscussionNotificationMessage$1 -> io.rong.imlib.RongIMClient$DiscussionNotificationMessage$1:
    io.rong.imlib.RongIMClient$DiscussionNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.RongIMClient$DiscussionNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.RongIMClient$DownloadMediaCallback -> io.rong.imlib.RongIMClient$DownloadMediaCallback:
    void onProgress(int) -> onProgress
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode -> io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode:
    io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$DownloadMediaCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$GetBlacklistCallback -> io.rong.imlib.RongIMClient$GetBlacklistCallback:
    void onSuccess(java.lang.String[]) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode -> io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode:
    io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$GetBlacklistCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback -> io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback:
    void onSuccess(io.rong.imlib.RongIMClient$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode -> io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode:
    io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$GetDiscussionCallback -> io.rong.imlib.RongIMClient$GetDiscussionCallback:
    void onSuccess(io.rong.imlib.RongIMClient$Discussion) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode -> io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode:
    io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$GetDiscussionCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$GetUserBlacklistCallback -> io.rong.imlib.RongIMClient$GetUserBlacklistCallback:
    void onSuccess(io.rong.imlib.RongIMClient$BlacklistStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode -> io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode:
    io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$GetUserBlacklistCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$GetUserInfoCallback -> io.rong.imlib.RongIMClient$GetUserInfoCallback:
    void onSuccess(io.rong.imlib.RongIMClient$UserInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode -> io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode:
    io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$GetUserInfoCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$Group -> io.rong.imlib.RongIMClient$Group:
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String portraitUri -> portraitUri
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPortraitUri() -> getPortraitUri
    void setPortraitUri(java.lang.String) -> setPortraitUri
io.rong.imlib.RongIMClient$HasReadNotificationMessage -> io.rong.imlib.RongIMClient$HasReadNotificationMessage:
    boolean hasRead -> hasRead
    boolean hasRead() -> hasRead
    void hasRead(boolean) -> hasRead
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.RongIMClient$HasReceivedNotificationMessage -> io.rong.imlib.RongIMClient$HasReceivedNotificationMessage:
    boolean hasReceived -> hasReceived
    boolean isHasReceived() -> isHasReceived
    void setHasReceived(boolean) -> setHasReceived
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.RongIMClient$IsTypingStatusMessage -> io.rong.imlib.RongIMClient$IsTypingStatusMessage:
    boolean isTyping -> isTyping
    boolean isTyping() -> isTyping
    void setTyping(boolean) -> setTyping
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.RongIMClient$MediaType -> io.rong.imlib.RongIMClient$MediaType:
    io.rong.imlib.RongIMClient$MediaType IMAGE -> IMAGE
    io.rong.imlib.RongIMClient$MediaType AUDIO -> AUDIO
    io.rong.imlib.RongIMClient$MediaType VIDEO -> VIDEO
    io.rong.imlib.RongIMClient$MediaType FILE -> FILE
    int value -> value
    io.rong.imlib.RongIMClient$MediaType[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$MediaType[] values() -> values
    io.rong.imlib.RongIMClient$MediaType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.RongIMClient$MediaType setValue(int) -> setValue
io.rong.imlib.RongIMClient$Message -> io.rong.imlib.RongIMClient$Message:
    io.rong.imlib.RongIMClient$ConversationType conversationType -> conversationType
    java.lang.String targetId -> targetId
    int messageId -> messageId
    io.rong.imlib.RongIMClient$MessageDirection messageDirection -> messageDirection
    java.lang.String senderUserId -> senderUserId
    io.rong.imlib.RongIMClient$ReceivedStatus receivedStatus -> receivedStatus
    io.rong.imlib.RongIMClient$SentStatus sentStatus -> sentStatus
    long receivedTime -> receivedTime
    long sentTime -> sentTime
    java.lang.String objectName -> objectName
    io.rong.imlib.RongIMClient$MessageContent content -> content
    java.lang.String extra -> extra
    io.rong.imlib.RongIMClient$ConversationType getConversationType() -> getConversationType
    void setConversationType(io.rong.imlib.RongIMClient$ConversationType) -> setConversationType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
    int getMessageId() -> getMessageId
    void setMessageId(int) -> setMessageId
    io.rong.imlib.RongIMClient$MessageDirection getMessageDirection() -> getMessageDirection
    void setMessageDirection(io.rong.imlib.RongIMClient$MessageDirection) -> setMessageDirection
    io.rong.imlib.RongIMClient$ReceivedStatus getReceivedStatus() -> getReceivedStatus
    void setReceivedStatus(io.rong.imlib.RongIMClient$ReceivedStatus) -> setReceivedStatus
    io.rong.imlib.RongIMClient$SentStatus getSentStatus() -> getSentStatus
    void setSentStatus(io.rong.imlib.RongIMClient$SentStatus) -> setSentStatus
    long getReceivedTime() -> getReceivedTime
    void setReceivedTime(long) -> setReceivedTime
    long getSentTime() -> getSentTime
    void setSentTime(long) -> setSentTime
    java.lang.String getObjectName() -> getObjectName
    void setObjectName(java.lang.String) -> setObjectName
    io.rong.imlib.RongIMClient$MessageContent getContent() -> getContent
    void setContent(io.rong.imlib.RongIMClient$MessageContent) -> setContent
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    java.lang.String getSenderUserId() -> getSenderUserId
    void setSenderUserId(java.lang.String) -> setSenderUserId
    io.rong.imlib.RongIMClient$MessageContent access$000(io.rong.imlib.RongIMClient$Message) -> access$000
    java.lang.String access$1300(io.rong.imlib.RongIMClient$Message) -> access$1300
io.rong.imlib.RongIMClient$MessageContent -> io.rong.imlib.RongIMClient$MessageContent:
    java.lang.String pushContent -> pushContent
    java.lang.String getPushContent() -> getPushContent
    void setPushContent(java.lang.String) -> setPushContent
    byte[] encode() -> encode
io.rong.imlib.RongIMClient$MessageDirection -> io.rong.imlib.RongIMClient$MessageDirection:
    io.rong.imlib.RongIMClient$MessageDirection SEND -> SEND
    io.rong.imlib.RongIMClient$MessageDirection RECEIVE -> RECEIVE
    int value -> value
    io.rong.imlib.RongIMClient$MessageDirection[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$MessageDirection[] values() -> values
    io.rong.imlib.RongIMClient$MessageDirection valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.RongIMClient$MessageDirection setValue(int) -> setValue
io.rong.imlib.RongIMClient$NotificationMessage -> io.rong.imlib.RongIMClient$NotificationMessage:
io.rong.imlib.RongIMClient$OnReceiveMessageListener -> io.rong.imlib.RongIMClient$OnReceiveMessageListener:
    void onReceived(io.rong.imlib.RongIMClient$Message,int) -> onReceived
io.rong.imlib.RongIMClient$OperationCallback -> io.rong.imlib.RongIMClient$OperationCallback:
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$OperationCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$OperationCallback$ErrorCode -> io.rong.imlib.RongIMClient$OperationCallback$ErrorCode:
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$OperationCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$Options -> io.rong.imlib.RongIMClient$Options:
    boolean enableDebug -> enableDebug
    boolean isEnableDebug() -> isEnableDebug
    void setEnableDebug(boolean) -> setEnableDebug
io.rong.imlib.RongIMClient$ReceivedStatus -> io.rong.imlib.RongIMClient$ReceivedStatus:
    int READ -> READ
    int LISTENED -> LISTENED
    int DOWNLOADED -> DOWNLOADED
    int flag -> flag
    boolean isRead -> isRead
    boolean isListened -> isListened
    boolean isDownload -> isDownload
    int messageId -> messageId
    int getFlag() -> getFlag
    boolean isRead() -> isRead
    boolean isListened() -> isListened
    void setListened() -> setListened
    boolean isDownload() -> isDownload
    void setDownload() -> setDownload
io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback -> io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback:
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode -> io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode:
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$SendMessageCallback -> io.rong.imlib.RongIMClient$SendMessageCallback:
    void onSuccess(int) -> onSuccess
    void onError(int,io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode) -> onError
    void onProgress(int,int) -> onProgress
io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode -> io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode:
    io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode HANDLER_EXP -> HANDLER_EXP
    io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode TIMEOUT -> TIMEOUT
    io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode REJECTED_BY_BLACKLIST -> REJECTED_BY_BLACKLIST
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$SentStatus -> io.rong.imlib.RongIMClient$SentStatus:
    io.rong.imlib.RongIMClient$SentStatus SENDING -> SENDING
    io.rong.imlib.RongIMClient$SentStatus FAILED -> FAILED
    io.rong.imlib.RongIMClient$SentStatus SENT -> SENT
    io.rong.imlib.RongIMClient$SentStatus RECEIVED -> RECEIVED
    io.rong.imlib.RongIMClient$SentStatus READ -> READ
    io.rong.imlib.RongIMClient$SentStatus DESTROYED -> DESTROYED
    int value -> value
    io.rong.imlib.RongIMClient$SentStatus[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$SentStatus[] values() -> values
    io.rong.imlib.RongIMClient$SentStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.RongIMClient$SentStatus setValue(int) -> setValue
io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback -> io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback:
    void onSuccess(io.rong.imlib.RongIMClient$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode -> io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode:
    io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback -> io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback:
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode -> io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode:
    io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$StatusMessage -> io.rong.imlib.RongIMClient$StatusMessage:
io.rong.imlib.RongIMClient$StickerMessage -> io.rong.imlib.RongIMClient$StickerMessage:
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.RongIMClient$UnknowMessage -> io.rong.imlib.RongIMClient$UnknowMessage:
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.RongIMClient$UploadMediaCallback -> io.rong.imlib.RongIMClient$UploadMediaCallback:
    void onProgress(int) -> onProgress
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode) -> onError
io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode -> io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode:
    io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$UserInfo -> io.rong.imlib.RongIMClient$UserInfo:
    java.lang.String userId -> userId
    java.lang.String name -> name
    java.lang.String portraitUri -> portraitUri
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPortraitUri() -> getPortraitUri
    void setPortraitUri(java.lang.String) -> setPortraitUri
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.RongIMClient$UserInfo$1 -> io.rong.imlib.RongIMClient$UserInfo$1:
    io.rong.imlib.RongIMClient$UserInfo createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.RongIMClient$UserInfo[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.RongReceiver -> io.rong.imlib.RongReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.imlib.RongService -> io.rong.imlib.RongService:
    java.lang.String ACTION_HEARTBEAT -> ACTION_HEARTBEAT
    java.lang.String ACTION_HANDLER_REMOTE -> ACTION_HANDLER_REMOTE
    java.lang.String ACTION_CONNECTION -> ACTION_CONNECTION
    java.lang.String ACTION_DISCONNECTION -> ACTION_DISCONNECTION
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
io.rong.imlib.RongService$1 -> io.rong.imlib.RongService$1:
    io.rong.imlib.RongService this$0 -> this$0
    void Complete(int,java.lang.String) -> Complete
io.rong.imlib.RongService$2 -> io.rong.imlib.RongService$2:
    io.rong.imlib.RongService this$0 -> this$0
    void QueryWakeup(int) -> QueryWakeup
    void ReleaseWakup() -> ReleaseWakup
io.rong.imlib.RongService$3 -> io.rong.imlib.RongService$3:
    io.rong.imlib.RongService this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode) -> onError
io.rong.imlib.RongService$4 -> io.rong.imlib.RongService$4:
    io.rong.imlib.RongService this$0 -> this$0
    void Complete(int,java.lang.String) -> Complete
io.rong.imlib.RongWakeLock -> io.rong.imlib.RongWakeLock:
    android.os.PowerManager$WakeLock mLock -> mLock
    android.content.Context mContext -> mContext
    void acquireWakeLock(int) -> acquireWakeLock
    void acquireWakeLock(int,int) -> acquireWakeLock
    void acquireWakeLock() -> acquireWakeLock
    void releaseWakeLock() -> releaseWakeLock
io.rong.imlib.StringUtil -> io.rong.imlib.StringUtil:
    java.lang.String join(java.util.Iterator,java.lang.String) -> join
    boolean isEmpty(java.lang.String) -> isEmpty
    java.lang.String ClearSymbols(java.lang.String) -> ClearSymbols
io.rong.imlib.WakeLockService -> io.rong.imlib.WakeLockService:
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    void acquireWakeLock() -> acquireWakeLock
    void acquireWakeLock(long) -> acquireWakeLock
    void releaseWakeLock() -> releaseWakeLock
io.rong.imlib.WakeLockUtils -> io.rong.imlib.WakeLockUtils:
    int HEARTBEAT_SPAN -> HEARTBEAT_SPAN
    void startNextHeartbeat(android.content.Context) -> startNextHeartbeat
    void cancelHeartbeat(android.content.Context) -> cancelHeartbeat
io.rong.imlib.version.Version -> io.rong.imlib.version.Version:
    java.lang.String VERSION -> VERSION
io.rong.message.BuildConfig -> io.rong.message.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
io.rong.message.CommandNotificationMessage -> io.rong.message.CommandNotificationMessage:
    java.lang.String name -> name
    java.lang.String data -> data
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    io.rong.message.CommandNotificationMessage obtain(java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
io.rong.message.CommandNotificationMessage$1 -> io.rong.message.CommandNotificationMessage$1:
    io.rong.message.CommandNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.CommandNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.ContactNotificationMessage -> io.rong.message.ContactNotificationMessage:
    java.lang.String CONTACT_OPERATION_REQUEST -> CONTACT_OPERATION_REQUEST
    java.lang.String CONTACT_OPERATION_ACCEPT_RESPONSE -> CONTACT_OPERATION_ACCEPT_RESPONSE
    java.lang.String CONTACT_OPERATION_REJECT_RESPONSE -> CONTACT_OPERATION_REJECT_RESPONSE
    java.lang.String operation -> operation
    java.lang.String sourceUserId -> sourceUserId
    java.lang.String targetUserId -> targetUserId
    java.lang.String message -> message
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getOperation() -> getOperation
    void setOperation(java.lang.String) -> setOperation
    java.lang.String getSourceUserId() -> getSourceUserId
    void setSourceUserId(java.lang.String) -> setSourceUserId
    java.lang.String getTargetUserId() -> getTargetUserId
    void setTargetUserId(java.lang.String) -> setTargetUserId
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.ContactNotificationMessage obtain(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
io.rong.message.ContactNotificationMessage$1 -> io.rong.message.ContactNotificationMessage$1:
    io.rong.message.ContactNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.ContactNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.GroupNotificationMessage -> io.rong.message.GroupNotificationMessage:
    java.lang.String GroupOperationAdd -> GroupOperationAdd
    java.lang.String GroupOperationQuit -> GroupOperationQuit
    java.lang.String GroupOperationKicked -> GroupOperationKicked
    java.lang.String GroupOperationRename -> GroupOperationRename
    java.lang.String GroupOperationBulletin -> GroupOperationBulletin
    java.lang.String operatorUserId -> operatorUserId
    java.lang.String operation -> operation
    java.lang.String data -> data
    java.lang.String message -> message
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getOperatorUserId() -> getOperatorUserId
    void setOperatorUserId(java.lang.String) -> setOperatorUserId
    java.lang.String getOperation() -> getOperation
    void setOperation(java.lang.String) -> setOperation
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.GroupNotificationMessage obtain(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
io.rong.message.GroupNotificationMessage$1 -> io.rong.message.GroupNotificationMessage$1:
    io.rong.message.GroupNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.GroupNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.ImageMessage -> io.rong.message.ImageMessage:
    android.net.Uri mThumUri -> mThumUri
    android.net.Uri mLocalUri -> mLocalUri
    android.net.Uri mRemoteUri -> mRemoteUri
    boolean mUpLoadExp -> mUpLoadExp
    java.lang.String mBase64 -> mBase64
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.ImageMessage obtain(android.net.Uri,android.net.Uri) -> obtain
    io.rong.message.ImageMessage obtain() -> obtain
    android.net.Uri getThumUri() -> getThumUri
    void setThumUri(android.net.Uri) -> setThumUri
    android.net.Uri getLocalUri() -> getLocalUri
    void setLocalUri(android.net.Uri) -> setLocalUri
    android.net.Uri getRemoteUri() -> getRemoteUri
    void setRemoteUri(android.net.Uri) -> setRemoteUri
    void setBase64(java.lang.String) -> setBase64
    java.lang.String getBase64() -> getBase64
    boolean isUpLoadExp() -> isUpLoadExp
    void setUpLoadExp(boolean) -> setUpLoadExp
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.ImageMessage$1 -> io.rong.message.ImageMessage$1:
    io.rong.message.ImageMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.ImageMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.ImageMessageHandler -> io.rong.message.ImageMessageHandler:
    void afterDecodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.message.ImageMessage) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.message.ImageMessage) -> beforeEncodeMessage
    boolean sendMessage(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$Message,io.rong.message.ImageMessage,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    android.net.Uri obtainThumImageUri(android.content.Context,io.rong.imlib.RongIMClient$Message) -> obtainThumImageUri
    boolean sendMessage(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    boolean beforeEncodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> beforeEncodeMessage
    void afterDecodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> afterDecodeMessage
io.rong.message.ImageMessageHandler$1 -> io.rong.message.ImageMessageHandler$1:
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient$Message val$message -> val$message
    io.rong.message.ImageMessage val$model -> val$model
    io.rong.message.ImageMessageHandler this$0 -> this$0
    void onProgress(int) -> onProgress
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$UploadMediaCallback$ErrorCode) -> onError
io.rong.message.InformationNotificationMessage -> io.rong.message.InformationNotificationMessage:
    java.lang.String message -> message
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    io.rong.message.InformationNotificationMessage obtain(java.lang.String) -> obtain
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
io.rong.message.InformationNotificationMessage$1 -> io.rong.message.InformationNotificationMessage$1:
    io.rong.message.InformationNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.InformationNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.LocationMessage -> io.rong.message.LocationMessage:
    double mLat -> mLat
    double mLng -> mLng
    java.lang.String mPoi -> mPoi
    java.lang.String mBase64 -> mBase64
    android.net.Uri mImgUri -> mImgUri
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    byte[] encode() -> encode
    io.rong.message.LocationMessage obtain(double,double,java.lang.String,android.net.Uri) -> obtain
    double getLat() -> getLat
    void setLat(double) -> setLat
    double getLng() -> getLng
    void setLng(double) -> setLng
    java.lang.String getPoi() -> getPoi
    void setPoi(java.lang.String) -> setPoi
    java.lang.String getBase64() -> getBase64
    void setBase64(java.lang.String) -> setBase64
    android.net.Uri getImgUri() -> getImgUri
    void setImgUri(android.net.Uri) -> setImgUri
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.LocationMessage$1 -> io.rong.message.LocationMessage$1:
    io.rong.message.LocationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.LocationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.LocationMessageHandler -> io.rong.message.LocationMessageHandler:
    void afterDecodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.message.LocationMessage) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.message.LocationMessage) -> beforeEncodeMessage
    boolean sendMessage(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$Message,io.rong.message.LocationMessage,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    android.net.Uri obtainLocationUri(android.content.Context,io.rong.imlib.RongIMClient$Message) -> obtainLocationUri
    boolean sendMessage(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    boolean beforeEncodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> beforeEncodeMessage
    void afterDecodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> afterDecodeMessage
io.rong.message.LocationMessageHandler$1 -> io.rong.message.LocationMessageHandler$1:
    io.rong.message.LocationMessage val$messageContent -> val$messageContent
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient$Message val$message -> val$message
    io.rong.imlib.RongIMClient val$client -> val$client
    io.rong.message.LocationMessageHandler this$0 -> this$0
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.io.File) -> onComplete
    void onFailure(com.sea_monster.core.network.AbstractHttpRequest,com.sea_monster.core.exception.BaseException) -> onFailure
    void statusCallback(com.sea_monster.core.resource.model.StoreStatus) -> statusCallback
    void statusCallback(java.lang.Object) -> statusCallback
    void onComplete(com.sea_monster.core.network.AbstractHttpRequest,java.lang.Object) -> onComplete
io.rong.message.MessageHandlerContext -> io.rong.message.MessageHandlerContext:
    io.rong.message.MessageHandlerContext sS -> sS
    io.rong.message.MessageHandlerContext getInstance() -> getInstance
    void init(android.content.Context) -> init
    java.io.File getResourceDir(android.content.Context) -> getResourceDir
io.rong.message.MessageHandlerContext$1 -> io.rong.message.MessageHandlerContext$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    io.rong.message.MessageHandlerContext this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.rong.message.ProfileNotificationMessage -> io.rong.message.ProfileNotificationMessage:
    java.lang.String operation -> operation
    java.lang.String data -> data
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getOperation() -> getOperation
    void setOperation(java.lang.String) -> setOperation
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.ProfileNotificationMessage obtain(java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
io.rong.message.ProfileNotificationMessage$1 -> io.rong.message.ProfileNotificationMessage$1:
    io.rong.message.ProfileNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.ProfileNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.RichContentMessage -> io.rong.message.RichContentMessage:
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String url -> url
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    io.rong.message.RichContentMessage obtain(java.lang.String,java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getExpression(java.lang.String) -> getExpression
    java.lang.String toExpressionChar(java.lang.String) -> toExpressionChar
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
io.rong.message.RichContentMessage$1 -> io.rong.message.RichContentMessage$1:
    io.rong.message.RichContentMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.RichContentMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.TextMessage -> io.rong.message.TextMessage:
    java.lang.String content -> content
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    byte[] encode() -> encode
    java.lang.String getExpression(java.lang.String) -> getExpression
    java.lang.String toExpressionChar(java.lang.String) -> toExpressionChar
    io.rong.message.TextMessage obtain(java.lang.String) -> obtain
    void setContent(java.lang.String) -> setContent
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getContent() -> getContent
io.rong.message.TextMessage$1 -> io.rong.message.TextMessage$1:
    io.rong.message.TextMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.TextMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.VoiceMessage -> io.rong.message.VoiceMessage:
    android.net.Uri mUri -> mUri
    int mDuration -> mDuration
    java.lang.String mBase64 -> mBase64
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.VoiceMessage obtain(android.net.Uri,int) -> obtain
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    java.lang.String getBase64() -> getBase64
    void setBase64(java.lang.String) -> setBase64
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.VoiceMessage$1 -> io.rong.message.VoiceMessage$1:
    io.rong.message.VoiceMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.VoiceMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.VoiceMessageHandler -> io.rong.message.VoiceMessageHandler:
    void afterDecodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.message.VoiceMessage) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.message.VoiceMessage) -> beforeEncodeMessage
    boolean sendMessage(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$Message,io.rong.message.VoiceMessage,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    android.net.Uri obtainVoiceUri(android.content.Context,io.rong.imlib.RongIMClient$Message) -> obtainVoiceUri
    boolean sendMessage(io.rong.imlib.RongIMClient,io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    boolean beforeEncodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> beforeEncodeMessage
    void afterDecodeMessage(io.rong.imlib.RongIMClient$Message,io.rong.imlib.RongIMClient$MessageContent) -> afterDecodeMessage
io.rong.message.utils.BitmapUtil -> io.rong.message.utils.BitmapUtil:
    java.lang.String TAG -> TAG
    java.lang.String getBase64FromBitmap(android.graphics.Bitmap) -> getBase64FromBitmap
    android.graphics.Bitmap getBitmapFromBase64(java.lang.String) -> getBitmapFromBase64
    android.graphics.Bitmap getResizedBitmap(android.content.Context,android.net.Uri,int,int) -> getResizedBitmap
io.rong.message.utils.RLog -> io.rong.message.utils.RLog:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    int wtf(java.lang.String,java.lang.String) -> wtf
    int wtf(java.lang.String,java.lang.Throwable) -> wtf
    int wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
    int println(int,java.lang.String,java.lang.String) -> println
io.rong.voipkit.activity.BaseActivity -> io.rong.voipkit.activity.BaseActivity:
    java.lang.String RECIVE_MSG_BROADCAST_ACTION -> RECIVE_MSG_BROADCAST_ACTION
    io.rong.voipkit.activity.BaseActivity$ReciveMsgBroadCastReciver rmb -> rmb
    com.ultrapower.mcs.engine.UMCS session -> session
    com.ultrapower.mcs.engine.internal.UMCSInternal uUMCSInternal -> uUMCSInternal
    android.media.AudioManager mAudioManager -> mAudioManager
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    java.lang.String remoteIp -> remoteIp
    int localPort -> localPort
    int remotePort -> remotePort
    java.lang.String peerid -> peerid
    java.lang.String appId -> appId
    java.lang.String mySelfId -> mySelfId
    java.lang.String sessionId -> sessionId
    java.lang.String peerUserPhoteUri -> peerUserPhoteUri
    boolean isVoIPSuccess -> isVoIPSuccess
    android.widget.TextView calling_state -> calling_state
    android.widget.ImageView user_photo -> user_photo
    android.media.MediaPlayer mMediaPlayer -> mMediaPlayer
    int initAudioMode -> initAudioMode
    android.hardware.Sensor mSensor -> mSensor
    android.hardware.SensorManager mSensorManager -> mSensorManager
    float mLastEventValue -> mLastEventValue
    android.os.Handler stepTimeHandler -> stepTimeHandler
    java.lang.Runnable mTicker -> mTicker
    long startTime -> startTime
    int RINGSTYLE_CALL -> RINGSTYLE_CALL
    int RINGSTYLE_CALLED -> RINGSTYLE_CALLED
    android.os.Handler setPhotoHandler -> setPhotoHandler
    void onCreate(android.os.Bundle) -> onCreate
    void initAudioManager() -> initAudioManager
    void onResume() -> onResume
    void onPause() -> onPause
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void showMaskLayout(boolean) -> showMaskLayout
    void initCall() -> initCall
    void createVoIP() -> createVoIP
    void createLocaleAudio() -> createLocaleAudio
    void createRemoteAudio() -> createRemoteAudio
    void StartChat() -> StartChat
    void sendMsg(io.rong.imlib.RongIMClient$MessageContent) -> sendMsg
    java.lang.String showTimeCount(long) -> showTimeCount
    void startCountTime() -> startCountTime
    void stopCountTime() -> stopCountTime
    void playerRingtone(int,int) -> playerRingtone
    void releaseRingtong() -> releaseRingtong
    void recoverAudiaMode() -> recoverAudiaMode
    void enableHandOffAndSoundOff(android.widget.ImageView,android.widget.ImageView) -> enableHandOffAndSoundOff
    void setPhoto(java.lang.String) -> setPhoto
    void onDestroy() -> onDestroy
    java.lang.String access$000(io.rong.voipkit.activity.BaseActivity,long) -> access$000
    java.lang.Runnable access$100(io.rong.voipkit.activity.BaseActivity) -> access$100
    android.os.Handler access$200(io.rong.voipkit.activity.BaseActivity) -> access$200
    android.os.Handler access$300(io.rong.voipkit.activity.BaseActivity) -> access$300
io.rong.voipkit.activity.BaseActivity$1 -> io.rong.voipkit.activity.BaseActivity$1:
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void OnTransportFailed() -> OnTransportFailed
io.rong.voipkit.activity.BaseActivity$2 -> io.rong.voipkit.activity.BaseActivity$2:
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.BaseActivity$3 -> io.rong.voipkit.activity.BaseActivity$3:
    android.widget.ImageView val$sound_off -> val$sound_off
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.voipkit.activity.BaseActivity$4 -> io.rong.voipkit.activity.BaseActivity$4:
    android.widget.ImageView val$hands_off -> val$hands_off
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.voipkit.activity.BaseActivity$5 -> io.rong.voipkit.activity.BaseActivity$5:
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.BaseActivity$6 -> io.rong.voipkit.activity.BaseActivity$6:
    java.lang.String val$uri -> val$uri
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.BaseActivity$ReciveMsgBroadCastReciver -> io.rong.voipkit.activity.BaseActivity$ReciveMsgBroadCastReciver:
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.voipkit.activity.CallSideActivity -> io.rong.voipkit.activity.CallSideActivity:
    java.lang.String peerUserName -> peerUserName
    android.widget.TextView userName -> userName
    android.widget.ImageView sound_off -> sound_off
    android.widget.ImageView hands_off -> hands_off
    android.view.View maskView -> maskView
    java.lang.String myselfName -> myselfName
    java.lang.String token -> token
    int STARTVOIP_SUCCESS -> STARTVOIP_SUCCESS
    int STARTVOIP_ERROR -> STARTVOIP_ERROR
    boolean isActiviyShow -> isActiviyShow
    android.os.Handler connectedHandler -> connectedHandler
    android.os.Handler delayHandler -> delayHandler
    java.lang.Runnable finishActivity -> finishActivity
    void onCreate(android.os.Bundle) -> onCreate
    void onEvent(io.rong.imkit.model.VOIPCallBackObject) -> onEvent
    void showMaskLayout(boolean) -> showMaskLayout
    void onResume() -> onResume
    void reciveIntentData() -> reciveIntentData
    void connectVoIPServer_call() -> connectVoIPServer_call
    void doFinishChat(android.view.View) -> doFinishChat
    void onBackPressed() -> onBackPressed
    void delayTimesFinish() -> delayTimesFinish
    void CalledAcceptCall() -> CalledAcceptCall
    void onDestroy() -> onDestroy
    boolean access$000() -> access$000
    java.lang.String access$100(io.rong.voipkit.activity.CallSideActivity) -> access$100
    java.lang.String access$200(io.rong.voipkit.activity.CallSideActivity) -> access$200
    java.lang.String access$300(io.rong.voipkit.activity.CallSideActivity) -> access$300
io.rong.voipkit.activity.CallSideActivity$1 -> io.rong.voipkit.activity.CallSideActivity$1:
    io.rong.voipkit.activity.CallSideActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.CallSideActivity$1$1 -> io.rong.voipkit.activity.CallSideActivity$1$1:
    io.rong.voipkit.activity.CallSideActivity$1 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
io.rong.voipkit.activity.CallSideActivity$2 -> io.rong.voipkit.activity.CallSideActivity$2:
    io.rong.voipkit.activity.CallSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CallSideActivity$3 -> io.rong.voipkit.activity.CallSideActivity$3:
    io.rong.voipkit.activity.CallSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CallSideActivity$3$1 -> io.rong.voipkit.activity.CallSideActivity$3$1:
    io.rong.voipkit.activity.CallSideActivity$3 this$1 -> this$1
    void OnSuccess(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voipkit.activity.CallSideActivity$4 -> io.rong.voipkit.activity.CallSideActivity$4:
    io.rong.voipkit.activity.CallSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CalledSideActivity -> io.rong.voipkit.activity.CalledSideActivity:
    android.widget.Button call_finish -> call_finish
    android.widget.LinearLayout vioce_control_container -> vioce_control_container
    android.widget.TextView user_name -> user_name
    android.view.View maskView -> maskView
    android.widget.ImageView sound_off -> sound_off
    android.widget.ImageView hands_off -> hands_off
    io.rong.voipkit.message.VoIPCallMessage voipCallMessage -> voipCallMessage
    io.rong.imlib.RongIMClient mRongIMClient -> mRongIMClient
    boolean isPushJumpHere -> isPushJumpHere
    java.lang.String fromUserNameByPush -> fromUserNameByPush
    android.os.Handler acceptVoIPHandler -> acceptVoIPHandler
    android.os.Handler connectedHandler -> connectedHandler
    int MESSAGE_VOIPCALL -> MESSAGE_VOIPCALL
    int MESSAGE_VOIPFINISH -> MESSAGE_VOIPFINISH
    android.os.Handler doPushRecevieHandler -> doPushRecevieHandler
    void onCreate(android.os.Bundle) -> onCreate
    void showMaskLayout(boolean) -> showMaskLayout
    void initParam() -> initParam
    void connectVoIPServer_accept() -> connectVoIPServer_accept
    void doYes(android.view.View) -> doYes
    void doRefuse(android.view.View) -> doRefuse
    void onBackPressed() -> onBackPressed
    void doFinishChat(android.view.View) -> doFinishChat
    void switchView() -> switchView
    void doPush(java.lang.String,java.lang.String) -> doPush
    void registerReceiveMessage() -> registerReceiveMessage
    void sendMessageByPushJump(io.rong.imlib.RongIMClient$MessageContent) -> sendMessageByPushJump
    void onDestroy() -> onDestroy
    boolean access$000(io.rong.voipkit.activity.CalledSideActivity) -> access$000
    void access$100(io.rong.voipkit.activity.CalledSideActivity) -> access$100
    io.rong.voipkit.message.VoIPCallMessage access$200(io.rong.voipkit.activity.CalledSideActivity) -> access$200
    void access$300(io.rong.voipkit.activity.CalledSideActivity) -> access$300
    io.rong.voipkit.message.VoIPCallMessage access$202(io.rong.voipkit.activity.CalledSideActivity,io.rong.voipkit.message.VoIPCallMessage) -> access$202
    java.lang.String access$400(io.rong.voipkit.activity.CalledSideActivity) -> access$400
io.rong.voipkit.activity.CalledSideActivity$1 -> io.rong.voipkit.activity.CalledSideActivity$1:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.CalledSideActivity$2 -> io.rong.voipkit.activity.CalledSideActivity$2:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.CalledSideActivity$2$1 -> io.rong.voipkit.activity.CalledSideActivity$2$1:
    io.rong.voipkit.activity.CalledSideActivity$2 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
io.rong.voipkit.activity.CalledSideActivity$3 -> io.rong.voipkit.activity.CalledSideActivity$3:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CalledSideActivity$3$1 -> io.rong.voipkit.activity.CalledSideActivity$3$1:
    io.rong.voipkit.activity.CalledSideActivity$3 this$1 -> this$1
    void OnSuccess() -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voipkit.activity.CalledSideActivity$4 -> io.rong.voipkit.activity.CalledSideActivity$4:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ConnectCallback$ErrorCode) -> onError
io.rong.voipkit.activity.CalledSideActivity$5 -> io.rong.voipkit.activity.CalledSideActivity$5:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.CalledSideActivity$6 -> io.rong.voipkit.activity.CalledSideActivity$6:
    long val$startTime -> val$startTime
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void onReceived(io.rong.imlib.RongIMClient$Message,int) -> onReceived
io.rong.voipkit.activity.CalledSideActivity$7 -> io.rong.voipkit.activity.CalledSideActivity$7:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void onChanged(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onChanged
io.rong.voipkit.activity.CalledSideActivity$MySendMessageCallback -> io.rong.voipkit.activity.CalledSideActivity$MySendMessageCallback:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void onSuccess(int) -> onSuccess
    void onError(int,io.rong.imlib.RongIMClient$SendMessageCallback$ErrorCode) -> onError
    void onProgress(int,int) -> onProgress
io.rong.voipkit.message.VoIPAcceptMessage -> io.rong.voipkit.message.VoIPAcceptMessage:
    java.lang.String toId -> toId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    java.lang.String getToId() -> getToId
    void setToId(java.lang.String) -> setToId
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.voipkit.message.VoIPAcceptMessage$1 -> io.rong.voipkit.message.VoIPAcceptMessage$1:
    io.rong.voipkit.message.VoIPAcceptMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.voipkit.message.VoIPAcceptMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.voipkit.message.VoIPCallMessage -> io.rong.voipkit.message.VoIPCallMessage:
    java.lang.String sessionId -> sessionId
    java.lang.String ip -> ip
    int remoteTransferPort -> remoteTransferPort
    int remoteControlPort -> remoteControlPort
    java.lang.String toId -> toId
    java.lang.String toUserName -> toUserName
    java.lang.String fromId -> fromId
    java.lang.String fromUserName -> fromUserName
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    java.lang.String getSessionId() -> getSessionId
    void setSessionId(java.lang.String) -> setSessionId
    java.lang.String getIp() -> getIp
    void setIp(java.lang.String) -> setIp
    int getRemoteTransferPort() -> getRemoteTransferPort
    void setRemoteTransferPort(int) -> setRemoteTransferPort
    int getRemoteControlPort() -> getRemoteControlPort
    void setRemoteControlPort(int) -> setRemoteControlPort
    java.lang.String getToId() -> getToId
    void setToId(java.lang.String) -> setToId
    java.lang.String getToUserName() -> getToUserName
    void setToUserName(java.lang.String) -> setToUserName
    java.lang.String getFromId() -> getFromId
    void setFromId(java.lang.String) -> setFromId
    java.lang.String getFromUserName() -> getFromUserName
    void setFromUserName(java.lang.String) -> setFromUserName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.voipkit.message.VoIPCallMessage$1 -> io.rong.voipkit.message.VoIPCallMessage$1:
    io.rong.voipkit.message.VoIPCallMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.voipkit.message.VoIPCallMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.voipkit.message.VoIPFinishMessage -> io.rong.voipkit.message.VoIPFinishMessage:
    int FINISH_NORMAL -> FINISH_NORMAL
    int FINISH_REFUSE -> FINISH_REFUSE
    java.lang.String toId -> toId
    int finish_state -> finish_state
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    java.lang.String getToId() -> getToId
    void setToId(java.lang.String) -> setToId
    int getFinish_state() -> getFinish_state
    void setFinish_state(int) -> setFinish_state
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.voipkit.message.VoIPFinishMessage$1 -> io.rong.voipkit.message.VoIPFinishMessage$1:
    io.rong.voipkit.message.VoIPFinishMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.voipkit.message.VoIPFinishMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.voiplib.NativeObject -> io.rong.voiplib.NativeObject:
    void setJNIEnv(io.rong.voiplib.NativeObject) -> setJNIEnv
    void StartVoip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,io.rong.voiplib.NativeObject$StartVoIPCallback) -> StartVoip
    void AcceptVoip(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,io.rong.voiplib.NativeObject$AcceptVoIPCallback) -> AcceptVoip
    void EndVoip(java.lang.String,java.lang.String,java.lang.String,io.rong.voiplib.NativeObject$AcceptVoIPCallback) -> EndVoip
io.rong.voiplib.NativeObject$AcceptVoIPCallback -> io.rong.voiplib.NativeObject$AcceptVoIPCallback:
    void OnSuccess() -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voiplib.NativeObject$StartVoIPCallback -> io.rong.voiplib.NativeObject$StartVoIPCallback:
    void OnSuccess(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voiplib.RongIMVoIP -> io.rong.voiplib.RongIMVoIP:
    java.lang.String TAG -> TAG
    io.rong.voiplib.NativeObject nativeObj -> nativeObj
    void startVoIP(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,io.rong.voiplib.NativeObject$StartVoIPCallback) -> startVoIP
    void acceptVoIP(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,io.rong.voiplib.NativeObject$AcceptVoIPCallback) -> acceptVoIP
    void endVoIP(java.lang.String,java.lang.String,java.lang.String) -> endVoIP
io.rong.voiplib.RongIMVoIP$1 -> io.rong.voiplib.RongIMVoIP$1:
    void OnSuccess() -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voiplib.utils.NetworkUtil -> io.rong.voiplib.utils.NetworkUtil:
    void isConnectivityAvailable(android.content.Context,io.rong.voiplib.utils.NetworkUtil$DoEventByConnectivityState) -> isConnectivityAvailable
io.rong.voiplib.utils.NetworkUtil$DoEventByConnectivityState -> io.rong.voiplib.utils.NetworkUtil$DoEventByConnectivityState:
    void doCall() -> doCall
    void doWarnCall() -> doWarnCall
io.rong.voiplib.utils.Res -> io.rong.voiplib.utils.Res:
    java.lang.String LOG_TAG -> LOG_TAG
    io.rong.voiplib.utils.Res instance -> instance
    java.lang.String packageName -> packageName
    java.lang.Class R_id -> R_id
    java.lang.Class R_drawable -> R_drawable
    java.lang.Class R_layout -> R_layout
    java.lang.Class R_anim -> R_anim
    java.lang.Class R_style -> R_style
    java.lang.Class R_string -> R_string
    java.lang.Class R_array -> R_array
    java.lang.Class R_color -> R_color
    java.lang.Class R_dimen -> R_dimen
    java.lang.Class R_integer -> R_integer
    java.lang.Class R_bool -> R_bool
    java.lang.Class R_styleable -> R_styleable
    java.lang.Class R_attr -> R_attr
    io.rong.voiplib.utils.Res getInstance(android.content.Context) -> getInstance
    void setPackageName(java.lang.String) -> setPackageName
    int anim(java.lang.String) -> anim
    int id(java.lang.String) -> id
    int drawable(java.lang.String) -> drawable
    int layout(java.lang.String) -> layout
    int style(java.lang.String) -> style
    int string(java.lang.String) -> string
    int array(java.lang.String) -> array
    int color(java.lang.String) -> color
    int dimen(java.lang.String) -> dimen
    int integer(java.lang.String) -> integer
    int bool(java.lang.String) -> bool
    int styleable(java.lang.String) -> styleable
    int attr(java.lang.String) -> attr
    int[] styleables(java.lang.String) -> styleables
    int getRes(java.lang.Class,java.lang.String) -> getRes
    int[] getResArr(java.lang.Class,java.lang.String) -> getResArr
io.rong.voiplib.utils.VoIPUtil -> io.rong.voiplib.utils.VoIPUtil:
    java.lang.String getLocalIpAddress(android.content.Context) -> getLocalIpAddress
    int getPort() -> getPort
m.framework.network.ByteArrayPart -> m.framework.network.ByteArrayPart:
    byte[] buffer -> buffer
    m.framework.network.ByteArrayPart append(byte[]) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.FilePart -> m.framework.network.FilePart:
    java.io.File file -> file
    void setFile(java.io.File) -> setFile
    void setFile(java.lang.String) -> setFile
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.HTTPPart -> m.framework.network.HTTPPart:
    java.io.InputStream getInputStream() -> getInputStream
    long length() -> length
    org.apache.http.entity.InputStreamEntity getInputStreamEntity() -> getInputStreamEntity
m.framework.network.KVPair -> m.framework.network.KVPair:
    java.lang.String name -> name
    java.lang.Object value -> value
    java.lang.String toString() -> toString
m.framework.network.MultiPart -> m.framework.network.MultiPart:
    java.util.ArrayList parts -> parts
    m.framework.network.MultiPart append(m.framework.network.HTTPPart) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.MultiPartInputStream -> m.framework.network.MultiPartInputStream:
    java.util.ArrayList isList -> isList
    int curIs -> curIs
    void addInputStream(java.io.InputStream) -> addInputStream
    boolean isEmpty() -> isEmpty
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
m.framework.network.NetworkHelper -> m.framework.network.NetworkHelper:
    int connectionTimeout -> connectionTimeout
    int readTimout -> readTimout
    java.lang.String httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> httpGet
    void httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList,m.framework.network.ResponseCallback) -> httpGet
    void download(java.lang.String,java.io.File) -> download
    void download(java.lang.String,m.framework.network.ResponseCallback) -> download
    java.lang.String httpPost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList) -> httpPost
    void httpPost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList,m.framework.network.ResponseCallback) -> httpPost
    org.apache.http.client.methods.HttpPost filePost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair) -> filePost
    org.apache.http.client.methods.HttpPost textPost(java.lang.String,java.util.ArrayList) -> textPost
    void rawPost(java.lang.String,java.util.ArrayList,m.framework.network.HTTPPart,m.framework.network.ResponseCallback) -> rawPost
    java.lang.String httpPut(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList) -> httpPut
    java.lang.String kvPairsToUrl(java.util.ArrayList) -> kvPairsToUrl
    org.apache.http.client.HttpClient getSSLHttpClient() -> getSSLHttpClient
m.framework.network.ResponseCallback -> m.framework.network.ResponseCallback:
    void onResponse(java.io.InputStream) -> onResponse
m.framework.network.SSLSocketFactoryEx -> m.framework.network.SSLSocketFactoryEx:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
m.framework.network.SSLSocketFactoryEx$1 -> m.framework.network.SSLSocketFactoryEx$1:
    m.framework.network.SSLSocketFactoryEx this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
m.framework.network.StringPart -> m.framework.network.StringPart:
    java.lang.StringBuilder sb -> sb
    m.framework.network.StringPart append(java.lang.String) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.ui.widget.asyncview.AsyncImageView -> m.framework.ui.widget.asyncview.AsyncImageView:
    int DEFAULT_TRANSPARENT -> DEFAULT_TRANSPARENT
    android.graphics.Bitmap DEFAULT_TRANSPARENT_BITMAP -> DEFAULT_TRANSPARENT_BITMAP
    int MSG_IMG_GOT -> MSG_IMG_GOT
    java.util.Random rnd -> rnd
    java.lang.String cacheDir -> cacheDir
    java.lang.String url -> url
    int defaultRes -> defaultRes
    m.framework.ui.widget.asyncview.OnImageGotListener onImageGotListener -> onImageGotListener
    void init(android.content.Context) -> init
    void setOnImageGotListener(m.framework.ui.widget.asyncview.OnImageGotListener) -> setOnImageGotListener
    java.lang.String getUrl() -> getUrl
    void execute(java.lang.String) -> execute
    void execute(java.lang.String,int) -> execute
    android.graphics.Bitmap getDefaultBitmap(int) -> getDefaultBitmap
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.ui.widget.asyncview.AsyncView -> m.framework.ui.widget.asyncview.AsyncView:
    void execute(java.lang.String,int) -> execute
    java.lang.String getUrl() -> getUrl
m.framework.ui.widget.asyncview.BitmapCallback -> m.framework.ui.widget.asyncview.BitmapCallback:
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
m.framework.ui.widget.asyncview.BitmapProcessor -> m.framework.ui.widget.asyncview.BitmapProcessor:
    int CAPACITY -> CAPACITY
    int MAX_REQ_TIME -> MAX_REQ_TIME
    int MAX_SIZE -> MAX_SIZE
    int OVERFLOW_SIZE -> OVERFLOW_SIZE
    m.framework.ui.widget.asyncview.BitmapProcessor instance -> instance
    java.util.WeakHashMap cacheMap -> cacheMap
    boolean work -> work
    java.util.Vector reqList -> reqList
    java.io.File cacheDir -> cacheDir
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] workerList -> workerList
    java.util.Vector netReqTPS -> netReqTPS
    void prepare(java.lang.String) -> prepare
    void start() -> start
    void stop() -> stop
    void process(java.lang.String,m.framework.ui.widget.asyncview.BitmapCallback) -> process
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    boolean access$0(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$0
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] access$1(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$1
    java.util.Vector access$2(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$2
    java.util.WeakHashMap access$3(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$3
    java.io.File access$4(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$4
    java.util.Vector access$5(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$5
m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq -> m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq:
    java.lang.String url -> url
    m.framework.ui.widget.asyncview.BitmapCallback callback -> callback
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread worker -> worker
    long reqTime -> reqTime
    android.graphics.Bitmap image -> image
    void throwComplete(android.graphics.Bitmap) -> throwComplete
    java.lang.String toString() -> toString
    java.lang.String access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> access$0
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$1
    void access$2(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,android.graphics.Bitmap) -> access$2
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,java.lang.String) -> access$3
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapCallback) -> access$4
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread -> m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> processor
    void scan() -> scan
    m.framework.ui.widget.asyncview.BitmapProcessor access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> access$0
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> access$1
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1 -> m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1:
    int counter -> counter
    m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread this$1 -> this$1
    void run() -> run
m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream -> m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream:
    java.io.InputStream in -> in
    long skip(long) -> skip
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread -> m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> processor
    long lastReport -> lastReport
    boolean localType -> localType
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq curReq -> curReq
    void run() -> run
    void doLocalTask() -> doLocalTask
    void doNetworkTask() -> doNetworkTask
    void doTask(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> doTask
    void saveFile(android.graphics.Bitmap,java.io.File) -> saveFile
    void interrupt() -> interrupt
    void access$0(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,boolean) -> access$0
    long access$1(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$1
    boolean access$2(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$2
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> access$3
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,android.graphics.Bitmap,java.io.File) -> access$4
    m.framework.ui.widget.asyncview.BitmapProcessor access$5(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$5
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1 -> m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1:
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread this$1 -> this$1
    java.io.File val$file -> val$file
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq val$req -> val$req
    void onResponse(java.io.InputStream) -> onResponse
m.framework.ui.widget.asyncview.OnImageGotListener -> m.framework.ui.widget.asyncview.OnImageGotListener:
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> onImageGot
m.framework.ui.widget.asyncview.SimpleOnImageGotListener -> m.framework.ui.widget.asyncview.SimpleOnImageGotListener:
    m.framework.ui.widget.asyncview.SimpleOnImageGotListener INSTANCE -> INSTANCE
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> onImageGot
m.framework.ui.widget.pulltorefresh.GroupListView -> m.framework.ui.widget.pulltorefresh.GroupListView:
    void setAdapter(m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter) -> setAdapter
m.framework.ui.widget.pulltorefresh.GroupListView$1 -> m.framework.ui.widget.pulltorefresh.GroupListView$1:
    m.framework.ui.widget.pulltorefresh.GroupListView this$0 -> this$0
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter val$adapter -> val$adapter
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int[] getItemIndex(int) -> getItemIndex
    int getCount() -> getCount
m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter -> m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter:
    android.widget.BaseAdapter adapter -> adapter
    void setInnerAdapter(android.widget.BaseAdapter) -> setInnerAdapter
    int getGroupCount() -> getGroupCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter,android.widget.BaseAdapter) -> access$0
m.framework.ui.widget.pulltorefresh.GroupListView$ItemHolder -> m.framework.ui.widget.pulltorefresh.GroupListView$ItemHolder:
    android.widget.LinearLayout llItem -> llItem
    android.view.View title -> title
    android.view.View child -> child
m.framework.ui.widget.pulltorefresh.ListInnerAdapter -> m.framework.ui.widget.pulltorefresh.ListInnerAdapter:
    m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter adapter -> adapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
m.framework.ui.widget.pulltorefresh.OnListStopScrollListener -> m.framework.ui.widget.pulltorefresh.OnListStopScrollListener:
    void onListStopScrolling(int,int) -> onListStopScrolling
m.framework.ui.widget.pulltorefresh.OnScrollListener -> m.framework.ui.widget.pulltorefresh.OnScrollListener:
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper -> m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper:
    android.content.Context context -> context
    m.framework.ui.widget.pulltorefresh.PullToRefreshView parent -> parent
    android.content.Context getContext() -> getContext
    m.framework.ui.widget.pulltorefresh.PullToRefreshView getParent() -> getParent
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.view.View getHeaderView() -> getHeaderView
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onReversed() -> onReversed
m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableGridView gridView -> gridView
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.GridView getGridView() -> getGridView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableGridView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView listView -> listView
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    int getGroupCount() -> getGroupCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    m.framework.ui.widget.pulltorefresh.GroupListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$2 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$2:
    m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter this$0 -> this$0
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    java.lang.Object getChild(int,int) -> getChild
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableListView listView -> listView
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.ListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshView -> m.framework.ui.widget.pulltorefresh.PullToRefreshView:
    long MIN_REF_TIME -> MIN_REF_TIME
    m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper adapter -> adapter
    android.view.View headerView -> headerView
    android.view.View bodyView -> bodyView
    int headerHeight -> headerHeight
    int top -> top
    float downY -> downY
    boolean requesting -> requesting
    boolean pullingLock -> pullingLock
    java.lang.Runnable stopAct -> stopAct
    long refreshTime -> refreshTime
    void init() -> init
    void setAdapter(m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper) -> setAdapter
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.view.MotionEvent getCancelEvent(android.view.MotionEvent) -> getCancelEvent
    void performRequest() -> performRequest
    void stopRequest() -> stopRequest
    void performPulling(boolean) -> performPulling
    void reversePulling() -> reversePulling
    void stopPulling() -> stopPulling
    void lockPulling() -> lockPulling
    void releaseLock() -> releaseLock
    boolean canPull() -> canPull
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> access$0
    void access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> access$1
m.framework.ui.widget.pulltorefresh.PullToRefreshView$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshView$1:
    m.framework.ui.widget.pulltorefresh.PullToRefreshView this$0 -> this$0
    void run() -> run
m.framework.ui.widget.pulltorefresh.Scrollable -> m.framework.ui.widget.pulltorefresh.Scrollable:
m.framework.ui.widget.pulltorefresh.ScrollableGridView -> m.framework.ui.widget.pulltorefresh.ScrollableGridView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    boolean isReadyToPull() -> isReadyToPull
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableGridView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableGridView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableGridView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableGridView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.ScrollableGroupListView -> m.framework.ui.widget.pulltorefresh.ScrollableGroupListView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableGroupListView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableGroupListView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableGroupListView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.ScrollableListView -> m.framework.ui.widget.pulltorefresh.ScrollableListView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableListView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableListView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableListView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableListView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.slidingmenu.BodyContainer -> m.framework.ui.widget.slidingmenu.BodyContainer:
    int MIN_FLING_VEL -> MIN_FLING_VEL
    int MENU_COVER_ALPHA -> MENU_COVER_ALPHA
    float downX -> downX
    m.framework.ui.widget.slidingmenu.SlidingMenu menu -> menu
    int maxVelocity -> maxVelocity
    android.view.VelocityTracker tracker -> tracker
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onScrollChanged(int,int,int,int) -> onScrollChanged
m.framework.ui.widget.slidingmenu.MenuAdapter -> m.framework.ui.widget.slidingmenu.MenuAdapter:
    java.util.ArrayList menus -> menus
    m.framework.ui.widget.slidingmenu.SlidingMenuGroup findGroupById(int) -> findGroupById
    void setGroup(int,java.lang.String) -> setGroup
    void setGroup(m.framework.ui.widget.slidingmenu.SlidingMenuGroup) -> setGroup
    void setItem(int,m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> setItem
    android.view.View getMenuTitle() -> getMenuTitle
    int getGroupCount() -> getGroupCount
    m.framework.ui.widget.slidingmenu.SlidingMenuGroup getGroup(int) -> getGroup
    java.lang.String getTitle(int) -> getTitle
    android.view.View getGroupView(int,android.view.ViewGroup) -> getGroupView
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getItem(int,int) -> getItem
    android.view.View getItemView(m.framework.ui.widget.slidingmenu.SlidingMenuItem,android.view.ViewGroup) -> getItemView
    void notifyDataSetChanged(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> notifyDataSetChanged
    boolean onItemTrigger(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> onItemTrigger
    void onMenuSwitch(boolean) -> onMenuSwitch
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getMenuItem(int,int) -> getMenuItem
m.framework.ui.widget.slidingmenu.MenuConfig -> m.framework.ui.widget.slidingmenu.MenuConfig:
    int itemDownBack -> itemDownBack
    int itemDownRelease -> itemDownRelease
    float menuWeight -> menuWeight
    int menuBackground -> menuBackground
    int paddingLeft -> paddingLeft
    int paddingTop -> paddingTop
    int paddingRight -> paddingRight
    int paddingBottom -> paddingBottom
    int titleHeight -> titleHeight
    int bodyBackground -> bodyBackground
    int rightShadow -> rightShadow
    int menuSep -> menuSep
m.framework.ui.widget.slidingmenu.SlidingMenu -> m.framework.ui.widget.slidingmenu.SlidingMenu:
    m.framework.ui.widget.slidingmenu.MenuConfig config -> config
    java.util.HashMap itemToView -> itemToView
    android.view.View$OnClickListener ocListener -> ocListener
    android.view.View$OnTouchListener otListener -> otListener
    m.framework.ui.widget.slidingmenu.MenuAdapter adapter -> adapter
    int screenWidth -> screenWidth
    int menuWidth -> menuWidth
    int showMenuWidth -> showMenuWidth
    boolean menuShown -> menuShown
    android.widget.FrameLayout flMenu -> flMenu
    android.widget.LinearLayout llMenu -> llMenu
    android.view.View vCover -> vCover
    m.framework.ui.widget.slidingmenu.BodyContainer svBody -> svBody
    android.widget.LinearLayout llBody -> llBody
    android.view.View curBody -> curBody
    void init(android.content.Context) -> init
    void initMenu(android.content.Context) -> initMenu
    void initBody(android.content.Context) -> initBody
    void setAdapter(m.framework.ui.widget.slidingmenu.MenuAdapter) -> setAdapter
    void refresh() -> refresh
    void reInit(android.content.Context) -> reInit
    void reInitMenu(android.content.Context) -> reInitMenu
    void reInitBody(android.content.Context) -> reInitBody
    void setBodyView(android.view.View) -> setBodyView
    android.view.View getBodyView() -> getBodyView
    void invalidateMenu() -> invalidateMenu
    android.view.View getSepView(android.content.Context) -> getSepView
    void switchMenu() -> switchMenu
    void showMenu() -> showMenu
    void hideMenu() -> hideMenu
    boolean isMenuShown() -> isMenuShown
    int getMenuWidth() -> getMenuWidth
    int getShowMenuWidth() -> getShowMenuWidth
    m.framework.ui.widget.slidingmenu.MenuConfig getMenuConfig() -> getMenuConfig
    android.view.View getMenuCover() -> getMenuCover
    void setMenuItemBackground(int,int) -> setMenuItemBackground
    void setMenuWeight(float) -> setMenuWeight
    void setMenuBackground(int) -> setMenuBackground
    void setMenuPadding(int,int,int,int) -> setMenuPadding
    void setTtleHeight(int) -> setTtleHeight
    void setShadowRes(int) -> setShadowRes
    void setBodyBackground(int) -> setBodyBackground
    void setMenuDivider(int) -> setMenuDivider
    void disableOverScrollMode(android.view.View) -> disableOverScrollMode
    android.view.View itemToView(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> itemToView
    void triggerItem(int,int) -> triggerItem
    void triggerItem(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> triggerItem
    m.framework.ui.widget.slidingmenu.MenuAdapter access$0(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$0
    m.framework.ui.widget.slidingmenu.MenuConfig access$1(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$1
    boolean access$2(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$2
    m.framework.ui.widget.slidingmenu.BodyContainer access$3(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$3
    int access$4(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$4
m.framework.ui.widget.slidingmenu.SlidingMenu$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onClick(android.view.View) -> onClick
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$1) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$1$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$1$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$1 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenu$2 -> m.framework.ui.widget.slidingmenu.SlidingMenu$2:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
m.framework.ui.widget.slidingmenu.SlidingMenu$3 -> m.framework.ui.widget.slidingmenu.SlidingMenu$3:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$3) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$3$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$3$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$3 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenu$4 -> m.framework.ui.widget.slidingmenu.SlidingMenu$4:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
m.framework.ui.widget.slidingmenu.SlidingMenu$5 -> m.framework.ui.widget.slidingmenu.SlidingMenu$5:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
m.framework.ui.widget.slidingmenu.SlidingMenu$6 -> m.framework.ui.widget.slidingmenu.SlidingMenu$6:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$6) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$6$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$6$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$6 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenuGroup -> m.framework.ui.widget.slidingmenu.SlidingMenuGroup:
    int id -> id
    java.lang.String text -> text
    java.util.ArrayList items -> items
    void setItem(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> setItem
    m.framework.ui.widget.slidingmenu.SlidingMenuItem findItemById(int) -> findItemById
    int getCount() -> getCount
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getItem(int) -> getItem
m.framework.ui.widget.slidingmenu.SlidingMenuItem -> m.framework.ui.widget.slidingmenu.SlidingMenuItem:
    int group -> group
    int id -> id
    java.lang.Object body -> body
m.framework.ui.widget.viewpager.ViewPagerAdapter -> m.framework.ui.widget.viewpager.ViewPagerAdapter:
    int getCount() -> getCount
    void onScreenChange(int,int) -> onScreenChange
    android.view.View getView(int,android.view.ViewGroup) -> getView
m.framework.ui.widget.viewpager.ViewPagerClassic -> m.framework.ui.widget.viewpager.ViewPagerClassic:
    int SNAP_VELOCITY -> SNAP_VELOCITY
    int currentScreen -> currentScreen
    android.widget.Scroller scroller -> scroller
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float lastMotionX -> lastMotionX
    float lastMotionY -> lastMotionY
    int TOUCH_STATE_REST -> TOUCH_STATE_REST
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    int touchState -> touchState
    int touchSlop -> touchSlop
    int mMaximumVelocity -> mMaximumVelocity
    m.framework.ui.widget.viewpager.ViewPagerAdapter adapter -> adapter
    void init(android.content.Context) -> init
    int getCurrentScreen() -> getCurrentScreen
    void setCurrentScreen(int) -> setCurrentScreen
    void computeScroll() -> computeScroll
    void setAdapter(m.framework.ui.widget.viewpager.ViewPagerAdapter) -> setAdapter
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void handleInterceptMove(android.view.MotionEvent) -> handleInterceptMove
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> handleScrollMove
    void scrollToScreen(int) -> scrollToScreen
    void scrollToScreen(int,boolean) -> scrollToScreen
    void scrollLeft() -> scrollLeft
    void scrollRight() -> scrollRight
m.framework.ui.widget.viewpager.ViewPagerClassic$1 -> m.framework.ui.widget.viewpager.ViewPagerClassic$1:
    float[] values -> values
    m.framework.ui.widget.viewpager.ViewPagerClassic this$0 -> this$0
    float getInterpolation(float) -> getInterpolation
m.framework.utils.Data -> m.framework.utils.Data:
    java.lang.String CHAT_SET -> CHAT_SET
    m.framework.utils.Hashon hashon -> hashon
    byte[] SHA1(java.lang.String) -> SHA1
    byte[] AES128Encode(java.lang.String,java.lang.String) -> AES128Encode
    byte[] AES128Encode(byte[],java.lang.String) -> AES128Encode
    java.lang.String AES128Decode(java.lang.String,byte[]) -> AES128Decode
    byte[] AES128Decode(byte[],byte[]) -> AES128Decode
    java.lang.String byteToHex(byte[]) -> byteToHex
    java.util.HashMap parseJson(java.lang.String) -> parseJson
    java.lang.String parseJson(java.util.HashMap) -> parseJson
    java.lang.String base62(long) -> base62
    java.lang.String MD5(java.lang.String) -> MD5
    byte[] rawMD5(java.lang.String) -> rawMD5
    java.lang.String urlEncode(java.lang.String,java.lang.String) -> urlEncode
m.framework.utils.DeviceHelper -> m.framework.utils.DeviceHelper:
    android.content.Context context -> context
    m.framework.utils.DeviceHelper deviceHelper -> deviceHelper
    m.framework.utils.DeviceHelper getInstance(android.content.Context) -> getInstance
    boolean isRooted() -> isRooted
    java.lang.String getMacAddress() -> getMacAddress
    java.lang.String getModel() -> getModel
    java.lang.String getFactory() -> getFactory
    java.lang.String getDeviceId() -> getDeviceId
    java.lang.String getDeviceData() -> getDeviceData
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> Base64AES
    java.lang.String getOSVersion() -> getOSVersion
    java.lang.String getScreenSize() -> getScreenSize
    java.lang.String getCarrier() -> getCarrier
    java.lang.String getNetworkType() -> getNetworkType
    int getPlatformCode() -> getPlatformCode
    boolean isFastMobileNetwork() -> isFastMobileNetwork
    org.json.JSONArray getRunningApp() -> getRunningApp
    java.lang.String getRunningAppStr() -> getRunningAppStr
    java.lang.String getDeviceKey() -> getDeviceKey
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppName() -> getAppName
    int getAppVersion() -> getAppVersion
    java.lang.String getAppVersionName() -> getAppVersionName
    java.util.ArrayList getInstalledApp(boolean) -> getInstalledApp
    boolean isSystemApp(android.content.pm.PackageInfo) -> isSystemApp
    java.lang.String getNetworkOperator() -> getNetworkOperator
    java.lang.String getTopTaskPackageName() -> getTopTaskPackageName
    boolean getSdcardState() -> getSdcardState
    java.lang.String getSdcardPath() -> getSdcardPath
m.framework.utils.HEX -> m.framework.utils.HEX:
    char[] DIGITS -> DIGITS
    java.lang.String toHex(byte[]) -> toHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    byte[] decodeHexString(java.lang.String) -> decodeHexString
    byte[] decodeHex(char[]) -> decodeHex
    int toDigit(char,int) -> toDigit
    char[] encodeHex(byte[]) -> encodeHex
    byte[] decode(byte[]) -> decode
    byte[] decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    char[] encode(java.lang.Object) -> encode
m.framework.utils.Hashon -> m.framework.utils.Hashon:
    java.util.HashMap fromJson(java.lang.String) -> fromJson
    java.util.HashMap fromJson(org.json.JSONObject) -> fromJson
    java.util.ArrayList fromJson(org.json.JSONArray) -> fromJson
    java.lang.String fromHashMap(java.util.HashMap) -> fromHashMap
    org.json.JSONObject getJSONObject(java.util.HashMap) -> getJSONObject
    boolean isBasicArray(java.lang.Object) -> isBasicArray
    java.util.ArrayList arrayToList(java.lang.Object) -> arrayToList
    org.json.JSONArray getJSONArray(java.util.ArrayList) -> getJSONArray
    java.lang.String format(java.lang.String) -> format
    java.lang.String format(java.lang.String,java.util.HashMap) -> format
    java.lang.String format(java.lang.String,java.util.ArrayList) -> format
m.framework.utils.UIHandler -> m.framework.utils.UIHandler:
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$0(android.os.Message) -> access$0
m.framework.utils.UIHandler$1 -> m.framework.utils.UIHandler$1:
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.utils.Utils -> m.framework.utils.Utils:
    float density -> density
    int dipToPx(android.content.Context,int) -> dipToPx
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> getBitmap
    java.lang.String getFileMime(java.lang.String) -> getFileMime
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
uk.co.senab.bitmapcache.BitmapLruCache -> uk.co.senab.bitmapcache.BitmapLruCache:
    int DISK_CACHE_FLUSH_DELAY_SECS -> DISK_CACHE_FLUSH_DELAY_SECS
    java.io.File mTempDir -> mTempDir
    android.content.res.Resources mResources -> mResources
    uk.co.senab.bitmapcache.BitmapMemoryLruCache mMemoryCache -> mMemoryCache
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy mRecyclePolicy -> mRecyclePolicy
    com.jakewharton.disklrucache.DiskLruCache mDiskCache -> mDiskCache
    java.util.HashMap mDiskCacheEditLocks -> mDiskCacheEditLocks
    java.util.concurrent.ScheduledThreadPoolExecutor mDiskCacheFlusherExecutor -> mDiskCacheFlusherExecutor
    uk.co.senab.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable mDiskCacheFlusherRunnable -> mDiskCacheFlusherRunnable
    java.util.concurrent.ScheduledFuture mDiskCacheFuture -> mDiskCacheFuture
    void checkNotOnMainThread() -> checkNotOnMainThread
    java.lang.String transformUrlForDiskCacheKey(java.lang.String) -> transformUrlForDiskCacheKey
    boolean contains(java.lang.String) -> contains
    boolean containsInDiskCache(java.lang.String) -> containsInDiskCache
    boolean containsInMemoryCache(java.lang.String) -> containsInMemoryCache
    uk.co.senab.bitmapcache.CacheableBitmapDrawable get(java.lang.String) -> get
    uk.co.senab.bitmapcache.CacheableBitmapDrawable get(java.lang.String,android.graphics.BitmapFactory$Options) -> get
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getFromDiskCache(java.lang.String,android.graphics.BitmapFactory$Options) -> getFromDiskCache
    java.io.File getFileFromDiskCache(java.lang.String) -> getFileFromDiskCache
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getFromMemoryCache(java.lang.String) -> getFromMemoryCache
    boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(java.lang.String,android.graphics.Bitmap) -> put
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int) -> put
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(java.lang.String,java.io.InputStream) -> put
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(java.lang.String,java.io.InputStream,android.graphics.BitmapFactory$Options) -> put
    void putOrigin(java.lang.String,java.io.InputStream) -> putOrigin
    void remove(java.lang.String) -> remove
    void trimMemory() -> trimMemory
    void setDiskCache(com.jakewharton.disklrucache.DiskLruCache) -> setDiskCache
    void setMemoryCache(uk.co.senab.bitmapcache.BitmapMemoryLruCache) -> setMemoryCache
    java.util.concurrent.locks.ReentrantLock getLockForDiskCacheEdit(java.lang.String) -> getLockForDiskCacheEdit
    void scheduleDiskCacheFlush() -> scheduleDiskCacheFlush
    uk.co.senab.bitmapcache.CacheableBitmapDrawable decodeBitmap(uk.co.senab.bitmapcache.BitmapLruCache$InputStreamProvider,java.lang.String,android.graphics.BitmapFactory$Options) -> decodeBitmap
    boolean addInBitmapOptions(uk.co.senab.bitmapcache.BitmapLruCache$InputStreamProvider,android.graphics.BitmapFactory$Options) -> addInBitmapOptions
    com.jakewharton.disklrucache.DiskLruCache access$200(uk.co.senab.bitmapcache.BitmapLruCache) -> access$200
uk.co.senab.bitmapcache.BitmapLruCache$1 -> uk.co.senab.bitmapcache.BitmapLruCache$1:
    int[] $SwitchMap$uk$co$senab$bitmapcache$BitmapLruCache$RecyclePolicy -> $SwitchMap$uk$co$senab$bitmapcache$BitmapLruCache$RecyclePolicy
uk.co.senab.bitmapcache.BitmapLruCache$Builder -> uk.co.senab.bitmapcache.BitmapLruCache$Builder:
    int MEGABYTE -> MEGABYTE
    float DEFAULT_MEMORY_CACHE_HEAP_RATIO -> DEFAULT_MEMORY_CACHE_HEAP_RATIO
    float MAX_MEMORY_CACHE_HEAP_RATIO -> MAX_MEMORY_CACHE_HEAP_RATIO
    int DEFAULT_DISK_CACHE_MAX_SIZE_MB -> DEFAULT_DISK_CACHE_MAX_SIZE_MB
    int DEFAULT_MEM_CACHE_MAX_SIZE_MB -> DEFAULT_MEM_CACHE_MAX_SIZE_MB
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy DEFAULT_RECYCLE_POLICY -> DEFAULT_RECYCLE_POLICY
    float DEFAULT_MEMORY_CACHE_HEAP_PERCENTAGE -> DEFAULT_MEMORY_CACHE_HEAP_PERCENTAGE
    float MAX_MEMORY_CACHE_HEAP_PERCENTAGE -> MAX_MEMORY_CACHE_HEAP_PERCENTAGE
    android.content.Context mContext -> mContext
    boolean mDiskCacheEnabled -> mDiskCacheEnabled
    java.io.File mDiskCacheLocation -> mDiskCacheLocation
    long mDiskCacheMaxSize -> mDiskCacheMaxSize
    boolean mMemoryCacheEnabled -> mMemoryCacheEnabled
    int mMemoryCacheMaxSize -> mMemoryCacheMaxSize
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy mRecyclePolicy -> mRecyclePolicy
    long getHeapSize() -> getHeapSize
    uk.co.senab.bitmapcache.BitmapLruCache build() -> build
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setDiskCacheEnabled(boolean) -> setDiskCacheEnabled
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setDiskCacheLocation(java.io.File) -> setDiskCacheLocation
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setDiskCacheMaxSize(long) -> setDiskCacheMaxSize
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setMemoryCacheEnabled(boolean) -> setMemoryCacheEnabled
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setMemoryCacheMaxSize(int) -> setMemoryCacheMaxSize
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setMemoryCacheMaxSizeUsingHeapSize() -> setMemoryCacheMaxSizeUsingHeapSize
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setMemoryCacheMaxSizeUsingHeapSize(float) -> setMemoryCacheMaxSizeUsingHeapSize
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setRecyclePolicy(uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy) -> setRecyclePolicy
    boolean isValidOptionsForDiskCache() -> isValidOptionsForDiskCache
    boolean isValidOptionsForMemoryCache() -> isValidOptionsForMemoryCache
    java.io.File access$000(uk.co.senab.bitmapcache.BitmapLruCache$Builder) -> access$000
    long access$100(uk.co.senab.bitmapcache.BitmapLruCache$Builder) -> access$100
uk.co.senab.bitmapcache.BitmapLruCache$Builder$1 -> uk.co.senab.bitmapcache.BitmapLruCache$Builder$1:
    uk.co.senab.bitmapcache.BitmapLruCache val$cache -> val$cache
    uk.co.senab.bitmapcache.BitmapLruCache$Builder this$0 -> this$0
    com.jakewharton.disklrucache.DiskLruCache doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.jakewharton.disklrucache.DiskLruCache) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
uk.co.senab.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable -> uk.co.senab.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable:
    com.jakewharton.disklrucache.DiskLruCache mDiskCache -> mDiskCache
    void run() -> run
uk.co.senab.bitmapcache.BitmapLruCache$FileInputStreamProvider -> uk.co.senab.bitmapcache.BitmapLruCache$FileInputStreamProvider:
    java.io.File mFile -> mFile
    java.io.InputStream getInputStream() -> getInputStream
uk.co.senab.bitmapcache.BitmapLruCache$InputStreamProvider -> uk.co.senab.bitmapcache.BitmapLruCache$InputStreamProvider:
    java.io.InputStream getInputStream() -> getInputStream
uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy -> uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy:
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy DISABLED -> DISABLED
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy PRE_HONEYCOMB_ONLY -> PRE_HONEYCOMB_ONLY
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy ALWAYS -> ALWAYS
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy[] $VALUES -> $VALUES
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy[] values() -> values
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy valueOf(java.lang.String) -> valueOf
    boolean canInBitmap() -> canInBitmap
    boolean canRecycle() -> canRecycle
uk.co.senab.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider -> uk.co.senab.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider:
    java.lang.String mKey -> mKey
    uk.co.senab.bitmapcache.BitmapLruCache this$0 -> this$0
    java.io.InputStream getInputStream() -> getInputStream
    java.io.File getFile() -> getFile
uk.co.senab.bitmapcache.BitmapMemoryLruCache -> uk.co.senab.bitmapcache.BitmapMemoryLruCache:
    java.util.Set mRemovedEntries -> mRemovedEntries
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy mRecyclePolicy -> mRecyclePolicy
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> put
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy getRecyclePolicy() -> getRecyclePolicy
    int sizeOf(java.lang.String,uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> sizeOf
    void entryRemoved(boolean,java.lang.String,uk.co.senab.bitmapcache.CacheableBitmapDrawable,uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> entryRemoved
    android.graphics.Bitmap getBitmapFromRemoved(int,int) -> getBitmapFromRemoved
    void trimMemory() -> trimMemory
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
uk.co.senab.bitmapcache.CacheableBitmapDrawable -> uk.co.senab.bitmapcache.CacheableBitmapDrawable:
    int SOURCE_UNKNOWN -> SOURCE_UNKNOWN
    int SOURCE_NEW -> SOURCE_NEW
    int SOURCE_INBITMAP -> SOURCE_INBITMAP
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String mUrl -> mUrl
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy mRecyclePolicy -> mRecyclePolicy
    int mDisplayingCount -> mDisplayingCount
    boolean mHasBeenDisplayed -> mHasBeenDisplayed
    int mCacheCount -> mCacheCount
    java.lang.Runnable mCheckStateRunnable -> mCheckStateRunnable
    java.lang.Throwable mStackTraceWhenRecycled -> mStackTraceWhenRecycled
    android.os.Handler sHandler -> sHandler
    int mMemorySize -> mMemorySize
    int mSource -> mSource
    void draw(android.graphics.Canvas) -> draw
    int getMemorySize() -> getMemorySize
    java.lang.String getUrl() -> getUrl
    int getSource() -> getSource
    boolean isBitmapValid() -> isBitmapValid
    boolean isBitmapMutable() -> isBitmapMutable
    boolean isBeingDisplayed() -> isBeingDisplayed
    boolean isReferencedByCache() -> isReferencedByCache
    void setBeingUsed(boolean) -> setBeingUsed
    void setCached(boolean) -> setCached
    void cancelCheckStateCallback() -> cancelCheckStateCallback
    void checkState() -> checkState
    void checkState(boolean) -> checkState
    void access$000(uk.co.senab.bitmapcache.CacheableBitmapDrawable,boolean) -> access$000
uk.co.senab.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable -> uk.co.senab.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable:
    void run(uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> run
    void run(java.lang.Object) -> run
uk.co.senab.bitmapcache.CacheableImageView -> uk.co.senab.bitmapcache.CacheableImageView:
    void onDrawableSet(android.graphics.drawable.Drawable) -> onDrawableSet
    void onDrawableUnset(android.graphics.drawable.Drawable) -> onDrawableUnset
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void onDetachedFromWindow() -> onDetachedFromWindow
uk.co.senab.bitmapcache.Constants -> uk.co.senab.bitmapcache.Constants:
    boolean DEBUG -> DEBUG
    java.lang.String LOG_TAG -> LOG_TAG
    int UNUSED_DRAWABLE_RECYCLE_DELAY_MS -> UNUSED_DRAWABLE_RECYCLE_DELAY_MS
uk.co.senab.bitmapcache.IoUtils -> uk.co.senab.bitmapcache.IoUtils:
    void closeStream(java.io.InputStream) -> closeStream
    void closeStream(java.io.OutputStream) -> closeStream
    long copy(java.io.File,java.io.OutputStream) -> copy
    long copy(java.io.InputStream,java.io.File) -> copy
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
uk.co.senab.bitmapcache.Md5 -> uk.co.senab.bitmapcache.Md5:
    char[] DIGITS -> DIGITS
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
uk.co.senab.bitmapcache.SDK11 -> uk.co.senab.bitmapcache.SDK11:
    void addInBitmapOption(android.graphics.BitmapFactory$Options,android.graphics.Bitmap) -> addInBitmapOption
uk.co.senab.bitmapcache.WeakReferenceRunnable -> uk.co.senab.bitmapcache.WeakReferenceRunnable:
    java.lang.ref.WeakReference mObjectRef -> mObjectRef
    void run() -> run
    void run(java.lang.Object) -> run
uk.co.senab.photoview.Compat -> uk.co.senab.photoview.Compat:
    int SIXTY_FPS_INTERVAL -> SIXTY_FPS_INTERVAL
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationJellyBean(android.view.View,java.lang.Runnable) -> postOnAnimationJellyBean
    int getPointerIndex(int) -> getPointerIndex
    int getPointerIndexEclair(int) -> getPointerIndexEclair
    int getPointerIndexHoneyComb(int) -> getPointerIndexHoneyComb
uk.co.senab.photoview.IPhotoView -> uk.co.senab.photoview.IPhotoView:
    boolean canZoom() -> canZoom
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    boolean setDisplayMatrix(android.graphics.Matrix) -> setDisplayMatrix
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    float getMinScale() -> getMinScale
    float getMinimumScale() -> getMinimumScale
    float getMidScale() -> getMidScale
    float getMediumScale() -> getMediumScale
    float getMaxScale() -> getMaxScale
    float getMaximumScale() -> getMaximumScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMinimumScale(float) -> setMinimumScale
    void setMidScale(float) -> setMidScale
    void setMediumScale(float) -> setMediumScale
    void setMaxScale(float) -> setMaxScale
    void setMaximumScale(float) -> setMaximumScale
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScale(float) -> setScale
    void setScale(float,boolean) -> setScale
    void setScale(float,float,float,boolean) -> setScale
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void setPhotoViewRotation(float) -> setPhotoViewRotation
uk.co.senab.photoview.PhotoView -> uk.co.senab.photoview.PhotoView:
    uk.co.senab.photoview.PhotoViewAttacher mAttacher -> mAttacher
    android.widget.ImageView$ScaleType mPendingScaleType -> mPendingScaleType
    void setPhotoViewRotation(float) -> setPhotoViewRotation
    boolean canZoom() -> canZoom
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    boolean setDisplayMatrix(android.graphics.Matrix) -> setDisplayMatrix
    float getMinScale() -> getMinScale
    float getMinimumScale() -> getMinimumScale
    float getMidScale() -> getMidScale
    float getMediumScale() -> getMediumScale
    float getMaxScale() -> getMaxScale
    float getMaximumScale() -> getMaximumScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMinimumScale(float) -> setMinimumScale
    void setMidScale(float) -> setMidScale
    void setMediumScale(float) -> setMediumScale
    void setMaxScale(float) -> setMaxScale
    void setMaximumScale(float) -> setMaximumScale
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScale(float) -> setScale
    void setScale(float,boolean) -> setScale
    void setScale(float,float,float,boolean) -> setScale
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void onDetachedFromWindow() -> onDetachedFromWindow
uk.co.senab.photoview.PhotoViewAttacher -> uk.co.senab.photoview.PhotoViewAttacher:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean DEBUG -> DEBUG
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    int ZOOM_DURATION -> ZOOM_DURATION
    int EDGE_NONE -> EDGE_NONE
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_BOTH -> EDGE_BOTH
    float DEFAULT_MAX_SCALE -> DEFAULT_MAX_SCALE
    float DEFAULT_MID_SCALE -> DEFAULT_MID_SCALE
    float DEFAULT_MIN_SCALE -> DEFAULT_MIN_SCALE
    float mMinScale -> mMinScale
    float mMidScale -> mMidScale
    float mMaxScale -> mMaxScale
    boolean mAllowParentInterceptOnEdge -> mAllowParentInterceptOnEdge
    java.lang.ref.WeakReference mImageView -> mImageView
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    uk.co.senab.photoview.gestures.GestureDetector mScaleDragDetector -> mScaleDragDetector
    android.graphics.Matrix mBaseMatrix -> mBaseMatrix
    android.graphics.Matrix mDrawMatrix -> mDrawMatrix
    android.graphics.Matrix mSuppMatrix -> mSuppMatrix
    android.graphics.RectF mDisplayRect -> mDisplayRect
    float[] mMatrixValues -> mMatrixValues
    uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener mMatrixChangeListener -> mMatrixChangeListener
    uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener mPhotoTapListener -> mPhotoTapListener
    uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener mViewTapListener -> mViewTapListener
    android.view.View$OnLongClickListener mLongClickListener -> mLongClickListener
    int mIvTop -> mIvTop
    int mIvRight -> mIvRight
    int mIvBottom -> mIvBottom
    int mIvLeft -> mIvLeft
    uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable mCurrentFlingRunnable -> mCurrentFlingRunnable
    int mScrollEdge -> mScrollEdge
    boolean mZoomEnabled -> mZoomEnabled
    android.widget.ImageView$ScaleType mScaleType -> mScaleType
    float mLastRotation -> mLastRotation
    void checkZoomLevels(float,float,float) -> checkZoomLevels
    boolean hasDrawable(android.widget.ImageView) -> hasDrawable
    boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> isSupportedScaleType
    void setImageViewScaleTypeMatrix(android.widget.ImageView) -> setImageViewScaleTypeMatrix
    boolean canZoom() -> canZoom
    void cleanup() -> cleanup
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    boolean setDisplayMatrix(android.graphics.Matrix) -> setDisplayMatrix
    void setPhotoViewRotation(float) -> setPhotoViewRotation
    android.widget.ImageView getImageView() -> getImageView
    float getMinScale() -> getMinScale
    float getMinimumScale() -> getMinimumScale
    float getMidScale() -> getMidScale
    float getMediumScale() -> getMediumScale
    float getMaxScale() -> getMaxScale
    float getMaximumScale() -> getMaximumScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void onDrag(float,float) -> onDrag
    void onFling(float,float,float,float) -> onFling
    void onGlobalLayout() -> onGlobalLayout
    void onScale(float,float,float) -> onScale
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMinimumScale(float) -> setMinimumScale
    void setMidScale(float) -> setMidScale
    void setMediumScale(float) -> setMediumScale
    void setMaxScale(float) -> setMaxScale
    void setMaximumScale(float) -> setMaximumScale
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScale(float) -> setScale
    void setScale(float,boolean) -> setScale
    void setScale(float,float,float,boolean) -> setScale
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void update() -> update
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    android.graphics.Matrix getDrawMatrix() -> getDrawMatrix
    void cancelFling() -> cancelFling
    void checkAndDisplayMatrix() -> checkAndDisplayMatrix
    void checkImageViewScaleType() -> checkImageViewScaleType
    boolean checkMatrixBounds() -> checkMatrixBounds
    android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> getDisplayRect
    float getValue(android.graphics.Matrix,int) -> getValue
    void resetMatrix() -> resetMatrix
    void setImageViewMatrix(android.graphics.Matrix) -> setImageViewMatrix
    void updateBaseMatrix(android.graphics.drawable.Drawable) -> updateBaseMatrix
    int getImageViewWidth(android.widget.ImageView) -> getImageViewWidth
    int getImageViewHeight(android.widget.ImageView) -> getImageViewHeight
    android.view.View$OnLongClickListener access$000(uk.co.senab.photoview.PhotoViewAttacher) -> access$000
    android.graphics.Matrix access$100(uk.co.senab.photoview.PhotoViewAttacher) -> access$100
    void access$200(uk.co.senab.photoview.PhotoViewAttacher) -> access$200
    boolean access$300() -> access$300
    void access$400(uk.co.senab.photoview.PhotoViewAttacher,android.graphics.Matrix) -> access$400
uk.co.senab.photoview.PhotoViewAttacher$1 -> uk.co.senab.photoview.PhotoViewAttacher$1:
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> this$0
    void onLongPress(android.view.MotionEvent) -> onLongPress
uk.co.senab.photoview.PhotoViewAttacher$2 -> uk.co.senab.photoview.PhotoViewAttacher$2:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable:
    float mFocalX -> mFocalX
    float mFocalY -> mFocalY
    long mStartTime -> mStartTime
    float mZoomStart -> mZoomStart
    float mZoomEnd -> mZoomEnd
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> this$0
    void run() -> run
    float interpolate() -> interpolate
uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable -> uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy mScroller -> mScroller
    int mCurrentX -> mCurrentX
    int mCurrentY -> mCurrentY
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> this$0
    void cancelFling() -> cancelFling
    void fling(int,int,int,int) -> fling
    void run() -> run
uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener -> uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener:
    void onMatrixChanged(android.graphics.RectF) -> onMatrixChanged
uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener -> uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener:
    void onPhotoTap(android.view.View,float,float) -> onPhotoTap
uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener -> uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener:
    void onViewTap(android.view.View,float,float) -> onViewTap
uk.co.senab.photoview.gestures.CupcakeGestureDetector -> uk.co.senab.photoview.gestures.CupcakeGestureDetector:
    uk.co.senab.photoview.gestures.OnGestureListener mListener -> mListener
    java.lang.String LOG_TAG -> LOG_TAG
    float mLastTouchX -> mLastTouchX
    float mLastTouchY -> mLastTouchY
    float mTouchSlop -> mTouchSlop
    float mMinimumVelocity -> mMinimumVelocity
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mIsDragging -> mIsDragging
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> setOnGestureListener
    float getActiveX(android.view.MotionEvent) -> getActiveX
    float getActiveY(android.view.MotionEvent) -> getActiveY
    boolean isScaling() -> isScaling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
uk.co.senab.photoview.gestures.EclairGestureDetector -> uk.co.senab.photoview.gestures.EclairGestureDetector:
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    int mActivePointerId -> mActivePointerId
    int mActivePointerIndex -> mActivePointerIndex
    float getActiveX(android.view.MotionEvent) -> getActiveX
    float getActiveY(android.view.MotionEvent) -> getActiveY
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
uk.co.senab.photoview.gestures.FroyoGestureDetector -> uk.co.senab.photoview.gestures.FroyoGestureDetector:
    android.view.ScaleGestureDetector mDetector -> mDetector
    boolean isScaling() -> isScaling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
uk.co.senab.photoview.gestures.FroyoGestureDetector$1 -> uk.co.senab.photoview.gestures.FroyoGestureDetector$1:
    uk.co.senab.photoview.gestures.FroyoGestureDetector this$0 -> this$0
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
uk.co.senab.photoview.gestures.GestureDetector -> uk.co.senab.photoview.gestures.GestureDetector:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isScaling() -> isScaling
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> setOnGestureListener
uk.co.senab.photoview.gestures.OnGestureListener -> uk.co.senab.photoview.gestures.OnGestureListener:
    void onDrag(float,float) -> onDrag
    void onFling(float,float,float,float) -> onFling
    void onScale(float,float,float) -> onScale
uk.co.senab.photoview.gestures.VersionedGestureDetector -> uk.co.senab.photoview.gestures.VersionedGestureDetector:
    uk.co.senab.photoview.gestures.GestureDetector newInstance(android.content.Context,uk.co.senab.photoview.gestures.OnGestureListener) -> newInstance
uk.co.senab.photoview.log.LogManager -> uk.co.senab.photoview.log.LogManager:
    uk.co.senab.photoview.log.Logger logger -> logger
    void setLogger(uk.co.senab.photoview.log.Logger) -> setLogger
    uk.co.senab.photoview.log.Logger getLogger() -> getLogger
uk.co.senab.photoview.log.Logger -> uk.co.senab.photoview.log.Logger:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
uk.co.senab.photoview.log.LoggerDefault -> uk.co.senab.photoview.log.LoggerDefault:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
uk.co.senab.photoview.scrollerproxy.GingerScroller -> uk.co.senab.photoview.scrollerproxy.GingerScroller:
    android.widget.OverScroller mScroller -> mScroller
    boolean mFirstScroll -> mFirstScroll
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
uk.co.senab.photoview.scrollerproxy.IcsScroller -> uk.co.senab.photoview.scrollerproxy.IcsScroller:
    boolean computeScrollOffset() -> computeScrollOffset
uk.co.senab.photoview.scrollerproxy.PreGingerScroller -> uk.co.senab.photoview.scrollerproxy.PreGingerScroller:
    android.widget.Scroller mScroller -> mScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
uk.co.senab.photoview.scrollerproxy.ScrollerProxy -> uk.co.senab.photoview.scrollerproxy.ScrollerProxy:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy getScroller(android.content.Context) -> getScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
